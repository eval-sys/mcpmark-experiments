{
  "data": [
    {
      "task_id": "gaming_accessories_analysis",
      "task_name": "Gaming Accessories Analysis",
      "category_id": "shopping",
      "category_name": "Shopping",
      "description": "Research gaming peripherals by analyzing technical specifications, comparing performance metrics, evaluating user reviews, tracking price trends, and creating detailed gaming accessory recommendations.",
      "author": "Yaoqi Ye",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "search aggregation",
        "comparative analysis",
        "data extraction"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/one-stop-market.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "health_routine_optimization",
      "task_name": "Health Routine Optimization",
      "category_id": "shopping",
      "category_name": "Shopping",
      "description": "Optimize health and wellness product selections by analyzing nutritional supplements, fitness equipment, creating personalized routines, and tracking health metrics for lifestyle improvements.",
      "author": "Yaoqi Ye",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "comparative analysis",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/one-stop-market.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "advanced_product_analysis",
      "task_name": "Advanced Product Analysis",
      "category_id": "shopping",
      "category_name": "Shopping",
      "description": "Perform comprehensive product analysis including feature comparisons, price tracking, review aggregation, customer sentiment analysis, and generate detailed recommendation reports for informed purchasing decisions.",
      "author": "Yaoqi Ye",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "comparative analysis",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/one-stop-market.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "holiday_baking_competition",
      "task_name": "Holiday Baking Competition",
      "category_id": "shopping",
      "category_name": "Shopping",
      "description": "Research baking supplies for competition preparation including ingredient quality analysis, equipment comparisons, recipe optimization, and creating comprehensive shopping list with budget recommendations.",
      "author": "Yaoqi Ye",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "search aggregation",
        "comparative analysis",
        "inventory management"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/one-stop-market.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "running_shoes_purchase",
      "task_name": "Running Shoes Purchase",
      "category_id": "shopping",
      "category_name": "Shopping",
      "description": "Research running footwear by analyzing biomechanical features, comparing cushioning technologies, evaluating durability ratings, considering user preferences, and recommending optimal shoe selections.",
      "author": "Yaoqi Ye",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "search aggregation",
        "comparative analysis"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/one-stop-market.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "printer_keyboard_search",
      "task_name": "Printer Keyboard Search",
      "category_id": "shopping",
      "category_name": "Shopping",
      "description": "Search and evaluate office equipment by comparing printer specifications, keyboard ergonomics, analyzing user reviews, tracking prices, and generating detailed purchase recommendations report.",
      "author": "Yaoqi Ye",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "search aggregation",
        "comparative analysis",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/one-stop-market.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "multi_category_budget_analysis",
      "task_name": "Multi Category Budget Analysis",
      "category_id": "shopping",
      "category_name": "Shopping",
      "description": "Analyze spending patterns across multiple product categories, optimize budget allocation, identify cost-saving opportunities, and generate comprehensive financial planning report with purchase recommendations.",
      "author": "Yaoqi Ye",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "search aggregation",
        "content submission",
        "comparative analysis",
        "inventory management"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/one-stop-market.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "marketing_customer_analysis",
      "task_name": "Marketing Customer Analysis",
      "category_id": "shopping_admin",
      "category_name": "Shopping Admin",
      "description": "Analyze customer behavior patterns using admin analytics, segment user demographics, track purchase histories, evaluate campaign effectiveness, and generate comprehensive marketing intelligence reports.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "comparative analysis",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/magento-admin.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "ny_expansion_analysis",
      "task_name": "NY Expansion Analysis",
      "category_id": "shopping_admin",
      "category_name": "Shopping Admin",
      "description": "Prepare New York market expansion strategy by analyzing regional demographics, evaluating competitor presence, assessing logistics requirements, and creating detailed market entry plan.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "comparative analysis",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/magento-admin.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "customer_segmentation_setup",
      "task_name": "Customer Segmentation Setup",
      "category_id": "shopping_admin",
      "category_name": "Shopping Admin",
      "description": "Configure customer segmentation system in admin panel by defining demographic criteria, creating behavior-based segments, implementing targeting rules, and setting up automated marketing workflows.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "content submission",
        "inventory management"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/magento-admin.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "products_sales_analysis",
      "task_name": "Products Sales Analysis",
      "category_id": "shopping_admin",
      "category_name": "Shopping Admin",
      "description": "Generate comprehensive sales performance reports by extracting product metrics, analyzing revenue trends, identifying top performers, evaluating inventory turnover, and creating actionable insights.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "comparative analysis",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/magento-admin.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "fitness_promotion_strategy",
      "task_name": "Fitness Promotion Strategy",
      "category_id": "shopping_admin",
      "category_name": "Shopping Admin",
      "description": "Develop fitness product promotion campaigns by analyzing sales data, creating targeted offers, configuring promotional rules, and implementing cross-selling strategies in admin dashboard.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "comparative analysis",
        "inventory management",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/magento-admin.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "search_filtering_operations",
      "task_name": "Search Filtering Operations",
      "category_id": "shopping_admin",
      "category_name": "Shopping Admin",
      "description": "Configure advanced search and filtering systems in admin interface, implement category hierarchies, set up attribute filters, and optimize search algorithms for user experience.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/magento-admin.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "sales_inventory_analysis",
      "task_name": "Sales Inventory Analysis",
      "category_id": "shopping_admin",
      "category_name": "Shopping Admin",
      "description": "Analyze sales patterns and inventory levels to optimize stock management, identify slow-moving items, predict demand trends, and generate restocking recommendations.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "comparative analysis",
        "inventory management"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/magento-admin.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "llm_research_summary",
      "task_name": "LLM Research Summary",
      "category_id": "reddit",
      "category_name": "Reddit",
      "description": "Aggregate and analyze LLM research discussions across multiple forums, collect trending topics, compile technical insights, and create comprehensive summary post with community engagement.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "search aggregation",
        "content submission",
        "user interaction"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/postmill.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "movie_reviewer_analysis",
      "task_name": "Movie Reviewer Analysis",
      "category_id": "reddit",
      "category_name": "Reddit",
      "description": "Analyze movie review patterns by creating reviewer profile, collecting ratings data, tracking review trends, and generating analytical report on community movie preferences and discussions.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "user interaction",
        "data extraction",
        "comparative analysis",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/postmill.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "budget_europe_travel",
      "task_name": "Budget Europe Travel",
      "category_id": "reddit",
      "category_name": "Reddit",
      "description": "Create comprehensive budget travel resource for European destinations by establishing dedicated travel community with integrated wiki guides and engaging travel content.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "content submission",
        "user interaction"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/postmill.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "routine_tracker_forum",
      "task_name": "Routine Tracker Forum",
      "category_id": "reddit",
      "category_name": "Reddit",
      "description": "Establish productivity community by creating account, setting up routine tracking forum, implementing daily habit systems, and engaging members with structured productivity challenges and resources.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "user interaction",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/postmill.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "ai_data_analyst",
      "task_name": "AI Data Analyst",
      "category_id": "reddit",
      "category_name": "Reddit",
      "description": "Create account on forum platform, collect AI/ML discussion metrics including post counts, vote data, and analyze community engagement patterns through systematic data extraction.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "user interaction",
        "data extraction",
        "comparative analysis"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/postmill.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "buyitforlife_research",
      "task_name": "Buy It For Life Research",
      "category_id": "reddit",
      "category_name": "Reddit",
      "description": "Research durable lifetime-quality products by creating forum account, analyzing community recommendations, extracting product data, and compiling comprehensive durability report with voting metrics.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "user interaction",
        "data extraction",
        "search aggregation",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/postmill.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "nba_statistics_analysis",
      "task_name": "NBA Statistics Analysis",
      "category_id": "reddit",
      "category_name": "Reddit",
      "description": "Create sports analytics account, collect NBA player statistics from forum discussions, analyze basketball performance metrics, and compile comprehensive statistical report with community insights.",
      "author": "Fanqing Meng",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "user interaction",
        "data extraction",
        "comparative analysis",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/postmill.mp4",
        "stateOriginalUrl": "https://github.com/web-arena-x/webarena/tree/main/environment_docker"
      }
    },
    {
      "task_id": "pattern_matching",
      "task_name": "Pattern Matching",
      "category_id": "file_context",
      "category_name": "File Context",
      "description": "Search multiple files for shared character sequences and precisely locate all matching pattern occurrences within the target files.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-06",
      "difficulty": "L3",
      "tags": [
        "pattern analysis",
        "cross-referencing"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "file_context/\n    ├── file_01.txt\n    ├── file_02.txt\n    ├── file_03.txt\n    ├── file_04.txt\n    ├── file_05.txt\n    ├── file_06.txt\n    ├── file_07.txt\n    ├── file_08.txt\n    ├── file_09.txt\n    ├── file_10.txt\n    ├── file_11.txt\n    ├── file_12.txt\n    ├── file_13.txt\n    ├── file_14.txt\n    ├── file_15.txt\n    ├── file_16.txt\n    ├── file_17.txt\n    ├── file_18.txt\n    ├── file_19.txt\n    ├── file_20.txt\n    └── large_file.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/file_context.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "file_splitting",
      "task_name": "File Splitting",
      "category_id": "file_context",
      "category_name": "File Context",
      "description": "Split a large text file into multiple equal-length segments for easier processing, distribution, and parallel handling of content.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-08",
      "difficulty": "L3",
      "tags": [
        "content transformation"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "file_context/\n    ├── file_01.txt\n    ├── file_02.txt\n    ├── file_03.txt\n    ├── file_04.txt\n    ├── file_05.txt\n    ├── file_06.txt\n    ├── file_07.txt\n    ├── file_08.txt\n    ├── file_09.txt\n    ├── file_10.txt\n    ├── file_11.txt\n    ├── file_12.txt\n    ├── file_13.txt\n    ├── file_14.txt\n    ├── file_15.txt\n    ├── file_16.txt\n    ├── file_17.txt\n    ├── file_18.txt\n    ├── file_19.txt\n    ├── file_20.txt\n    └── large_file.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/file_context.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "duplicates_searching",
      "task_name": "Duplicates Searching",
      "category_id": "file_context",
      "category_name": "File Context",
      "description": "Scan directory to identify files with identical content, then organize all duplicate files into a separate dedicated directory for cleanup.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-06",
      "difficulty": "L3",
      "tags": [
        "pattern analysis",
        "file organization"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "file_context/\n    ├── file_01.txt\n    ├── file_02.txt\n    ├── file_03.txt\n    ├── file_04.txt\n    ├── file_05.txt\n    ├── file_06.txt\n    ├── file_07.txt\n    ├── file_08.txt\n    ├── file_09.txt\n    ├── file_10.txt\n    ├── file_11.txt\n    ├── file_12.txt\n    ├── file_13.txt\n    ├── file_14.txt\n    ├── file_15.txt\n    ├── file_16.txt\n    ├── file_17.txt\n    ├── file_18.txt\n    ├── file_19.txt\n    ├── file_20.txt\n    └── large_file.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/file_context.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "uppercase",
      "task_name": "Uppercase",
      "category_id": "file_context",
      "category_name": "File Context",
      "description": "Convert the content of 10 specified files to uppercase format and calculate the total word count across all processed files.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-19",
      "difficulty": "L3",
      "tags": [
        "content transformation",
        "data extraction"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "file_context/\n    ├── file_01.txt\n    ├── file_02.txt\n    ├── file_03.txt\n    ├── file_04.txt\n    ├── file_05.txt\n    ├── file_06.txt\n    ├── file_07.txt\n    ├── file_08.txt\n    ├── file_09.txt\n    ├── file_10.txt\n    ├── file_11.txt\n    ├── file_12.txt\n    ├── file_13.txt\n    ├── file_14.txt\n    ├── file_15.txt\n    ├── file_16.txt\n    ├── file_17.txt\n    ├── file_18.txt\n    ├── file_19.txt\n    ├── file_20.txt\n    └── large_file.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/file_context.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "file_merging",
      "task_name": "File Merging",
      "category_id": "file_context",
      "category_name": "File Context",
      "description": "Identify the 10 smallest text files in the directory, then merge their content in alphabetical order into a single consolidated file.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-07",
      "difficulty": "L3",
      "tags": [
        "content transformation",
        "file organization"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "file_context/\n    ├── file_01.txt\n    ├── file_02.txt\n    ├── file_03.txt\n    ├── file_04.txt\n    ├── file_05.txt\n    ├── file_06.txt\n    ├── file_07.txt\n    ├── file_08.txt\n    ├── file_09.txt\n    ├── file_10.txt\n    ├── file_11.txt\n    ├── file_12.txt\n    ├── file_13.txt\n    ├── file_14.txt\n    ├── file_15.txt\n    ├── file_16.txt\n    ├── file_17.txt\n    ├── file_18.txt\n    ├── file_19.txt\n    ├── file_20.txt\n    └── large_file.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/file_context.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "budget_computation",
      "task_name": "Budget Computation",
      "category_id": "desktop_template",
      "category_name": "Desktop Template",
      "description": "Analyze personal expense data extracted from desktop files to create a detailed budget summary report for financial review.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-14",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "desktop_template/\n    ├── Archives/\n    │       ├── backup_contacts.csv\n    │       └── tax_documents_2022.csv\n    ├── Desktop/\n    │       └── contacts.csv\n    ├── Documents/\n    │       ├── Personal/\n    │       │       └── tax_info_2023.csv\n    │       ├── Projects/\n    │       │       └── budget_tracker.csv\n    │       ├── Work/\n    │       │       ├── client_list.csv\n    │       │       └── timesheet.csv\n    │       ├── budget.csv\n    │       └── important_dates.csv\n    ├── Downloads/\n    │       ├── expenses.csv\n    │       ├── fitness_log.csv\n    │       └── price_comparisons.csv\n    ├── Temp/\n    │       └── test_data.csv\n    ├── book_list.txt\n    ├── bookmark_export.txt\n    ├── calculations.txt\n    ├── correspondence_2023.txt\n    ├── draft_letter.txt\n    ├── emergency_contacts.txt\n    ├── example.txt\n    └── experiment_results.txt\n",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/desktop_template.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "contact_information",
      "task_name": "Contact Information",
      "category_id": "desktop_template",
      "category_name": "Desktop Template",
      "description": "Extract contact details from various file formats on desktop and perform reasoning analysis on the collected relationship data.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-14",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "cross-referencing"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "desktop_template/\n    ├── Archives/\n    │       ├── backup_contacts.csv\n    │       └── tax_documents_2022.csv\n    ├── Desktop/\n    │       └── contacts.csv\n    ├── Documents/\n    │       ├── Personal/\n    │       │       └── tax_info_2023.csv\n    │       ├── Projects/\n    │       │       └── budget_tracker.csv\n    │       ├── Work/\n    │       │       ├── client_list.csv\n    │       │       └── timesheet.csv\n    │       ├── budget.csv\n    │       └── important_dates.csv\n    ├── Downloads/\n    │       ├── expenses.csv\n    │       ├── fitness_log.csv\n    │       └── price_comparisons.csv\n    ├── Temp/\n    │       └── test_data.csv\n    ├── book_list.txt\n    ├── bookmark_export.txt\n    ├── calculations.txt\n    ├── correspondence_2023.txt\n    ├── draft_letter.txt\n    ├── emergency_contacts.txt\n    ├── example.txt\n    └── experiment_results.txt\n",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/desktop_template.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "file_arrangement",
      "task_name": "File Arrangement",
      "category_id": "desktop_template",
      "category_name": "Desktop Template",
      "description": "Classify and organize desktop files into appropriate categories following specified classification rules and naming convention standards.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-14",
      "difficulty": "L3",
      "tags": [
        "file organization"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "desktop_template/\n    ├── Archives/\n    │       ├── backup_contacts.csv\n    │       └── tax_documents_2022.csv\n    ├── Desktop/\n    │       └── contacts.csv\n    ├── Documents/\n    │       ├── Personal/\n    │       │       └── tax_info_2023.csv\n    │       ├── Projects/\n    │       │       └── budget_tracker.csv\n    │       ├── Work/\n    │       │       ├── client_list.csv\n    │       │       └── timesheet.csv\n    │       ├── budget.csv\n    │       └── important_dates.csv\n    ├── Downloads/\n    │       ├── expenses.csv\n    │       ├── fitness_log.csv\n    │       └── price_comparisons.csv\n    ├── Temp/\n    │       └── test_data.csv\n    ├── book_list.txt\n    ├── bookmark_export.txt\n    ├── calculations.txt\n    ├── correspondence_2023.txt\n    ├── draft_letter.txt\n    ├── emergency_contacts.txt\n    ├── example.txt\n    └── experiment_results.txt\n",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/desktop_template.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "find_math_paper",
      "task_name": "Find Math Paper",
      "category_id": "papers",
      "category_name": "Papers",
      "description": "Search through academic papers to identify and locate mathematics-related content that satisfies specific mathematical criteria and research requirements.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "pattern analysis",
        "data extraction"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "papers/\n    ├── 1707.06347.html\n    ├── 2105.04165.html\n    ├── 2201.11903.html\n    ├── 2303.08774.html\n    ├── 2306.08640.html\n    ├── 2310.02255.html\n    ├── 2310.08446.html\n    ├── 2312.00849.html\n    ├── 2312.07533.html\n    ├── 2312.11805.html\n    ├── 2402.00253.html\n    ├── 2402.03300.html\n    ├── 2403.05530.html\n    ├── 2404.13046.html\n    ├── 2404.14367.html\n    ├── 2404.14396.html\n    ├── 2405.09818.html\n    ├── 2405.13911.html\n    ├── 2405.16473.html\n    ├── 2405.16640.html\n    ├── 2406.08478.html\n    ├── 2406.16852.html\n    ├── 2406.17294.html\n    ├── 2407.01284.html\n    ├── 2407.01509.html\n    ├── 2407.21783.html\n    ├── 2408.03326.html\n    ├── 2408.12528.html\n    ├── 2409.19256.html\n    ├── 2410.05993.html\n    ├── 2410.06166.html\n    ├── 2410.10563.html\n    ├── 2410.13848.html\n    ├── 2410.17885.html\n    ├── 2410.21276.html\n    ├── 2411.07975.html\n    ├── 2411.10442.html\n    ├── 2411.11930.html\n    ├── 2411.14432.html\n    ├── 2412.05271.html\n    ├── 2412.08443.html\n    ├── 2412.10302.html\n    ├── 2412.15115.html\n    ├── 2412.16720.html\n    ├── 2412.17256.html\n    ├── 2412.18319.html\n    ├── 2412.20631.html\n    ├── 2501.04686.html\n    ├── 2501.06186.html\n    ├── 2501.12599.html\n    ├── 2501.12948.html\n    ├── 2501.17811.html\n    ├── 2502.01456.html\n    ├── 2502.09621.html\n    ├── 2502.10391.html\n    ├── 2502.13923.html\n    ├── 2503.01785.html\n    ├── 2503.06520.html\n    ├── 2503.06749.html\n    ├── 2503.07065.html\n    ├── 2503.07365.html\n    ├── 2503.07536.html\n    ├── 2503.10291.html\n    ├── 2503.10615.html\n    ├── 2503.12937.html\n    ├── 2503.13939.html\n    ├── 2503.14476.html\n    ├── 2503.17352.html\n    ├── 2503.18892.html\n    ├── 2503.19786.html\n    ├── 2503.20783.html\n    ├── 2503.21620.html\n    ├── 2503.21776.html\n    ├── 2503.22679.html\n    ├── 2504.02587.html\n    ├── 2504.05599.html\n    ├── 2504.07491.html\n    ├── 2504.07934.html\n    ├── 2504.07954.html\n    ├── 2504.11455.html\n    ├── 2504.14945.html\n    ├── 2504.16656.html\n    ├── 2505.00703.html\n    └── arxiv_2025.bib",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/papers.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "organize_legacy_papers",
      "task_name": "Organize Legacy Papers",
      "category_id": "papers",
      "category_name": "Papers",
      "description": "Structure and organize older academic papers from 2023 and earlier into a year-based hierarchical directory system with proper documentation.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "file organization",
        "data extraction",
        "cross-referencing"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "papers/\n    ├── 1707.06347.html\n    ├── 2105.04165.html\n    ├── 2201.11903.html\n    ├── 2303.08774.html\n    ├── 2306.08640.html\n    ├── 2310.02255.html\n    ├── 2310.08446.html\n    ├── 2312.00849.html\n    ├── 2312.07533.html\n    ├── 2312.11805.html\n    ├── 2402.00253.html\n    ├── 2402.03300.html\n    ├── 2403.05530.html\n    ├── 2404.13046.html\n    ├── 2404.14367.html\n    ├── 2404.14396.html\n    ├── 2405.09818.html\n    ├── 2405.13911.html\n    ├── 2405.16473.html\n    ├── 2405.16640.html\n    ├── 2406.08478.html\n    ├── 2406.16852.html\n    ├── 2406.17294.html\n    ├── 2407.01284.html\n    ├── 2407.01509.html\n    ├── 2407.21783.html\n    ├── 2408.03326.html\n    ├── 2408.12528.html\n    ├── 2409.19256.html\n    ├── 2410.05993.html\n    ├── 2410.06166.html\n    ├── 2410.10563.html\n    ├── 2410.13848.html\n    ├── 2410.17885.html\n    ├── 2410.21276.html\n    ├── 2411.07975.html\n    ├── 2411.10442.html\n    ├── 2411.11930.html\n    ├── 2411.14432.html\n    ├── 2412.05271.html\n    ├── 2412.08443.html\n    ├── 2412.10302.html\n    ├── 2412.15115.html\n    ├── 2412.16720.html\n    ├── 2412.17256.html\n    ├── 2412.18319.html\n    ├── 2412.20631.html\n    ├── 2501.04686.html\n    ├── 2501.06186.html\n    ├── 2501.12599.html\n    ├── 2501.12948.html\n    ├── 2501.17811.html\n    ├── 2502.01456.html\n    ├── 2502.09621.html\n    ├── 2502.10391.html\n    ├── 2502.13923.html\n    ├── 2503.01785.html\n    ├── 2503.06520.html\n    ├── 2503.06749.html\n    ├── 2503.07065.html\n    ├── 2503.07365.html\n    ├── 2503.07536.html\n    ├── 2503.10291.html\n    ├── 2503.10615.html\n    ├── 2503.12937.html\n    ├── 2503.13939.html\n    ├── 2503.14476.html\n    ├── 2503.17352.html\n    ├── 2503.18892.html\n    ├── 2503.19786.html\n    ├── 2503.20783.html\n    ├── 2503.21620.html\n    ├── 2503.21776.html\n    ├── 2503.22679.html\n    ├── 2504.02587.html\n    ├── 2504.05599.html\n    ├── 2504.07491.html\n    ├── 2504.07934.html\n    ├── 2504.07954.html\n    ├── 2504.11455.html\n    ├── 2504.14945.html\n    ├── 2504.16656.html\n    ├── 2505.00703.html\n    └── arxiv_2025.bib",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/papers.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "author_folders",
      "task_name": "Author Folders",
      "category_id": "papers",
      "category_name": "Papers",
      "description": "Analyze academic papers to identify and organize by author, creating separate folders for frequent authors (≥4 papers) and prolific 2025 authors (≥3 papers).",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "file organization",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "papers/\n    ├── 1707.06347.html\n    ├── 2105.04165.html\n    ├── 2201.11903.html\n    ├── 2303.08774.html\n    ├── 2306.08640.html\n    ├── 2310.02255.html\n    ├── 2310.08446.html\n    ├── 2312.00849.html\n    ├── 2312.07533.html\n    ├── 2312.11805.html\n    ├── 2402.00253.html\n    ├── 2402.03300.html\n    ├── 2403.05530.html\n    ├── 2404.13046.html\n    ├── 2404.14367.html\n    ├── 2404.14396.html\n    ├── 2405.09818.html\n    ├── 2405.13911.html\n    ├── 2405.16473.html\n    ├── 2405.16640.html\n    ├── 2406.08478.html\n    ├── 2406.16852.html\n    ├── 2406.17294.html\n    ├── 2407.01284.html\n    ├── 2407.01509.html\n    ├── 2407.21783.html\n    ├── 2408.03326.html\n    ├── 2408.12528.html\n    ├── 2409.19256.html\n    ├── 2410.05993.html\n    ├── 2410.06166.html\n    ├── 2410.10563.html\n    ├── 2410.13848.html\n    ├── 2410.17885.html\n    ├── 2410.21276.html\n    ├── 2411.07975.html\n    ├── 2411.10442.html\n    ├── 2411.11930.html\n    ├── 2411.14432.html\n    ├── 2412.05271.html\n    ├── 2412.08443.html\n    ├── 2412.10302.html\n    ├── 2412.15115.html\n    ├── 2412.16720.html\n    ├── 2412.17256.html\n    ├── 2412.18319.html\n    ├── 2412.20631.html\n    ├── 2501.04686.html\n    ├── 2501.06186.html\n    ├── 2501.12599.html\n    ├── 2501.12948.html\n    ├── 2501.17811.html\n    ├── 2502.01456.html\n    ├── 2502.09621.html\n    ├── 2502.10391.html\n    ├── 2502.13923.html\n    ├── 2503.01785.html\n    ├── 2503.06520.html\n    ├── 2503.06749.html\n    ├── 2503.07065.html\n    ├── 2503.07365.html\n    ├── 2503.07536.html\n    ├── 2503.10291.html\n    ├── 2503.10615.html\n    ├── 2503.12937.html\n    ├── 2503.13939.html\n    ├── 2503.14476.html\n    ├── 2503.17352.html\n    ├── 2503.18892.html\n    ├── 2503.19786.html\n    ├── 2503.20783.html\n    ├── 2503.21620.html\n    ├── 2503.21776.html\n    ├── 2503.22679.html\n    ├── 2504.02587.html\n    ├── 2504.05599.html\n    ├── 2504.07491.html\n    ├── 2504.07934.html\n    ├── 2504.07954.html\n    ├── 2504.11455.html\n    ├── 2504.14945.html\n    ├── 2504.16656.html\n    ├── 2505.00703.html\n    └── arxiv_2025.bib",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/papers.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "english_talent",
      "task_name": "English Talent",
      "category_id": "student_database",
      "category_name": "Student Database",
      "description": "Select qualified students with S/A recommendation grades and TOEFL scores ≥100 for English media operations recruitment opportunities.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-10",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "cross-referencing",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "student_database/\n    ├── 20101250_Patricia_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20101701_Isabella_Davis/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20102572_Michael_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104233_Robert_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104498_Sarah_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104653_Sophia_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104675_Michael_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104846_Christopher_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20107487_Mia_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20108742_Sarah_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20109144_Emma_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20109803_Oliver_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20111634_Isabella_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20112439_Christopher_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20113368_William_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20113603_Robert_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20114397_Isabella_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20114869_Ethan_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115252_Mason_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115632_Elizabeth_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115753_Charlotte_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115924_Michael_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20116232_Olivia_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20119528_Thomas_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20122427_Karen_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20122977_Evelyn_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20123376_Joseph_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20125451_Barbara_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20126203_Barbara_Davis/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20126394_Olivia_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20126471_Ethan_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20127423_John_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20128249_Oliver_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20128879_Christopher_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20129898_Jessica_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20131271_Olivia_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20131518_Sophia_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20132026_Isabella_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20132370_James_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20132669_Noah_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20133527_Mason_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20133697_Isabella_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20135821_Thomas_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20136681_Benjamin_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20136890_Benjamin_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20137514_Lucas_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20139234_Harper_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20139637_Noah_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20139647_Patricia_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20141421_Linda_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20142085_William_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20142383_Amelia_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20143406_Susan_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20143830_James_Garcia/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20146035_Christopher_Garcia/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20146277_William_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20146279_Christopher_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20147301_James_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20147789_James_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20148681_John_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20148778_Susan_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20149712_Jessica_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20151012_Harper_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153174_Benjamin_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153412_Charlotte_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153606_James_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153687_Richard_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20154518_John_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20154710_Benjamin_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20156469_Jennifer_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20156522_Jennifer_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20156851_Noah_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20157943_Harper_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20158266_Sophia_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20158294_Sophia_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20158819_Sarah_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20159113_John_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20159695_James_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20161279_William_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20162253_Mason_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20162542_Mia_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20163356_Ava_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20164515_Patricia_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20164801_Noah_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20165511_Mary_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166436_Christopher_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166487_Barbara_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166564_Ava_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166998_Ava_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20168311_Lucas_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20168491_Karen_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20169515_Thomas_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20171050_Christopher_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20171406_Mary_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20171613_Ethan_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20172106_Isabella_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173259_Michael_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173492_Richard_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173501_Mary_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173517_Susan_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20174207_Richard_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20174369_Mary_Garcia/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20175314_William_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20176169_Lucas_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20176947_Noah_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20177389_James_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20178687_Isabella_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20179461_William_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20179690_Linda_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20181056_Sarah_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20182020_Patricia_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20182390_Ethan_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20183149_David_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20183219_Charlotte_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20184489_Jessica_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20186154_Charlotte_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20186510_James_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187107_David_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187144_Mary_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187892_Christopher_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187921_Mary_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187967_Sarah_Davis/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20188937_James_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189123_Mary_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189192_Olivia_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189268_Emma_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189854_William_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20191265_Joseph_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20192725_Robert_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194054_Michael_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194160_Benjamin_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194164_Sarah_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194525_John_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20195164_Jennifer_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20195982_David_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196776_William_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196896_Olivia_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196961_Joseph_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196998_Ethan_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20198548_Evelyn_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199036_Benjamin_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199583_Mary_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199735_Mason_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199872_Sophia_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199980_James_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20201385_John_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20201800_John_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20202548_Robert_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20203855_Mia_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    └── 20204611_Sarah_Wilson/\n            ├── basic_info.txt\n            └── recommendation_letter.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/student_database.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "duplicate_name",
      "task_name": "Duplicate Name",
      "category_id": "student_database",
      "category_name": "Student Database",
      "description": "Identify students with identical names from a 150-student database and generate a formatted namesake grouping report file.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-10",
      "difficulty": "L3",
      "tags": [
        "pattern analysis",
        "data extraction"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "student_database/\n    ├── 20101250_Patricia_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20101701_Isabella_Davis/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20102572_Michael_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104233_Robert_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104498_Sarah_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104653_Sophia_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104675_Michael_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104846_Christopher_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20107487_Mia_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20108742_Sarah_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20109144_Emma_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20109803_Oliver_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20111634_Isabella_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20112439_Christopher_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20113368_William_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20113603_Robert_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20114397_Isabella_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20114869_Ethan_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115252_Mason_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115632_Elizabeth_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115753_Charlotte_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115924_Michael_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20116232_Olivia_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20119528_Thomas_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20122427_Karen_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20122977_Evelyn_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20123376_Joseph_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20125451_Barbara_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20126203_Barbara_Davis/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20126394_Olivia_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20126471_Ethan_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20127423_John_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20128249_Oliver_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20128879_Christopher_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20129898_Jessica_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20131271_Olivia_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20131518_Sophia_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20132026_Isabella_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20132370_James_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20132669_Noah_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20133527_Mason_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20133697_Isabella_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20135821_Thomas_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20136681_Benjamin_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20136890_Benjamin_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20137514_Lucas_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20139234_Harper_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20139637_Noah_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20139647_Patricia_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20141421_Linda_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20142085_William_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20142383_Amelia_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20143406_Susan_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20143830_James_Garcia/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20146035_Christopher_Garcia/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20146277_William_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20146279_Christopher_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20147301_James_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20147789_James_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20148681_John_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20148778_Susan_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20149712_Jessica_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20151012_Harper_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153174_Benjamin_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153412_Charlotte_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153606_James_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153687_Richard_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20154518_John_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20154710_Benjamin_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20156469_Jennifer_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20156522_Jennifer_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20156851_Noah_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20157943_Harper_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20158266_Sophia_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20158294_Sophia_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20158819_Sarah_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20159113_John_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20159695_James_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20161279_William_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20162253_Mason_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20162542_Mia_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20163356_Ava_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20164515_Patricia_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20164801_Noah_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20165511_Mary_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166436_Christopher_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166487_Barbara_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166564_Ava_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166998_Ava_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20168311_Lucas_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20168491_Karen_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20169515_Thomas_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20171050_Christopher_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20171406_Mary_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20171613_Ethan_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20172106_Isabella_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173259_Michael_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173492_Richard_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173501_Mary_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173517_Susan_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20174207_Richard_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20174369_Mary_Garcia/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20175314_William_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20176169_Lucas_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20176947_Noah_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20177389_James_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20178687_Isabella_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20179461_William_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20179690_Linda_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20181056_Sarah_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20182020_Patricia_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20182390_Ethan_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20183149_David_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20183219_Charlotte_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20184489_Jessica_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20186154_Charlotte_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20186510_James_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187107_David_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187144_Mary_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187892_Christopher_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187921_Mary_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187967_Sarah_Davis/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20188937_James_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189123_Mary_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189192_Olivia_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189268_Emma_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189854_William_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20191265_Joseph_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20192725_Robert_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194054_Michael_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194160_Benjamin_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194164_Sarah_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194525_John_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20195164_Jennifer_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20195982_David_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196776_William_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196896_Olivia_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196961_Joseph_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196998_Ethan_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20198548_Evelyn_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199036_Benjamin_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199583_Mary_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199735_Mason_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199872_Sophia_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199980_James_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20201385_John_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20201800_John_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20202548_Robert_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20203855_Mia_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    └── 20204611_Sarah_Wilson/\n            ├── basic_info.txt\n            └── recommendation_letter.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/student_database.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "gradebased_score",
      "task_name": "Gradebased Score",
      "category_id": "student_database",
      "category_name": "Student Database",
      "description": "Process student numerical scores to calculate letter grades using A-F scale and produce comprehensive grade distribution analysis reports.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-10",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "content transformation",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "student_database/\n    ├── 20101250_Patricia_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20101701_Isabella_Davis/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20102572_Michael_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104233_Robert_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104498_Sarah_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104653_Sophia_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104675_Michael_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20104846_Christopher_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20107487_Mia_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20108742_Sarah_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20109144_Emma_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20109803_Oliver_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20111634_Isabella_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20112439_Christopher_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20113368_William_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20113603_Robert_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20114397_Isabella_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20114869_Ethan_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115252_Mason_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115632_Elizabeth_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115753_Charlotte_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20115924_Michael_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20116232_Olivia_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20119528_Thomas_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20122427_Karen_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20122977_Evelyn_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20123376_Joseph_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20125451_Barbara_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20126203_Barbara_Davis/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20126394_Olivia_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20126471_Ethan_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20127423_John_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20128249_Oliver_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20128879_Christopher_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20129898_Jessica_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20131271_Olivia_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20131518_Sophia_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20132026_Isabella_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20132370_James_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20132669_Noah_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20133527_Mason_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20133697_Isabella_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20135821_Thomas_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20136681_Benjamin_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20136890_Benjamin_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20137514_Lucas_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20139234_Harper_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20139637_Noah_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20139647_Patricia_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20141421_Linda_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20142085_William_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20142383_Amelia_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20143406_Susan_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20143830_James_Garcia/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20146035_Christopher_Garcia/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20146277_William_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20146279_Christopher_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20147301_James_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20147789_James_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20148681_John_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20148778_Susan_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20149712_Jessica_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20151012_Harper_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153174_Benjamin_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153412_Charlotte_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153606_James_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20153687_Richard_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20154518_John_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20154710_Benjamin_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20156469_Jennifer_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20156522_Jennifer_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20156851_Noah_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20157943_Harper_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20158266_Sophia_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20158294_Sophia_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20158819_Sarah_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20159113_John_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20159695_James_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20161279_William_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20162253_Mason_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20162542_Mia_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20163356_Ava_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20164515_Patricia_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20164801_Noah_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20165511_Mary_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166436_Christopher_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166487_Barbara_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166564_Ava_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20166998_Ava_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20168311_Lucas_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20168491_Karen_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20169515_Thomas_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20171050_Christopher_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20171406_Mary_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20171613_Ethan_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20172106_Isabella_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173259_Michael_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173492_Richard_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173501_Mary_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20173517_Susan_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20174207_Richard_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20174369_Mary_Garcia/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20175314_William_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20176169_Lucas_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20176947_Noah_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20177389_James_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20178687_Isabella_Anderson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20179461_William_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20179690_Linda_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20181056_Sarah_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20182020_Patricia_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20182390_Ethan_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20183149_David_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20183219_Charlotte_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20184489_Jessica_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20186154_Charlotte_Smith/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20186510_James_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187107_David_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187144_Mary_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187892_Christopher_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187921_Mary_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20187967_Sarah_Davis/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20188937_James_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189123_Mary_Martin/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189192_Olivia_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189268_Emma_Williams/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20189854_William_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20191265_Joseph_Lopez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20192725_Robert_Martinez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194054_Michael_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194160_Benjamin_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194164_Sarah_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20194525_John_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20195164_Jennifer_Gonzalez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20195982_David_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196776_William_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196896_Olivia_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196961_Joseph_Thomas/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20196998_Ethan_Wilson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20198548_Evelyn_Moore/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199036_Benjamin_Hernandez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199583_Mary_Brown/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199735_Mason_Johnson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199872_Sophia_Jackson/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20199980_James_Rodriguez/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20201385_John_Taylor/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20201800_John_Jones/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20202548_Robert_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    ├── 20203855_Mia_Miller/\n    │       ├── basic_info.txt\n    │       └── recommendation_letter.txt\n    └── 20204611_Sarah_Wilson/\n            ├── basic_info.txt\n            └── recommendation_letter.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/student_database.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "size_classification",
      "task_name": "Size Classification",
      "category_id": "file_property",
      "category_name": "File Property",
      "description": "Classify all files in the folder by size into distinct categories (small/medium/large) and generate a comprehensive summary report with statistics.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-07",
      "difficulty": "L3",
      "tags": [
        "file organization",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "file_property/\n    ├── bear.jpg\n    ├── bridge.jpg\n    ├── bus.MOV\n    ├── random_file_1.txt\n    ├── random_file_2.txt\n    ├── random_file_3.txt\n    ├── road.MOV\n    └── sg.jpg",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/file_property.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "time_classification",
      "task_name": "Time Classification",
      "category_id": "file_property",
      "category_name": "File Property",
      "description": "Organize files based on modification timestamps into temporal categories and create a detailed time-based classification report with groupings.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-07",
      "difficulty": "L3",
      "tags": [
        "file organization",
        "data extraction",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "file_property/\n    ├── bear.jpg\n    ├── bridge.jpg\n    ├── bus.MOV\n    ├── random_file_1.txt\n    ├── random_file_2.txt\n    ├── random_file_3.txt\n    ├── road.MOV\n    └── sg.jpg",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/file_property.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "project_management",
      "task_name": "Project Management",
      "category_id": "desktop",
      "category_name": "Desktop",
      "description": "Reorganize scattered desktop files into a structured project directory system based on content type, purpose, and file format analysis.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "file organization"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "desktop/\n    ├── exp_logs/\n    │       ├── aug/\n    │       │       └── augmentation_log.txt\n    │       ├── project_1/\n    │       │       ├── data.csv\n    │       │       ├── model.py\n    │       │       └── README.md\n    │       ├── project_2/\n    │       │       ├── analysis_report.md\n    │       │       └── data_analysis.py\n    │       ├── sep/\n    │       │       └── september_summary.csv\n    │       ├── exp_record.md\n    │       ├── experiment_summary.md\n    │       └── results_record.csv\n    ├── learning/\n    │       ├── 2024/\n    │       │       └── learning_progress.csv\n    │       ├── 2025/\n    │       │       └── learning_roadmap.md\n    │       ├── activities/\n    │       │       └── study_notes.py\n    │       ├── research/\n    │       │       └── research_topics.md\n    │       ├── schedule/\n    │       │       └── weekly_schedule.csv\n    │       └── learning_goals.md\n    ├── music/\n    │       ├── beni/\n    │       │       └── playlist_manager.py\n    │       ├── jay_chou/\n    │       │       └── favorite_songs.csv\n    │       ├── jj_lin/\n    │       │       └── top_songs.txt\n    │       └── music_collection.md\n    ├── old_homebrew/\n    │       ├── 2023-09-23_22/\n    │       │       ├── opt/\n    │       │       └── Users/\n    │       └── 2023-09-23_23/\n    │               ├── opt/\n    │               └── Users/\n    ├── play/\n    │       ├── game_plan/\n    │       │       └── gaming_schedule.md\n    │       ├── hongkong_tour/\n    │       │       └── travel_itinerary.csv\n    │       ├── kit&shoes_collection/\n    │       │       └── inventory.py\n    │       └── others/\n    │               └── entertainment_planner.md\n    └── travel_plan/\n            ├── travel_bucket_list.md\n            └── travel_calculator.py\n",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/desktop.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "music_report",
      "task_name": "Music Report",
      "category_id": "desktop",
      "category_name": "Desktop",
      "description": "Search and analyze desktop music files to generate a scored recommendation list using specified computation rules and criteria.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "desktop/\n    ├── exp_logs/\n    │       ├── aug/\n    │       │       └── augmentation_log.txt\n    │       ├── project_1/\n    │       │       ├── data.csv\n    │       │       ├── model.py\n    │       │       └── README.md\n    │       ├── project_2/\n    │       │       ├── analysis_report.md\n    │       │       └── data_analysis.py\n    │       ├── sep/\n    │       │       └── september_summary.csv\n    │       ├── exp_record.md\n    │       ├── experiment_summary.md\n    │       └── results_record.csv\n    ├── learning/\n    │       ├── 2024/\n    │       │       └── learning_progress.csv\n    │       ├── 2025/\n    │       │       └── learning_roadmap.md\n    │       ├── activities/\n    │       │       └── study_notes.py\n    │       ├── research/\n    │       │       └── research_topics.md\n    │       ├── schedule/\n    │       │       └── weekly_schedule.csv\n    │       └── learning_goals.md\n    ├── music/\n    │       ├── beni/\n    │       │       └── playlist_manager.py\n    │       ├── jay_chou/\n    │       │       └── favorite_songs.csv\n    │       ├── jj_lin/\n    │       │       └── top_songs.txt\n    │       └── music_collection.md\n    ├── old_homebrew/\n    │       ├── 2023-09-23_22/\n    │       │       ├── opt/\n    │       │       └── Users/\n    │       └── 2023-09-23_23/\n    │               ├── opt/\n    │               └── Users/\n    ├── play/\n    │       ├── game_plan/\n    │       │       └── gaming_schedule.md\n    │       ├── hongkong_tour/\n    │       │       └── travel_itinerary.csv\n    │       ├── kit&shoes_collection/\n    │       │       └── inventory.py\n    │       └── others/\n    │               └── entertainment_planner.md\n    └── travel_plan/\n            ├── travel_bucket_list.md\n            └── travel_calculator.py\n",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/desktop.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "timeline_extraction",
      "task_name": "Timeline Extraction",
      "category_id": "desktop",
      "category_name": "Desktop",
      "description": "Extract temporal event information from various desktop files and compile a comprehensive chronological timeline of activities and milestones.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "desktop/\n    ├── exp_logs/\n    │       ├── aug/\n    │       │       └── augmentation_log.txt\n    │       ├── project_1/\n    │       │       ├── data.csv\n    │       │       ├── model.py\n    │       │       └── README.md\n    │       ├── project_2/\n    │       │       ├── analysis_report.md\n    │       │       └── data_analysis.py\n    │       ├── sep/\n    │       │       └── september_summary.csv\n    │       ├── exp_record.md\n    │       ├── experiment_summary.md\n    │       └── results_record.csv\n    ├── learning/\n    │       ├── 2024/\n    │       │       └── learning_progress.csv\n    │       ├── 2025/\n    │       │       └── learning_roadmap.md\n    │       ├── activities/\n    │       │       └── study_notes.py\n    │       ├── research/\n    │       │       └── research_topics.md\n    │       ├── schedule/\n    │       │       └── weekly_schedule.csv\n    │       └── learning_goals.md\n    ├── music/\n    │       ├── beni/\n    │       │       └── playlist_manager.py\n    │       ├── jay_chou/\n    │       │       └── favorite_songs.csv\n    │       ├── jj_lin/\n    │       │       └── top_songs.txt\n    │       └── music_collection.md\n    ├── old_homebrew/\n    │       ├── 2023-09-23_22/\n    │       │       ├── opt/\n    │       │       └── Users/\n    │       └── 2023-09-23_23/\n    │               ├── opt/\n    │               └── Users/\n    ├── play/\n    │       ├── game_plan/\n    │       │       └── gaming_schedule.md\n    │       ├── hongkong_tour/\n    │       │       └── travel_itinerary.csv\n    │       ├── kit&shoes_collection/\n    │       │       └── inventory.py\n    │       └── others/\n    │               └── entertainment_planner.md\n    └── travel_plan/\n            ├── travel_bucket_list.md\n            └── travel_calculator.py\n",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/desktop.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "requirements_completion",
      "task_name": "Requirements Completion",
      "category_id": "threestudio",
      "category_name": "Threestudio",
      "description": "Restore and complete missing Zero123-related dependencies in the requirements.txt file to ensure proper ThreeStudio project configuration.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-05",
      "difficulty": "L3",
      "tags": [
        "code exploration",
        "cross-referencing"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "threestudio/\n    ├── configs/\n    │       ├── debugging/\n    │       │       ├── controlnet-canny.yaml\n    │       │       ├── controlnet-normal.yaml\n    │       │       ├── instructpix2pix.yaml\n    │       │       └── stablediffusion.yaml\n    │       ├── experimental/\n    │       │       ├── unified-guidance/\n    │       │       │       ├── dreamfusion-sd.yaml\n    │       │       │       ├── hifa.yaml\n    │       │       │       ├── prolificdreamer-hifa.yaml\n    │       │       │       ├── prolificdreamer.yaml\n    │       │       │       └── zero123-simple.yaml\n    │       │       ├── co3d-imagecondition.yaml\n    │       │       ├── imagecondition.yaml\n    │       │       ├── imagecondition_zero123nerf.yaml\n    │       │       ├── imagecondition_zero123nerf_refine.yaml\n    │       │       ├── prolificdreamer-importance.yaml\n    │       │       ├── prolificdreamer-neus-importance.yaml\n    │       │       ├── prolificdreamer-propnet.yaml\n    │       │       └── textmesh-if-importance.yaml\n    │       ├── gradio/\n    │       │       ├── dreamfusion-if.yaml\n    │       │       ├── dreamfusion-sd.yaml\n    │       │       ├── fantasia3d.yaml\n    │       │       ├── latentnerf.yaml\n    │       │       ├── sjc.yaml\n    │       │       └── textmesh-if.yaml\n    │       ├── control4d-static.yaml\n    │       ├── dreamfusion-if.yaml\n    │       ├── dreamfusion-sd-eff.yaml\n    │       ├── dreamfusion-sd.yaml\n    │       ├── fantasia3d-texture.yaml\n    │       ├── fantasia3d.yaml\n    │       ├── hifa.yaml\n    │       ├── instructnerf2nerf.yaml\n    │       ├── latentnerf-refine.yaml\n    │       ├── latentnerf.yaml\n    │       ├── magic123-coarse-sd.yaml\n    │       ├── magic123-hifa-coarse-sd.yaml\n    │       ├── magic123-hifa-refine-sd.yaml\n    │       ├── magic123-refine-sd.yaml\n    │       ├── magic3d-coarse-if.yaml\n    │       ├── magic3d-coarse-sd.yaml\n    │       ├── magic3d-refine-sd.yaml\n    │       ├── prolificdreamer-geometry.yaml\n    │       ├── prolificdreamer-hifa.yaml\n    │       ├── prolificdreamer-patch.yaml\n    │       ├── prolificdreamer-scene-hifa.yaml\n    │       ├── prolificdreamer-scene.yaml\n    │       ├── prolificdreamer-texture.yaml\n    │       ├── prolificdreamer.yaml\n    │       ├── sdi.yaml\n    │       ├── sjc.yaml\n    │       ├── sketchshape-refine.yaml\n    │       ├── sketchshape.yaml\n    │       ├── stable-zero123.yaml\n    │       ├── textmesh-if.yaml\n    │       ├── zero123-geometry.yaml\n    │       └── zero123.yaml\n    ├── custom/\n    │       └── put_custom_extensions_here\n    ├── docker/\n    │       ├── compose.yaml\n    │       └── Dockerfile\n    ├── docs/\n    │       └── installation.md\n    ├── extern/\n    │       ├── ldm_zero123/\n    │       │       ├── models/\n    │       │       │       ├── diffusion/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── classifier.py\n    │       │       │       │       ├── ddim.py\n    │       │       │       │       ├── ddpm.py\n    │       │       │       │       ├── plms.py\n    │       │       │       │       └── sampling_util.py\n    │       │       │       └── autoencoder.py\n    │       │       ├── modules/\n    │       │       │       ├── diffusionmodules/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── model.py\n    │       │       │       │       ├── openaimodel.py\n    │       │       │       │       └── util.py\n    │       │       │       ├── distributions/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       └── distributions.py\n    │       │       │       ├── encoders/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       └── modules.py\n    │       │       │       ├── evaluate/\n    │       │       │       │       ├── adm_evaluator.py\n    │       │       │       │       ├── evaluate_perceptualsim.py\n    │       │       │       │       ├── frechet_video_distance.py\n    │       │       │       │       ├── ssim.py\n    │       │       │       │       └── torch_frechet_video_distance.py\n    │       │       │       ├── image_degradation/\n    │       │       │       │       ├── utils/\n    │       │       │       │       │       └── test.png\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── bsrgan.py\n    │       │       │       │       ├── bsrgan_light.py\n    │       │       │       │       └── utils_image.py\n    │       │       │       ├── losses/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── contperceptual.py\n    │       │       │       │       └── vqperceptual.py\n    │       │       │       ├── attention.py\n    │       │       │       ├── ema.py\n    │       │       │       └── x_transformer.py\n    │       │       ├── thirdp/\n    │       │       │       └── psp/\n    │       │       │               ├── helpers.py\n    │       │       │               ├── id_loss.py\n    │       │       │               └── model_irse.py\n    │       │       ├── __init__.py\n    │       │       ├── extras.py\n    │       │       ├── guidance.py\n    │       │       ├── lr_scheduler.py\n    │       │       └── util.py\n    │       ├── __init__.py\n    │       └── zero123.py\n    ├── load/\n    │       ├── images/\n    │       │       ├── anya_front.png\n    │       │       ├── anya_front_depth.png\n    │       │       ├── anya_front_normal.png\n    │       │       ├── anya_front_rgba.png\n    │       │       ├── baby_phoenix_on_ice.png\n    │       │       ├── baby_phoenix_on_ice_depth.png\n    │       │       ├── baby_phoenix_on_ice_normal.png\n    │       │       ├── baby_phoenix_on_ice_rgba.png\n    │       │       ├── beach_house_1.png\n    │       │       ├── beach_house_1_depth.png\n    │       │       ├── beach_house_1_normal.png\n    │       │       ├── beach_house_1_rgba.png\n    │       │       ├── beach_house_2.png\n    │       │       ├── beach_house_2_depth.png\n    │       │       ├── beach_house_2_normal.png\n    │       │       ├── beach_house_2_rgba.png\n    │       │       ├── bollywood_actress.png\n    │       │       ├── bollywood_actress_depth.png\n    │       │       ├── bollywood_actress_normal.png\n    │       │       ├── bollywood_actress_rgba.png\n    │       │       ├── cactus.png\n    │       │       ├── cactus_depth.png\n    │       │       ├── cactus_normal.png\n    │       │       ├── cactus_rgba.png\n    │       │       ├── catstatue.png\n    │       │       ├── catstatue_depth.png\n    │       │       ├── catstatue_normal.png\n    │       │       ├── catstatue_rgba.png\n    │       │       ├── church_ruins.png\n    │       │       ├── church_ruins_depth.png\n    │       │       ├── church_ruins_normal.png\n    │       │       ├── church_ruins_rgba.png\n    │       │       ├── dog1_rgba.png\n    │       │       ├── dragon2_rgba.png\n    │       │       ├── firekeeper.jpg\n    │       │       ├── firekeeper_depth.png\n    │       │       ├── firekeeper_normal.png\n    │       │       ├── firekeeper_rgba.png\n    │       │       ├── futuristic_car.png\n    │       │       ├── futuristic_car_depth.png\n    │       │       ├── futuristic_car_normal.png\n    │       │       ├── futuristic_car_rgba.png\n    │       │       ├── grootplant_rgba.png\n    │       │       ├── hamburger.png\n    │       │       ├── hamburger_depth.png\n    │       │       ├── hamburger_rgba.png\n    │       │       ├── mona_lisa.png\n    │       │       ├── mona_lisa_depth.png\n    │       │       ├── mona_lisa_normal.png\n    │       │       ├── mona_lisa_rgba.png\n    │       │       ├── robot_rgba.png\n    │       │       ├── teddy.png\n    │       │       ├── teddy_depth.png\n    │       │       ├── teddy_normal.png\n    │       │       ├── teddy_rgba.png\n    │       │       └── thorhammer_rgba.png\n    │       ├── lights/\n    │       │       ├── bsdf_256_256.bin\n    │       │       ├── LICENSE.txt\n    │       │       └── mud_road_puresky_1k.hdr\n    │       ├── shapes/\n    │       │       ├── animal.obj\n    │       │       ├── blub.obj\n    │       │       ├── cabin.obj\n    │       │       ├── env_sphere.obj\n    │       │       ├── hand_prismatic.obj\n    │       │       ├── human.obj\n    │       │       ├── nascar.obj\n    │       │       ├── potion.obj\n    │       │       ├── README.md\n    │       │       └── teddy.obj\n    │       ├── tets/\n    │       │       ├── 128_tets.npz\n    │       │       ├── 32_tets.npz\n    │       │       ├── 64_tets.npz\n    │       │       └── generate_tets.py\n    │       ├── zero123/\n    │       │       ├── download.sh\n    │       │       └── sd-objaverse-finetune-c_concat-256.yaml\n    │       ├── make_prompt_library.py\n    │       └── prompt_library.json\n    ├── scripts/\n    │       └── convert_zero123_to_diffusers.py\n    ├── threestudio/\n    │       ├── data/\n    │       │       ├── __init__.py\n    │       │       ├── co3d.py\n    │       │       ├── image.py\n    │       │       ├── multiview.py\n    │       │       ├── uncond.py\n    │       │       └── uncond_eff.py\n    │       ├── models/\n    │       │       ├── background/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── neural_environment_map_background.py\n    │       │       │       ├── solid_color_background.py\n    │       │       │       └── textured_background.py\n    │       │       ├── exporters/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       └── mesh_exporter.py\n    │       │       ├── geometry/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── custom_mesh.py\n    │       │       │       ├── implicit_sdf.py\n    │       │       │       ├── implicit_volume.py\n    │       │       │       ├── tetrahedra_sdf_grid.py\n    │       │       │       └── volume_grid.py\n    │       │       ├── guidance/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── controlnet_guidance.py\n    │       │       │       ├── deep_floyd_guidance.py\n    │       │       │       ├── instructpix2pix_guidance.py\n    │       │       │       ├── stable_diffusion_guidance.py\n    │       │       │       ├── stable_diffusion_sdi_guidance.py\n    │       │       │       ├── stable_diffusion_unified_guidance.py\n    │       │       │       ├── stable_diffusion_vsd_guidance.py\n    │       │       │       ├── stable_zero123_guidance.py\n    │       │       │       ├── zero123_guidance.py\n    │       │       │       └── zero123_unified_guidance.py\n    │       │       ├── materials/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── diffuse_with_point_light_material.py\n    │       │       │       ├── hybrid_rgb_latent_material.py\n    │       │       │       ├── neural_radiance_material.py\n    │       │       │       ├── no_material.py\n    │       │       │       ├── pbr_material.py\n    │       │       │       └── sd_latent_adapter_material.py\n    │       │       ├── prompt_processors/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── deepfloyd_prompt_processor.py\n    │       │       │       ├── dummy_prompt_processor.py\n    │       │       │       └── stable_diffusion_prompt_processor.py\n    │       │       ├── renderers/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── deferred_volume_renderer.py\n    │       │       │       ├── gan_volume_renderer.py\n    │       │       │       ├── nerf_volume_renderer.py\n    │       │       │       ├── neus_volume_renderer.py\n    │       │       │       ├── nvdiff_rasterizer.py\n    │       │       │       └── patch_renderer.py\n    │       │       ├── __init__.py\n    │       │       ├── estimators.py\n    │       │       ├── isosurface.py\n    │       │       ├── mesh.py\n    │       │       └── networks.py\n    │       ├── scripts/\n    │       │       ├── make_training_vid.py\n    │       │       ├── run_zero123.sh\n    │       │       ├── run_zero123_comparison.sh\n    │       │       ├── run_zero123_phase.sh\n    │       │       ├── run_zero123_phase2.sh\n    │       │       ├── run_zero123_sbatch.py\n    │       │       ├── zero123_demo.py\n    │       │       └── zero123_sbatch.sh\n    │       ├── systems/\n    │       │       ├── __init__.py\n    │       │       ├── base.py\n    │       │       ├── control4d_multiview.py\n    │       │       ├── dreamfusion.py\n    │       │       ├── eff_dreamfusion.py\n    │       │       ├── fantasia3d.py\n    │       │       ├── imagedreamfusion.py\n    │       │       ├── instructnerf2nerf.py\n    │       │       ├── latentnerf.py\n    │       │       ├── magic123.py\n    │       │       ├── magic3d.py\n    │       │       ├── optimizers.py\n    │       │       ├── prolificdreamer.py\n    │       │       ├── sdi.py\n    │       │       ├── sjc.py\n    │       │       ├── textmesh.py\n    │       │       ├── utils.py\n    │       │       ├── zero123.py\n    │       │       └── zero123_simple.py\n    │       ├── utils/\n    │       │       ├── GAN/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── attention.py\n    │       │       │       ├── discriminator.py\n    │       │       │       ├── distribution.py\n    │       │       │       ├── loss.py\n    │       │       │       ├── mobilenet.py\n    │       │       │       ├── network_util.py\n    │       │       │       ├── util.py\n    │       │       │       └── vae.py\n    │       │       ├── perceptual/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── perceptual.py\n    │       │       │       └── utils.py\n    │       │       ├── __init__.py\n    │       │       ├── base.py\n    │       │       ├── callbacks.py\n    │       │       ├── config.py\n    │       │       ├── loss.py\n    │       │       ├── misc.py\n    │       │       ├── ops.py\n    │       │       ├── rasterize.py\n    │       │       ├── saving.py\n    │       │       └── typing.py\n    │       └── __init__.py\n    ├── .editorconfig\n    ├── .pre-commit-config.yaml\n    ├── .pylintrc\n    ├── 2dplayground.ipynb\n    ├── 2dplayground_SDI_version.ipynb\n    ├── CHANGELOG.md\n    ├── DOCUMENTATION.md\n    ├── gradio_app.py\n    ├── launch.py\n    ├── LICENSE\n    ├── README.md\n    ├── requirements-dev.txt\n    ├── requirements.txt\n    ├── setup.py\n    └── threestudio.ipynb",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/threestudio.zip",
        "stateOriginalUrl": "https://github.com/threestudio-project/threestudio"
      }
    },
    {
      "task_id": "code_locating",
      "task_name": "Code Locating",
      "category_id": "threestudio",
      "category_name": "Threestudio",
      "description": "Navigate the ThreeStudio codebase to locate and identify the specific file that defines Zero123 guidance functionality implementation.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-05",
      "difficulty": "L3",
      "tags": [
        "code exploration"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "threestudio/\n    ├── configs/\n    │       ├── debugging/\n    │       │       ├── controlnet-canny.yaml\n    │       │       ├── controlnet-normal.yaml\n    │       │       ├── instructpix2pix.yaml\n    │       │       └── stablediffusion.yaml\n    │       ├── experimental/\n    │       │       ├── unified-guidance/\n    │       │       │       ├── dreamfusion-sd.yaml\n    │       │       │       ├── hifa.yaml\n    │       │       │       ├── prolificdreamer-hifa.yaml\n    │       │       │       ├── prolificdreamer.yaml\n    │       │       │       └── zero123-simple.yaml\n    │       │       ├── co3d-imagecondition.yaml\n    │       │       ├── imagecondition.yaml\n    │       │       ├── imagecondition_zero123nerf.yaml\n    │       │       ├── imagecondition_zero123nerf_refine.yaml\n    │       │       ├── prolificdreamer-importance.yaml\n    │       │       ├── prolificdreamer-neus-importance.yaml\n    │       │       ├── prolificdreamer-propnet.yaml\n    │       │       └── textmesh-if-importance.yaml\n    │       ├── gradio/\n    │       │       ├── dreamfusion-if.yaml\n    │       │       ├── dreamfusion-sd.yaml\n    │       │       ├── fantasia3d.yaml\n    │       │       ├── latentnerf.yaml\n    │       │       ├── sjc.yaml\n    │       │       └── textmesh-if.yaml\n    │       ├── control4d-static.yaml\n    │       ├── dreamfusion-if.yaml\n    │       ├── dreamfusion-sd-eff.yaml\n    │       ├── dreamfusion-sd.yaml\n    │       ├── fantasia3d-texture.yaml\n    │       ├── fantasia3d.yaml\n    │       ├── hifa.yaml\n    │       ├── instructnerf2nerf.yaml\n    │       ├── latentnerf-refine.yaml\n    │       ├── latentnerf.yaml\n    │       ├── magic123-coarse-sd.yaml\n    │       ├── magic123-hifa-coarse-sd.yaml\n    │       ├── magic123-hifa-refine-sd.yaml\n    │       ├── magic123-refine-sd.yaml\n    │       ├── magic3d-coarse-if.yaml\n    │       ├── magic3d-coarse-sd.yaml\n    │       ├── magic3d-refine-sd.yaml\n    │       ├── prolificdreamer-geometry.yaml\n    │       ├── prolificdreamer-hifa.yaml\n    │       ├── prolificdreamer-patch.yaml\n    │       ├── prolificdreamer-scene-hifa.yaml\n    │       ├── prolificdreamer-scene.yaml\n    │       ├── prolificdreamer-texture.yaml\n    │       ├── prolificdreamer.yaml\n    │       ├── sdi.yaml\n    │       ├── sjc.yaml\n    │       ├── sketchshape-refine.yaml\n    │       ├── sketchshape.yaml\n    │       ├── stable-zero123.yaml\n    │       ├── textmesh-if.yaml\n    │       ├── zero123-geometry.yaml\n    │       └── zero123.yaml\n    ├── custom/\n    │       └── put_custom_extensions_here\n    ├── docker/\n    │       ├── compose.yaml\n    │       └── Dockerfile\n    ├── docs/\n    │       └── installation.md\n    ├── extern/\n    │       ├── ldm_zero123/\n    │       │       ├── models/\n    │       │       │       ├── diffusion/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── classifier.py\n    │       │       │       │       ├── ddim.py\n    │       │       │       │       ├── ddpm.py\n    │       │       │       │       ├── plms.py\n    │       │       │       │       └── sampling_util.py\n    │       │       │       └── autoencoder.py\n    │       │       ├── modules/\n    │       │       │       ├── diffusionmodules/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── model.py\n    │       │       │       │       ├── openaimodel.py\n    │       │       │       │       └── util.py\n    │       │       │       ├── distributions/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       └── distributions.py\n    │       │       │       ├── encoders/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       └── modules.py\n    │       │       │       ├── evaluate/\n    │       │       │       │       ├── adm_evaluator.py\n    │       │       │       │       ├── evaluate_perceptualsim.py\n    │       │       │       │       ├── frechet_video_distance.py\n    │       │       │       │       ├── ssim.py\n    │       │       │       │       └── torch_frechet_video_distance.py\n    │       │       │       ├── image_degradation/\n    │       │       │       │       ├── utils/\n    │       │       │       │       │       └── test.png\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── bsrgan.py\n    │       │       │       │       ├── bsrgan_light.py\n    │       │       │       │       └── utils_image.py\n    │       │       │       ├── losses/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── contperceptual.py\n    │       │       │       │       └── vqperceptual.py\n    │       │       │       ├── attention.py\n    │       │       │       ├── ema.py\n    │       │       │       └── x_transformer.py\n    │       │       ├── thirdp/\n    │       │       │       └── psp/\n    │       │       │               ├── helpers.py\n    │       │       │               ├── id_loss.py\n    │       │       │               └── model_irse.py\n    │       │       ├── __init__.py\n    │       │       ├── extras.py\n    │       │       ├── guidance.py\n    │       │       ├── lr_scheduler.py\n    │       │       └── util.py\n    │       ├── __init__.py\n    │       └── zero123.py\n    ├── load/\n    │       ├── images/\n    │       │       ├── anya_front.png\n    │       │       ├── anya_front_depth.png\n    │       │       ├── anya_front_normal.png\n    │       │       ├── anya_front_rgba.png\n    │       │       ├── baby_phoenix_on_ice.png\n    │       │       ├── baby_phoenix_on_ice_depth.png\n    │       │       ├── baby_phoenix_on_ice_normal.png\n    │       │       ├── baby_phoenix_on_ice_rgba.png\n    │       │       ├── beach_house_1.png\n    │       │       ├── beach_house_1_depth.png\n    │       │       ├── beach_house_1_normal.png\n    │       │       ├── beach_house_1_rgba.png\n    │       │       ├── beach_house_2.png\n    │       │       ├── beach_house_2_depth.png\n    │       │       ├── beach_house_2_normal.png\n    │       │       ├── beach_house_2_rgba.png\n    │       │       ├── bollywood_actress.png\n    │       │       ├── bollywood_actress_depth.png\n    │       │       ├── bollywood_actress_normal.png\n    │       │       ├── bollywood_actress_rgba.png\n    │       │       ├── cactus.png\n    │       │       ├── cactus_depth.png\n    │       │       ├── cactus_normal.png\n    │       │       ├── cactus_rgba.png\n    │       │       ├── catstatue.png\n    │       │       ├── catstatue_depth.png\n    │       │       ├── catstatue_normal.png\n    │       │       ├── catstatue_rgba.png\n    │       │       ├── church_ruins.png\n    │       │       ├── church_ruins_depth.png\n    │       │       ├── church_ruins_normal.png\n    │       │       ├── church_ruins_rgba.png\n    │       │       ├── dog1_rgba.png\n    │       │       ├── dragon2_rgba.png\n    │       │       ├── firekeeper.jpg\n    │       │       ├── firekeeper_depth.png\n    │       │       ├── firekeeper_normal.png\n    │       │       ├── firekeeper_rgba.png\n    │       │       ├── futuristic_car.png\n    │       │       ├── futuristic_car_depth.png\n    │       │       ├── futuristic_car_normal.png\n    │       │       ├── futuristic_car_rgba.png\n    │       │       ├── grootplant_rgba.png\n    │       │       ├── hamburger.png\n    │       │       ├── hamburger_depth.png\n    │       │       ├── hamburger_rgba.png\n    │       │       ├── mona_lisa.png\n    │       │       ├── mona_lisa_depth.png\n    │       │       ├── mona_lisa_normal.png\n    │       │       ├── mona_lisa_rgba.png\n    │       │       ├── robot_rgba.png\n    │       │       ├── teddy.png\n    │       │       ├── teddy_depth.png\n    │       │       ├── teddy_normal.png\n    │       │       ├── teddy_rgba.png\n    │       │       └── thorhammer_rgba.png\n    │       ├── lights/\n    │       │       ├── bsdf_256_256.bin\n    │       │       ├── LICENSE.txt\n    │       │       └── mud_road_puresky_1k.hdr\n    │       ├── shapes/\n    │       │       ├── animal.obj\n    │       │       ├── blub.obj\n    │       │       ├── cabin.obj\n    │       │       ├── env_sphere.obj\n    │       │       ├── hand_prismatic.obj\n    │       │       ├── human.obj\n    │       │       ├── nascar.obj\n    │       │       ├── potion.obj\n    │       │       ├── README.md\n    │       │       └── teddy.obj\n    │       ├── tets/\n    │       │       ├── 128_tets.npz\n    │       │       ├── 32_tets.npz\n    │       │       ├── 64_tets.npz\n    │       │       └── generate_tets.py\n    │       ├── zero123/\n    │       │       ├── download.sh\n    │       │       └── sd-objaverse-finetune-c_concat-256.yaml\n    │       ├── make_prompt_library.py\n    │       └── prompt_library.json\n    ├── scripts/\n    │       └── convert_zero123_to_diffusers.py\n    ├── threestudio/\n    │       ├── data/\n    │       │       ├── __init__.py\n    │       │       ├── co3d.py\n    │       │       ├── image.py\n    │       │       ├── multiview.py\n    │       │       ├── uncond.py\n    │       │       └── uncond_eff.py\n    │       ├── models/\n    │       │       ├── background/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── neural_environment_map_background.py\n    │       │       │       ├── solid_color_background.py\n    │       │       │       └── textured_background.py\n    │       │       ├── exporters/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       └── mesh_exporter.py\n    │       │       ├── geometry/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── custom_mesh.py\n    │       │       │       ├── implicit_sdf.py\n    │       │       │       ├── implicit_volume.py\n    │       │       │       ├── tetrahedra_sdf_grid.py\n    │       │       │       └── volume_grid.py\n    │       │       ├── guidance/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── controlnet_guidance.py\n    │       │       │       ├── deep_floyd_guidance.py\n    │       │       │       ├── instructpix2pix_guidance.py\n    │       │       │       ├── stable_diffusion_guidance.py\n    │       │       │       ├── stable_diffusion_sdi_guidance.py\n    │       │       │       ├── stable_diffusion_unified_guidance.py\n    │       │       │       ├── stable_diffusion_vsd_guidance.py\n    │       │       │       ├── stable_zero123_guidance.py\n    │       │       │       ├── zero123_guidance.py\n    │       │       │       └── zero123_unified_guidance.py\n    │       │       ├── materials/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── diffuse_with_point_light_material.py\n    │       │       │       ├── hybrid_rgb_latent_material.py\n    │       │       │       ├── neural_radiance_material.py\n    │       │       │       ├── no_material.py\n    │       │       │       ├── pbr_material.py\n    │       │       │       └── sd_latent_adapter_material.py\n    │       │       ├── prompt_processors/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── deepfloyd_prompt_processor.py\n    │       │       │       ├── dummy_prompt_processor.py\n    │       │       │       └── stable_diffusion_prompt_processor.py\n    │       │       ├── renderers/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── deferred_volume_renderer.py\n    │       │       │       ├── gan_volume_renderer.py\n    │       │       │       ├── nerf_volume_renderer.py\n    │       │       │       ├── neus_volume_renderer.py\n    │       │       │       ├── nvdiff_rasterizer.py\n    │       │       │       └── patch_renderer.py\n    │       │       ├── __init__.py\n    │       │       ├── estimators.py\n    │       │       ├── isosurface.py\n    │       │       ├── mesh.py\n    │       │       └── networks.py\n    │       ├── scripts/\n    │       │       ├── make_training_vid.py\n    │       │       ├── run_zero123.sh\n    │       │       ├── run_zero123_comparison.sh\n    │       │       ├── run_zero123_phase.sh\n    │       │       ├── run_zero123_phase2.sh\n    │       │       ├── run_zero123_sbatch.py\n    │       │       ├── zero123_demo.py\n    │       │       └── zero123_sbatch.sh\n    │       ├── systems/\n    │       │       ├── __init__.py\n    │       │       ├── base.py\n    │       │       ├── control4d_multiview.py\n    │       │       ├── dreamfusion.py\n    │       │       ├── eff_dreamfusion.py\n    │       │       ├── fantasia3d.py\n    │       │       ├── imagedreamfusion.py\n    │       │       ├── instructnerf2nerf.py\n    │       │       ├── latentnerf.py\n    │       │       ├── magic123.py\n    │       │       ├── magic3d.py\n    │       │       ├── optimizers.py\n    │       │       ├── prolificdreamer.py\n    │       │       ├── sdi.py\n    │       │       ├── sjc.py\n    │       │       ├── textmesh.py\n    │       │       ├── utils.py\n    │       │       ├── zero123.py\n    │       │       └── zero123_simple.py\n    │       ├── utils/\n    │       │       ├── GAN/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── attention.py\n    │       │       │       ├── discriminator.py\n    │       │       │       ├── distribution.py\n    │       │       │       ├── loss.py\n    │       │       │       ├── mobilenet.py\n    │       │       │       ├── network_util.py\n    │       │       │       ├── util.py\n    │       │       │       └── vae.py\n    │       │       ├── perceptual/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── perceptual.py\n    │       │       │       └── utils.py\n    │       │       ├── __init__.py\n    │       │       ├── base.py\n    │       │       ├── callbacks.py\n    │       │       ├── config.py\n    │       │       ├── loss.py\n    │       │       ├── misc.py\n    │       │       ├── ops.py\n    │       │       ├── rasterize.py\n    │       │       ├── saving.py\n    │       │       └── typing.py\n    │       └── __init__.py\n    ├── .editorconfig\n    ├── .pre-commit-config.yaml\n    ├── .pylintrc\n    ├── 2dplayground.ipynb\n    ├── 2dplayground_SDI_version.ipynb\n    ├── CHANGELOG.md\n    ├── DOCUMENTATION.md\n    ├── gradio_app.py\n    ├── launch.py\n    ├── LICENSE\n    ├── README.md\n    ├── requirements-dev.txt\n    ├── requirements.txt\n    ├── setup.py\n    └── threestudio.ipynb",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/threestudio.zip",
        "stateOriginalUrl": "https://github.com/threestudio-project/threestudio"
      }
    },
    {
      "task_id": "output_analysis",
      "task_name": "Output Analysis",
      "category_id": "threestudio",
      "category_name": "Threestudio",
      "description": "Analyze the structure and components of guidance_out object returned by Zero123 guidance code at line 137 for understanding output format.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-05",
      "difficulty": "L3",
      "tags": [
        "code exploration",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "threestudio/\n    ├── configs/\n    │       ├── debugging/\n    │       │       ├── controlnet-canny.yaml\n    │       │       ├── controlnet-normal.yaml\n    │       │       ├── instructpix2pix.yaml\n    │       │       └── stablediffusion.yaml\n    │       ├── experimental/\n    │       │       ├── unified-guidance/\n    │       │       │       ├── dreamfusion-sd.yaml\n    │       │       │       ├── hifa.yaml\n    │       │       │       ├── prolificdreamer-hifa.yaml\n    │       │       │       ├── prolificdreamer.yaml\n    │       │       │       └── zero123-simple.yaml\n    │       │       ├── co3d-imagecondition.yaml\n    │       │       ├── imagecondition.yaml\n    │       │       ├── imagecondition_zero123nerf.yaml\n    │       │       ├── imagecondition_zero123nerf_refine.yaml\n    │       │       ├── prolificdreamer-importance.yaml\n    │       │       ├── prolificdreamer-neus-importance.yaml\n    │       │       ├── prolificdreamer-propnet.yaml\n    │       │       └── textmesh-if-importance.yaml\n    │       ├── gradio/\n    │       │       ├── dreamfusion-if.yaml\n    │       │       ├── dreamfusion-sd.yaml\n    │       │       ├── fantasia3d.yaml\n    │       │       ├── latentnerf.yaml\n    │       │       ├── sjc.yaml\n    │       │       └── textmesh-if.yaml\n    │       ├── control4d-static.yaml\n    │       ├── dreamfusion-if.yaml\n    │       ├── dreamfusion-sd-eff.yaml\n    │       ├── dreamfusion-sd.yaml\n    │       ├── fantasia3d-texture.yaml\n    │       ├── fantasia3d.yaml\n    │       ├── hifa.yaml\n    │       ├── instructnerf2nerf.yaml\n    │       ├── latentnerf-refine.yaml\n    │       ├── latentnerf.yaml\n    │       ├── magic123-coarse-sd.yaml\n    │       ├── magic123-hifa-coarse-sd.yaml\n    │       ├── magic123-hifa-refine-sd.yaml\n    │       ├── magic123-refine-sd.yaml\n    │       ├── magic3d-coarse-if.yaml\n    │       ├── magic3d-coarse-sd.yaml\n    │       ├── magic3d-refine-sd.yaml\n    │       ├── prolificdreamer-geometry.yaml\n    │       ├── prolificdreamer-hifa.yaml\n    │       ├── prolificdreamer-patch.yaml\n    │       ├── prolificdreamer-scene-hifa.yaml\n    │       ├── prolificdreamer-scene.yaml\n    │       ├── prolificdreamer-texture.yaml\n    │       ├── prolificdreamer.yaml\n    │       ├── sdi.yaml\n    │       ├── sjc.yaml\n    │       ├── sketchshape-refine.yaml\n    │       ├── sketchshape.yaml\n    │       ├── stable-zero123.yaml\n    │       ├── textmesh-if.yaml\n    │       ├── zero123-geometry.yaml\n    │       └── zero123.yaml\n    ├── custom/\n    │       └── put_custom_extensions_here\n    ├── docker/\n    │       ├── compose.yaml\n    │       └── Dockerfile\n    ├── docs/\n    │       └── installation.md\n    ├── extern/\n    │       ├── ldm_zero123/\n    │       │       ├── models/\n    │       │       │       ├── diffusion/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── classifier.py\n    │       │       │       │       ├── ddim.py\n    │       │       │       │       ├── ddpm.py\n    │       │       │       │       ├── plms.py\n    │       │       │       │       └── sampling_util.py\n    │       │       │       └── autoencoder.py\n    │       │       ├── modules/\n    │       │       │       ├── diffusionmodules/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── model.py\n    │       │       │       │       ├── openaimodel.py\n    │       │       │       │       └── util.py\n    │       │       │       ├── distributions/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       └── distributions.py\n    │       │       │       ├── encoders/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       └── modules.py\n    │       │       │       ├── evaluate/\n    │       │       │       │       ├── adm_evaluator.py\n    │       │       │       │       ├── evaluate_perceptualsim.py\n    │       │       │       │       ├── frechet_video_distance.py\n    │       │       │       │       ├── ssim.py\n    │       │       │       │       └── torch_frechet_video_distance.py\n    │       │       │       ├── image_degradation/\n    │       │       │       │       ├── utils/\n    │       │       │       │       │       └── test.png\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── bsrgan.py\n    │       │       │       │       ├── bsrgan_light.py\n    │       │       │       │       └── utils_image.py\n    │       │       │       ├── losses/\n    │       │       │       │       ├── __init__.py\n    │       │       │       │       ├── contperceptual.py\n    │       │       │       │       └── vqperceptual.py\n    │       │       │       ├── attention.py\n    │       │       │       ├── ema.py\n    │       │       │       └── x_transformer.py\n    │       │       ├── thirdp/\n    │       │       │       └── psp/\n    │       │       │               ├── helpers.py\n    │       │       │               ├── id_loss.py\n    │       │       │               └── model_irse.py\n    │       │       ├── __init__.py\n    │       │       ├── extras.py\n    │       │       ├── guidance.py\n    │       │       ├── lr_scheduler.py\n    │       │       └── util.py\n    │       ├── __init__.py\n    │       └── zero123.py\n    ├── load/\n    │       ├── images/\n    │       │       ├── anya_front.png\n    │       │       ├── anya_front_depth.png\n    │       │       ├── anya_front_normal.png\n    │       │       ├── anya_front_rgba.png\n    │       │       ├── baby_phoenix_on_ice.png\n    │       │       ├── baby_phoenix_on_ice_depth.png\n    │       │       ├── baby_phoenix_on_ice_normal.png\n    │       │       ├── baby_phoenix_on_ice_rgba.png\n    │       │       ├── beach_house_1.png\n    │       │       ├── beach_house_1_depth.png\n    │       │       ├── beach_house_1_normal.png\n    │       │       ├── beach_house_1_rgba.png\n    │       │       ├── beach_house_2.png\n    │       │       ├── beach_house_2_depth.png\n    │       │       ├── beach_house_2_normal.png\n    │       │       ├── beach_house_2_rgba.png\n    │       │       ├── bollywood_actress.png\n    │       │       ├── bollywood_actress_depth.png\n    │       │       ├── bollywood_actress_normal.png\n    │       │       ├── bollywood_actress_rgba.png\n    │       │       ├── cactus.png\n    │       │       ├── cactus_depth.png\n    │       │       ├── cactus_normal.png\n    │       │       ├── cactus_rgba.png\n    │       │       ├── catstatue.png\n    │       │       ├── catstatue_depth.png\n    │       │       ├── catstatue_normal.png\n    │       │       ├── catstatue_rgba.png\n    │       │       ├── church_ruins.png\n    │       │       ├── church_ruins_depth.png\n    │       │       ├── church_ruins_normal.png\n    │       │       ├── church_ruins_rgba.png\n    │       │       ├── dog1_rgba.png\n    │       │       ├── dragon2_rgba.png\n    │       │       ├── firekeeper.jpg\n    │       │       ├── firekeeper_depth.png\n    │       │       ├── firekeeper_normal.png\n    │       │       ├── firekeeper_rgba.png\n    │       │       ├── futuristic_car.png\n    │       │       ├── futuristic_car_depth.png\n    │       │       ├── futuristic_car_normal.png\n    │       │       ├── futuristic_car_rgba.png\n    │       │       ├── grootplant_rgba.png\n    │       │       ├── hamburger.png\n    │       │       ├── hamburger_depth.png\n    │       │       ├── hamburger_rgba.png\n    │       │       ├── mona_lisa.png\n    │       │       ├── mona_lisa_depth.png\n    │       │       ├── mona_lisa_normal.png\n    │       │       ├── mona_lisa_rgba.png\n    │       │       ├── robot_rgba.png\n    │       │       ├── teddy.png\n    │       │       ├── teddy_depth.png\n    │       │       ├── teddy_normal.png\n    │       │       ├── teddy_rgba.png\n    │       │       └── thorhammer_rgba.png\n    │       ├── lights/\n    │       │       ├── bsdf_256_256.bin\n    │       │       ├── LICENSE.txt\n    │       │       └── mud_road_puresky_1k.hdr\n    │       ├── shapes/\n    │       │       ├── animal.obj\n    │       │       ├── blub.obj\n    │       │       ├── cabin.obj\n    │       │       ├── env_sphere.obj\n    │       │       ├── hand_prismatic.obj\n    │       │       ├── human.obj\n    │       │       ├── nascar.obj\n    │       │       ├── potion.obj\n    │       │       ├── README.md\n    │       │       └── teddy.obj\n    │       ├── tets/\n    │       │       ├── 128_tets.npz\n    │       │       ├── 32_tets.npz\n    │       │       ├── 64_tets.npz\n    │       │       └── generate_tets.py\n    │       ├── zero123/\n    │       │       ├── download.sh\n    │       │       └── sd-objaverse-finetune-c_concat-256.yaml\n    │       ├── make_prompt_library.py\n    │       └── prompt_library.json\n    ├── scripts/\n    │       └── convert_zero123_to_diffusers.py\n    ├── threestudio/\n    │       ├── data/\n    │       │       ├── __init__.py\n    │       │       ├── co3d.py\n    │       │       ├── image.py\n    │       │       ├── multiview.py\n    │       │       ├── uncond.py\n    │       │       └── uncond_eff.py\n    │       ├── models/\n    │       │       ├── background/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── neural_environment_map_background.py\n    │       │       │       ├── solid_color_background.py\n    │       │       │       └── textured_background.py\n    │       │       ├── exporters/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       └── mesh_exporter.py\n    │       │       ├── geometry/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── custom_mesh.py\n    │       │       │       ├── implicit_sdf.py\n    │       │       │       ├── implicit_volume.py\n    │       │       │       ├── tetrahedra_sdf_grid.py\n    │       │       │       └── volume_grid.py\n    │       │       ├── guidance/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── controlnet_guidance.py\n    │       │       │       ├── deep_floyd_guidance.py\n    │       │       │       ├── instructpix2pix_guidance.py\n    │       │       │       ├── stable_diffusion_guidance.py\n    │       │       │       ├── stable_diffusion_sdi_guidance.py\n    │       │       │       ├── stable_diffusion_unified_guidance.py\n    │       │       │       ├── stable_diffusion_vsd_guidance.py\n    │       │       │       ├── stable_zero123_guidance.py\n    │       │       │       ├── zero123_guidance.py\n    │       │       │       └── zero123_unified_guidance.py\n    │       │       ├── materials/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── diffuse_with_point_light_material.py\n    │       │       │       ├── hybrid_rgb_latent_material.py\n    │       │       │       ├── neural_radiance_material.py\n    │       │       │       ├── no_material.py\n    │       │       │       ├── pbr_material.py\n    │       │       │       └── sd_latent_adapter_material.py\n    │       │       ├── prompt_processors/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── deepfloyd_prompt_processor.py\n    │       │       │       ├── dummy_prompt_processor.py\n    │       │       │       └── stable_diffusion_prompt_processor.py\n    │       │       ├── renderers/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── base.py\n    │       │       │       ├── deferred_volume_renderer.py\n    │       │       │       ├── gan_volume_renderer.py\n    │       │       │       ├── nerf_volume_renderer.py\n    │       │       │       ├── neus_volume_renderer.py\n    │       │       │       ├── nvdiff_rasterizer.py\n    │       │       │       └── patch_renderer.py\n    │       │       ├── __init__.py\n    │       │       ├── estimators.py\n    │       │       ├── isosurface.py\n    │       │       ├── mesh.py\n    │       │       └── networks.py\n    │       ├── scripts/\n    │       │       ├── make_training_vid.py\n    │       │       ├── run_zero123.sh\n    │       │       ├── run_zero123_comparison.sh\n    │       │       ├── run_zero123_phase.sh\n    │       │       ├── run_zero123_phase2.sh\n    │       │       ├── run_zero123_sbatch.py\n    │       │       ├── zero123_demo.py\n    │       │       └── zero123_sbatch.sh\n    │       ├── systems/\n    │       │       ├── __init__.py\n    │       │       ├── base.py\n    │       │       ├── control4d_multiview.py\n    │       │       ├── dreamfusion.py\n    │       │       ├── eff_dreamfusion.py\n    │       │       ├── fantasia3d.py\n    │       │       ├── imagedreamfusion.py\n    │       │       ├── instructnerf2nerf.py\n    │       │       ├── latentnerf.py\n    │       │       ├── magic123.py\n    │       │       ├── magic3d.py\n    │       │       ├── optimizers.py\n    │       │       ├── prolificdreamer.py\n    │       │       ├── sdi.py\n    │       │       ├── sjc.py\n    │       │       ├── textmesh.py\n    │       │       ├── utils.py\n    │       │       ├── zero123.py\n    │       │       └── zero123_simple.py\n    │       ├── utils/\n    │       │       ├── GAN/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── attention.py\n    │       │       │       ├── discriminator.py\n    │       │       │       ├── distribution.py\n    │       │       │       ├── loss.py\n    │       │       │       ├── mobilenet.py\n    │       │       │       ├── network_util.py\n    │       │       │       ├── util.py\n    │       │       │       └── vae.py\n    │       │       ├── perceptual/\n    │       │       │       ├── __init__.py\n    │       │       │       ├── perceptual.py\n    │       │       │       └── utils.py\n    │       │       ├── __init__.py\n    │       │       ├── base.py\n    │       │       ├── callbacks.py\n    │       │       ├── config.py\n    │       │       ├── loss.py\n    │       │       ├── misc.py\n    │       │       ├── ops.py\n    │       │       ├── rasterize.py\n    │       │       ├── saving.py\n    │       │       └── typing.py\n    │       └── __init__.py\n    ├── .editorconfig\n    ├── .pre-commit-config.yaml\n    ├── .pylintrc\n    ├── 2dplayground.ipynb\n    ├── 2dplayground_SDI_version.ipynb\n    ├── CHANGELOG.md\n    ├── DOCUMENTATION.md\n    ├── gradio_app.py\n    ├── launch.py\n    ├── LICENSE\n    ├── README.md\n    ├── requirements-dev.txt\n    ├── requirements.txt\n    ├── setup.py\n    └── threestudio.ipynb",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/threestudio.zip",
        "stateOriginalUrl": "https://github.com/threestudio-project/threestudio"
      }
    },
    {
      "task_id": "structure_mirror",
      "task_name": "Structure Mirror",
      "category_id": "folder_structure",
      "category_name": "Folder Structure",
      "description": "Create an exact mirror copy of the folder structure in a target location while applying specified transformation rules.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-08",
      "difficulty": "L3",
      "tags": [
        "file organization",
        "content transformation"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "folder_structure/\n    └── complex_structure/\n            ├── deeply/\n            │       └── nested/\n            │               └── folder/\n            │                       └── structure/\n            ├── empty_folder/\n            ├── folder_lxkHt_0_1/\n            │       └── file_PeLzC_0.txt\n            ├── folder_QdTAj_0_2/\n            │       ├── folder_eXccj_1_0/\n            │       │       ├── folder_Mqlwh_2_1/\n            │       │       │       ├── folder_cKxcP_3_3/\n            │       │       │       │       ├── folder_BPTMK_4_1/\n            │       │       │       │       │       └── file_RHtBP_0.txt\n            │       │       │       │       ├── folder_QNqjq_4_0/\n            │       │       │       │       │       ├── folder_gRwPE_5_1/\n            │       │       │       │       │       │       ├── file_jVlpp_0.txt\n            │       │       │       │       │       │       └── file_vJuHz_1.txt\n            │       │       │       │       │       ├── folder_XdXYJ_5_0/\n            │       │       │       │       │       │       └── file_KvkKi_0.txt\n            │       │       │       │       │       ├── file_gGxLG_2.txt\n            │       │       │       │       │       ├── file_Hzkxo_0.txt\n            │       │       │       │       │       └── file_XRjeh_1.txt\n            │       │       │       │       ├── folder_vIBIt_4_2/\n            │       │       │       │       │       ├── folder_kRDNS_5_0/\n            │       │       │       │       │       │       └── file_wFSjJ_0.txt\n            │       │       │       │       │       └── file_NyBSO_0.txt\n            │       │       │       │       ├── file_EOCNf_1.txt\n            │       │       │       │       └── file_gmrXA_0.txt\n            │       │       │       ├── folder_NcruA_3_1/\n            │       │       │       │       ├── file_bLWDj_1.txt\n            │       │       │       │       └── file_WAftR_0.txt\n            │       │       │       ├── folder_qCDFI_3_2/\n            │       │       │       │       ├── file_eSMOJ_0.txt\n            │       │       │       │       ├── file_oxADy_2.txt\n            │       │       │       │       └── file_RTbbc_1.txt\n            │       │       │       ├── folder_QVHUU_3_0/\n            │       │       │       │       ├── folder_FEPTK_4_1/\n            │       │       │       │       │       ├── folder_GHoMC_5_1/\n            │       │       │       │       │       │       └── file_rAMYd_0.txt\n            │       │       │       │       │       ├── folder_iBDUY_5_0/\n            │       │       │       │       │       │       └── file_IJCaw_0.txt\n            │       │       │       │       │       ├── folder_VRXgp_5_2/\n            │       │       │       │       │       │       └── file_hkUmS_0.txt\n            │       │       │       │       │       ├── file_nqLAf_1.txt\n            │       │       │       │       │       └── file_XflmA_0.txt\n            │       │       │       │       ├── folder_FlPoK_4_3/\n            │       │       │       │       │       ├── folder_hSVNm_5_3/\n            │       │       │       │       │       │       └── file_klnbn_0.txt\n            │       │       │       │       │       ├── folder_iZuEl_5_0/\n            │       │       │       │       │       │       └── file_LqAmy_0.txt\n            │       │       │       │       │       ├── folder_LcURj_5_2/\n            │       │       │       │       │       │       ├── file_RgwOS_1.txt\n            │       │       │       │       │       │       └── file_ZHnYb_0.txt\n            │       │       │       │       │       ├── folder_tuZQJ_5_1/\n            │       │       │       │       │       │       └── file_LHuIx_0.txt\n            │       │       │       │       │       ├── file_asJnB_1.txt\n            │       │       │       │       │       └── file_EzLdu_0.txt\n            │       │       │       │       ├── folder_ndhsJ_4_0/\n            │       │       │       │       │       ├── folder_CUSXK_5_0/\n            │       │       │       │       │       │       ├── file_DpiuM_1.txt\n            │       │       │       │       │       │       └── file_pSqeG_0.txt\n            │       │       │       │       │       ├── folder_pstmE_5_1/\n            │       │       │       │       │       │       └── file_YwdJt_0.txt\n            │       │       │       │       │       ├── folder_StlsP_5_2/\n            │       │       │       │       │       │       ├── file_kriBJ_0.txt\n            │       │       │       │       │       │       └── file_XCEdm_1.txt\n            │       │       │       │       │       ├── file_ToDjh_1.txt\n            │       │       │       │       │       └── file_xbIVx_0.txt\n            │       │       │       │       ├── folder_PJBok_4_4/\n            │       │       │       │       │       ├── folder_mzxaf_5_0/\n            │       │       │       │       │       │       ├── file_ILBzj_2.txt\n            │       │       │       │       │       │       ├── file_MTGMm_1.txt\n            │       │       │       │       │       │       └── file_zBDqz_0.txt\n            │       │       │       │       │       ├── folder_sULMj_5_1/\n            │       │       │       │       │       │       ├── file_BHziw_1.txt\n            │       │       │       │       │       │       ├── file_sIjiu_2.txt\n            │       │       │       │       │       │       └── file_VqNkB_0.txt\n            │       │       │       │       │       ├── folder_vypSi_5_3/\n            │       │       │       │       │       │       ├── file_kZbIm_1.txt\n            │       │       │       │       │       │       └── file_sOBtE_0.txt\n            │       │       │       │       │       ├── folder_ZLGHy_5_2/\n            │       │       │       │       │       │       ├── file_azaFF_0.txt\n            │       │       │       │       │       │       └── file_nAFRe_1.txt\n            │       │       │       │       │       ├── file_mIkQU_0.txt\n            │       │       │       │       │       └── file_sGPxd_1.txt\n            │       │       │       │       ├── folder_VTbEG_4_2/\n            │       │       │       │       │       ├── file_HtYLg_0.txt\n            │       │       │       │       │       ├── file_JXjMd_1.txt\n            │       │       │       │       │       └── file_tPccB_2.txt\n            │       │       │       │       ├── file_BuOSw_1.txt\n            │       │       │       │       └── file_TpoqE_0.txt\n            │       │       │       ├── folder_wTvun_3_4/\n            │       │       │       │       ├── file_GyhyE_1.txt\n            │       │       │       │       ├── file_POsla_2.txt\n            │       │       │       │       └── file_tSsvk_0.txt\n            │       │       │       ├── file_irNju_0.txt\n            │       │       │       └── file_jYBRm_1.txt\n            │       │       ├── folder_YlJLI_2_0/\n            │       │       │       └── file_FpFSL_0.txt\n            │       │       ├── file_cFgBr_2.txt\n            │       │       ├── file_lKEWN_1.txt\n            │       │       └── file_ZEWFP_0.txt\n            │       └── file_ayUCH_0.txt\n            ├── folder_xtgyi_0_0/\n            │       └── file_BvSOB_0.txt\n            ├── mixed_content/\n            │       └── images_and_text/\n            │               └── notes.txt\n            ├── project/\n            │       ├── docs/\n            │       │       └── archive/\n            │       │               └── 2023/\n            │       │                       └── reports/\n            │       │                               ├── report_0.txt\n            │       │                               ├── report_1.txt\n            │       │                               └── report_2.txt\n            │       └── src/\n            │               └── main/\n            │                       └── resources/\n            └── m.py",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/folder_structure.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "structure_analysis",
      "task_name": "Structure Analysis",
      "category_id": "folder_structure",
      "category_name": "Folder Structure",
      "description": "Perform thorough analysis of complex folder hierarchy to generate a detailed structural summary report with comprehensive file statistics.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-16",
      "difficulty": "L3",
      "tags": [
        "pattern analysis",
        "data extraction"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "folder_structure/\n    └── complex_structure/\n            ├── deeply/\n            │       └── nested/\n            │               └── folder/\n            │                       └── structure/\n            ├── empty_folder/\n            ├── folder_lxkHt_0_1/\n            │       └── file_PeLzC_0.txt\n            ├── folder_QdTAj_0_2/\n            │       ├── folder_eXccj_1_0/\n            │       │       ├── folder_Mqlwh_2_1/\n            │       │       │       ├── folder_cKxcP_3_3/\n            │       │       │       │       ├── folder_BPTMK_4_1/\n            │       │       │       │       │       └── file_RHtBP_0.txt\n            │       │       │       │       ├── folder_QNqjq_4_0/\n            │       │       │       │       │       ├── folder_gRwPE_5_1/\n            │       │       │       │       │       │       ├── file_jVlpp_0.txt\n            │       │       │       │       │       │       └── file_vJuHz_1.txt\n            │       │       │       │       │       ├── folder_XdXYJ_5_0/\n            │       │       │       │       │       │       └── file_KvkKi_0.txt\n            │       │       │       │       │       ├── file_gGxLG_2.txt\n            │       │       │       │       │       ├── file_Hzkxo_0.txt\n            │       │       │       │       │       └── file_XRjeh_1.txt\n            │       │       │       │       ├── folder_vIBIt_4_2/\n            │       │       │       │       │       ├── folder_kRDNS_5_0/\n            │       │       │       │       │       │       └── file_wFSjJ_0.txt\n            │       │       │       │       │       └── file_NyBSO_0.txt\n            │       │       │       │       ├── file_EOCNf_1.txt\n            │       │       │       │       └── file_gmrXA_0.txt\n            │       │       │       ├── folder_NcruA_3_1/\n            │       │       │       │       ├── file_bLWDj_1.txt\n            │       │       │       │       └── file_WAftR_0.txt\n            │       │       │       ├── folder_qCDFI_3_2/\n            │       │       │       │       ├── file_eSMOJ_0.txt\n            │       │       │       │       ├── file_oxADy_2.txt\n            │       │       │       │       └── file_RTbbc_1.txt\n            │       │       │       ├── folder_QVHUU_3_0/\n            │       │       │       │       ├── folder_FEPTK_4_1/\n            │       │       │       │       │       ├── folder_GHoMC_5_1/\n            │       │       │       │       │       │       └── file_rAMYd_0.txt\n            │       │       │       │       │       ├── folder_iBDUY_5_0/\n            │       │       │       │       │       │       └── file_IJCaw_0.txt\n            │       │       │       │       │       ├── folder_VRXgp_5_2/\n            │       │       │       │       │       │       └── file_hkUmS_0.txt\n            │       │       │       │       │       ├── file_nqLAf_1.txt\n            │       │       │       │       │       └── file_XflmA_0.txt\n            │       │       │       │       ├── folder_FlPoK_4_3/\n            │       │       │       │       │       ├── folder_hSVNm_5_3/\n            │       │       │       │       │       │       └── file_klnbn_0.txt\n            │       │       │       │       │       ├── folder_iZuEl_5_0/\n            │       │       │       │       │       │       └── file_LqAmy_0.txt\n            │       │       │       │       │       ├── folder_LcURj_5_2/\n            │       │       │       │       │       │       ├── file_RgwOS_1.txt\n            │       │       │       │       │       │       └── file_ZHnYb_0.txt\n            │       │       │       │       │       ├── folder_tuZQJ_5_1/\n            │       │       │       │       │       │       └── file_LHuIx_0.txt\n            │       │       │       │       │       ├── file_asJnB_1.txt\n            │       │       │       │       │       └── file_EzLdu_0.txt\n            │       │       │       │       ├── folder_ndhsJ_4_0/\n            │       │       │       │       │       ├── folder_CUSXK_5_0/\n            │       │       │       │       │       │       ├── file_DpiuM_1.txt\n            │       │       │       │       │       │       └── file_pSqeG_0.txt\n            │       │       │       │       │       ├── folder_pstmE_5_1/\n            │       │       │       │       │       │       └── file_YwdJt_0.txt\n            │       │       │       │       │       ├── folder_StlsP_5_2/\n            │       │       │       │       │       │       ├── file_kriBJ_0.txt\n            │       │       │       │       │       │       └── file_XCEdm_1.txt\n            │       │       │       │       │       ├── file_ToDjh_1.txt\n            │       │       │       │       │       └── file_xbIVx_0.txt\n            │       │       │       │       ├── folder_PJBok_4_4/\n            │       │       │       │       │       ├── folder_mzxaf_5_0/\n            │       │       │       │       │       │       ├── file_ILBzj_2.txt\n            │       │       │       │       │       │       ├── file_MTGMm_1.txt\n            │       │       │       │       │       │       └── file_zBDqz_0.txt\n            │       │       │       │       │       ├── folder_sULMj_5_1/\n            │       │       │       │       │       │       ├── file_BHziw_1.txt\n            │       │       │       │       │       │       ├── file_sIjiu_2.txt\n            │       │       │       │       │       │       └── file_VqNkB_0.txt\n            │       │       │       │       │       ├── folder_vypSi_5_3/\n            │       │       │       │       │       │       ├── file_kZbIm_1.txt\n            │       │       │       │       │       │       └── file_sOBtE_0.txt\n            │       │       │       │       │       ├── folder_ZLGHy_5_2/\n            │       │       │       │       │       │       ├── file_azaFF_0.txt\n            │       │       │       │       │       │       └── file_nAFRe_1.txt\n            │       │       │       │       │       ├── file_mIkQU_0.txt\n            │       │       │       │       │       └── file_sGPxd_1.txt\n            │       │       │       │       ├── folder_VTbEG_4_2/\n            │       │       │       │       │       ├── file_HtYLg_0.txt\n            │       │       │       │       │       ├── file_JXjMd_1.txt\n            │       │       │       │       │       └── file_tPccB_2.txt\n            │       │       │       │       ├── file_BuOSw_1.txt\n            │       │       │       │       └── file_TpoqE_0.txt\n            │       │       │       ├── folder_wTvun_3_4/\n            │       │       │       │       ├── file_GyhyE_1.txt\n            │       │       │       │       ├── file_POsla_2.txt\n            │       │       │       │       └── file_tSsvk_0.txt\n            │       │       │       ├── file_irNju_0.txt\n            │       │       │       └── file_jYBRm_1.txt\n            │       │       ├── folder_YlJLI_2_0/\n            │       │       │       └── file_FpFSL_0.txt\n            │       │       ├── file_cFgBr_2.txt\n            │       │       ├── file_lKEWN_1.txt\n            │       │       └── file_ZEWFP_0.txt\n            │       └── file_ayUCH_0.txt\n            ├── folder_xtgyi_0_0/\n            │       └── file_BvSOB_0.txt\n            ├── mixed_content/\n            │       └── images_and_text/\n            │               └── notes.txt\n            ├── project/\n            │       ├── docs/\n            │       │       └── archive/\n            │       │               └── 2023/\n            │       │                       └── reports/\n            │       │                               ├── report_0.txt\n            │       │                               ├── report_1.txt\n            │       │                               └── report_2.txt\n            │       └── src/\n            │               └── main/\n            │                       └── resources/\n            └── m.py",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/folder_structure.zip",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "individual_comments",
      "task_name": "Individual Comments",
      "category_id": "legal_document",
      "category_name": "Legal Document",
      "description": "Extract and analyze individual reviewer comments on legal clauses across multiple document versions to understand personal perspectives.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "cross-referencing",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "legal_document/\n    └── legal_files/\n            ├── Preferred_Stock_Purchase_Agreement_v0.txt\n            ├── Preferred_Stock_Purchase_Agreement_v1.txt\n            ├── Preferred_Stock_Purchase_Agreement_v2.txt\n            ├── Preferred_Stock_Purchase_Agreement_v3.txt\n            ├── Preferred_Stock_Purchase_Agreement_v4.txt\n            ├── Preferred_Stock_Purchase_Agreement_v5.txt\n            ├── Preferred_Stock_Purchase_Agreement_v6.txt\n            ├── Preferred_Stock_Purchase_Agreement_v7.txt\n            ├── Preferred_Stock_Purchase_Agreement_v8.txt\n            ├── Preferred_Stock_Purchase_Agreement_v9.txt\n            └── Preferred_Stock_Purchase_Agreement_v10.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/legal_document.zip",
        "stateOriginalUrl": "https://www.cooleygo.com/documents/nvca-financing-documents"
      }
    },
    {
      "task_id": "solution_tracing",
      "task_name": "Solution Tracing",
      "category_id": "legal_document",
      "category_name": "Legal Document",
      "description": "Trace the evolution of clause resolutions across document versions to identify who first proposed each final accepted solution.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "cross-referencing",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "legal_document/\n    └── legal_files/\n            ├── Preferred_Stock_Purchase_Agreement_v0.txt\n            ├── Preferred_Stock_Purchase_Agreement_v1.txt\n            ├── Preferred_Stock_Purchase_Agreement_v2.txt\n            ├── Preferred_Stock_Purchase_Agreement_v3.txt\n            ├── Preferred_Stock_Purchase_Agreement_v4.txt\n            ├── Preferred_Stock_Purchase_Agreement_v5.txt\n            ├── Preferred_Stock_Purchase_Agreement_v6.txt\n            ├── Preferred_Stock_Purchase_Agreement_v7.txt\n            ├── Preferred_Stock_Purchase_Agreement_v8.txt\n            ├── Preferred_Stock_Purchase_Agreement_v9.txt\n            └── Preferred_Stock_Purchase_Agreement_v10.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/legal_document.zip",
        "stateOriginalUrl": "https://www.cooleygo.com/documents/nvca-financing-documents"
      }
    },
    {
      "task_id": "dispute_review",
      "task_name": "Dispute Review",
      "category_id": "legal_document",
      "category_name": "Legal Document",
      "description": "Analyze multiple versions of legal documents to track clause discussion frequency and generate a comprehensive dispute summary report.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "data extraction",
        "cross-referencing",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "legal_document/\n    └── legal_files/\n            ├── Preferred_Stock_Purchase_Agreement_v0.txt\n            ├── Preferred_Stock_Purchase_Agreement_v1.txt\n            ├── Preferred_Stock_Purchase_Agreement_v2.txt\n            ├── Preferred_Stock_Purchase_Agreement_v3.txt\n            ├── Preferred_Stock_Purchase_Agreement_v4.txt\n            ├── Preferred_Stock_Purchase_Agreement_v5.txt\n            ├── Preferred_Stock_Purchase_Agreement_v6.txt\n            ├── Preferred_Stock_Purchase_Agreement_v7.txt\n            ├── Preferred_Stock_Purchase_Agreement_v8.txt\n            ├── Preferred_Stock_Purchase_Agreement_v9.txt\n            └── Preferred_Stock_Purchase_Agreement_v10.txt",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/legal_document.zip",
        "stateOriginalUrl": "https://www.cooleygo.com/documents/nvca-financing-documents"
      }
    },
    {
      "task_id": "requirements_writing",
      "task_name": "Requirements Writing",
      "category_id": "votenet",
      "category_name": "VoteNet",
      "description": "Generate a complete requirements.txt file containing all necessary Python dependencies for running the VoteNet codebase successfully.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-13",
      "difficulty": "L3",
      "tags": [
        "code exploration",
        "cross-referencing"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "votenet/\n    ├── doc/\n    │       ├── teaser.jpg\n    │       └── tips.md\n    ├── models/\n    │       ├── ap_helper.py\n    │       ├── backbone_module.py\n    │       ├── boxnet.py\n    │       ├── dump_helper.py\n    │       ├── loss_helper.py\n    │       ├── loss_helper_boxnet.py\n    │       ├── proposal_module.py\n    │       ├── votenet.py\n    │       └── voting_module.py\n    ├── pointnet2/\n    │       ├── _ext_src/\n    │       │       ├── include/\n    │       │       │       ├── ball_query.h\n    │       │       │       ├── cuda_utils.h\n    │       │       │       ├── group_points.h\n    │       │       │       ├── interpolate.h\n    │       │       │       ├── sampling.h\n    │       │       │       └── utils.h\n    │       │       └── src/\n    │       │               ├── ball_query.cpp\n    │       │               ├── ball_query_gpu.cu\n    │       │               ├── bindings.cpp\n    │       │               ├── group_points.cpp\n    │       │               ├── group_points_gpu.cu\n    │       │               ├── interpolate.cpp\n    │       │               ├── interpolate_gpu.cu\n    │       │               ├── sampling.cpp\n    │       │               └── sampling_gpu.cu\n    │       ├── pointnet2_modules.py\n    │       ├── pointnet2_test.py\n    │       ├── pointnet2_utils.py\n    │       ├── pytorch_utils.py\n    │       └── setup.py\n    ├── scannet/\n    │       ├── meta_data/\n    │       │       ├── scannet_means.npz\n    │       │       ├── scannet_train.txt\n    │       │       ├── scannetv2-labels.combined.tsv\n    │       │       ├── scannetv2_test.txt\n    │       │       ├── scannetv2_train.txt\n    │       │       └── scannetv2_val.txt\n    │       ├── scans/\n    │       ├── batch_load_scannet_data.py\n    │       ├── data_viz.py\n    │       ├── load_scannet_data.py\n    │       ├── model_util_scannet.py\n    │       ├── README.md\n    │       ├── scannet_detection_dataset.py\n    │       └── scannet_utils.py\n    ├── sunrgbd/\n    │       ├── matlab/\n    │       │       ├── extract_rgbd_data_v1.m\n    │       │       ├── extract_rgbd_data_v2.m\n    │       │       └── extract_split.m\n    │       ├── OFFICIAL_SUNRGBD/\n    │       ├── sunrgbd_trainval/\n    │       ├── model_util_sunrgbd.py\n    │       ├── README.md\n    │       ├── sunrgbd_data.py\n    │       ├── sunrgbd_detection_dataset.py\n    │       └── sunrgbd_utils.py\n    ├── utils/\n    │       ├── box_util.py\n    │       ├── eval_det.py\n    │       ├── metric_util.py\n    │       ├── nms.py\n    │       ├── nn_distance.py\n    │       ├── pc_util.py\n    │       ├── tf_logger.py\n    │       └── tf_visualizer.py\n    ├── CODE_OF_CONDUCT.md\n    ├── CONTRIBUTING.md\n    ├── demo.py\n    ├── eval.py\n    ├── LICENSE\n    ├── README.md\n    └── train.py",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/votenet.zip",
        "stateOriginalUrl": "https://github.com/facebookresearch/votenet"
      }
    },
    {
      "task_id": "dataset_comparison",
      "task_name": "Dataset Comparison",
      "category_id": "votenet",
      "category_name": "Votenet",
      "description": "Map ScanNet object categories to their SUN RGB-D equivalents and calculate detailed object counts for each mapped category.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-13",
      "difficulty": "L3",
      "tags": [
        "cross-referencing",
        "data extraction",
        "pattern analysis"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "votenet/\n    ├── doc/\n    │       ├── teaser.jpg\n    │       └── tips.md\n    ├── models/\n    │       ├── ap_helper.py\n    │       ├── backbone_module.py\n    │       ├── boxnet.py\n    │       ├── dump_helper.py\n    │       ├── loss_helper.py\n    │       ├── loss_helper_boxnet.py\n    │       ├── proposal_module.py\n    │       ├── votenet.py\n    │       └── voting_module.py\n    ├── pointnet2/\n    │       ├── _ext_src/\n    │       │       ├── include/\n    │       │       │       ├── ball_query.h\n    │       │       │       ├── cuda_utils.h\n    │       │       │       ├── group_points.h\n    │       │       │       ├── interpolate.h\n    │       │       │       ├── sampling.h\n    │       │       │       └── utils.h\n    │       │       └── src/\n    │       │               ├── ball_query.cpp\n    │       │               ├── ball_query_gpu.cu\n    │       │               ├── bindings.cpp\n    │       │               ├── group_points.cpp\n    │       │               ├── group_points_gpu.cu\n    │       │               ├── interpolate.cpp\n    │       │               ├── interpolate_gpu.cu\n    │       │               ├── sampling.cpp\n    │       │               └── sampling_gpu.cu\n    │       ├── pointnet2_modules.py\n    │       ├── pointnet2_test.py\n    │       ├── pointnet2_utils.py\n    │       ├── pytorch_utils.py\n    │       └── setup.py\n    ├── scannet/\n    │       ├── meta_data/\n    │       │       ├── scannet_means.npz\n    │       │       ├── scannet_train.txt\n    │       │       ├── scannetv2-labels.combined.tsv\n    │       │       ├── scannetv2_test.txt\n    │       │       ├── scannetv2_train.txt\n    │       │       └── scannetv2_val.txt\n    │       ├── scans/\n    │       ├── batch_load_scannet_data.py\n    │       ├── data_viz.py\n    │       ├── load_scannet_data.py\n    │       ├── model_util_scannet.py\n    │       ├── README.md\n    │       ├── scannet_detection_dataset.py\n    │       └── scannet_utils.py\n    ├── sunrgbd/\n    │       ├── matlab/\n    │       │       ├── extract_rgbd_data_v1.m\n    │       │       ├── extract_rgbd_data_v2.m\n    │       │       └── extract_split.m\n    │       ├── OFFICIAL_SUNRGBD/\n    │       ├── sunrgbd_trainval/\n    │       ├── model_util_sunrgbd.py\n    │       ├── README.md\n    │       ├── sunrgbd_data.py\n    │       ├── sunrgbd_detection_dataset.py\n    │       └── sunrgbd_utils.py\n    ├── utils/\n    │       ├── box_util.py\n    │       ├── eval_det.py\n    │       ├── metric_util.py\n    │       ├── nms.py\n    │       ├── nn_distance.py\n    │       ├── pc_util.py\n    │       ├── tf_logger.py\n    │       └── tf_visualizer.py\n    ├── CODE_OF_CONDUCT.md\n    ├── CONTRIBUTING.md\n    ├── demo.py\n    ├── eval.py\n    ├── LICENSE\n    ├── README.md\n    └── train.py",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/votenet.zip",
        "stateOriginalUrl": "https://github.com/facebookresearch/votenet"
      }
    },
    {
      "task_id": "debugging",
      "task_name": "Debugging",
      "category_id": "votenet",
      "category_name": "Votenet",
      "description": "Identify and fix bugs in the VoteNet backbone module by examining the codebase and implementing necessary corrections.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-13",
      "difficulty": "L3",
      "tags": [
        "code exploration"
      ],
      "mcp": [
        "filesystem"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "votenet/\n    ├── doc/\n    │       ├── teaser.jpg\n    │       └── tips.md\n    ├── models/\n    │       ├── ap_helper.py\n    │       ├── backbone_module.py\n    │       ├── boxnet.py\n    │       ├── dump_helper.py\n    │       ├── loss_helper.py\n    │       ├── loss_helper_boxnet.py\n    │       ├── proposal_module.py\n    │       ├── votenet.py\n    │       └── voting_module.py\n    ├── pointnet2/\n    │       ├── _ext_src/\n    │       │       ├── include/\n    │       │       │       ├── ball_query.h\n    │       │       │       ├── cuda_utils.h\n    │       │       │       ├── group_points.h\n    │       │       │       ├── interpolate.h\n    │       │       │       ├── sampling.h\n    │       │       │       └── utils.h\n    │       │       └── src/\n    │       │               ├── ball_query.cpp\n    │       │               ├── ball_query_gpu.cu\n    │       │               ├── bindings.cpp\n    │       │               ├── group_points.cpp\n    │       │               ├── group_points_gpu.cu\n    │       │               ├── interpolate.cpp\n    │       │               ├── interpolate_gpu.cu\n    │       │               ├── sampling.cpp\n    │       │               └── sampling_gpu.cu\n    │       ├── pointnet2_modules.py\n    │       ├── pointnet2_test.py\n    │       ├── pointnet2_utils.py\n    │       ├── pytorch_utils.py\n    │       └── setup.py\n    ├── scannet/\n    │       ├── meta_data/\n    │       │       ├── scannet_means.npz\n    │       │       ├── scannet_train.txt\n    │       │       ├── scannetv2-labels.combined.tsv\n    │       │       ├── scannetv2_test.txt\n    │       │       ├── scannetv2_train.txt\n    │       │       └── scannetv2_val.txt\n    │       ├── scans/\n    │       ├── batch_load_scannet_data.py\n    │       ├── data_viz.py\n    │       ├── load_scannet_data.py\n    │       ├── model_util_scannet.py\n    │       ├── README.md\n    │       ├── scannet_detection_dataset.py\n    │       └── scannet_utils.py\n    ├── sunrgbd/\n    │       ├── matlab/\n    │       │       ├── extract_rgbd_data_v1.m\n    │       │       ├── extract_rgbd_data_v2.m\n    │       │       └── extract_split.m\n    │       ├── OFFICIAL_SUNRGBD/\n    │       ├── sunrgbd_trainval/\n    │       ├── model_util_sunrgbd.py\n    │       ├── README.md\n    │       ├── sunrgbd_data.py\n    │       ├── sunrgbd_detection_dataset.py\n    │       └── sunrgbd_utils.py\n    ├── utils/\n    │       ├── box_util.py\n    │       ├── eval_det.py\n    │       ├── metric_util.py\n    │       ├── nms.py\n    │       ├── nn_distance.py\n    │       ├── pc_util.py\n    │       ├── tf_logger.py\n    │       └── tf_visualizer.py\n    ├── CODE_OF_CONDUCT.md\n    ├── CONTRIBUTING.md\n    ├── demo.py\n    ├── eval.py\n    ├── LICENSE\n    ├── README.md\n    └── train.py",
        "stateUrl": "https://storage.mcpmark.ai/filesystem/votenet.zip",
        "stateOriginalUrl": "https://github.com/facebookresearch/votenet"
      }
    },
    {
      "task_id": "r1_arxiv",
      "task_name": "R1 Arxiv",
      "category_id": "web_search",
      "category_name": "Web Search",
      "description": "Search arXiv for R1 model research papers, extract technical specifications, analyze methodology sections, compile research findings, and generate comprehensive literature review.",
      "author": "Arvin Xu",
      "created_at": "2025-08-18",
      "difficulty": "L3",
      "tags": [
        "search aggregation",
        "data extraction",
        "comparative analysis",
        "content submission"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": null,
        "stateContent": null,
        "stateUrl": null,
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "birth_of_arvinxu",
      "task_name": "Birth Of Arvinxu",
      "category_id": "web_search",
      "category_name": "Web Search",
      "description": "Search for biographical information about X profile arvin17x across multiple web sources, extract birth year data, verify information accuracy, and compile findings.",
      "author": "Arvin Xu",
      "created_at": "2025-08-18",
      "difficulty": "L3",
      "tags": [
        "search aggregation",
        "data extraction"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": null,
        "stateContent": null,
        "stateUrl": null,
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "extraction_table",
      "task_name": "Extraction Table",
      "category_id": "eval_web",
      "category_name": "Eval Web",
      "description": "Extract structured data from complex web tables, parse multi-level headers, handle dynamic content loading, transform data formats, and export comprehensive datasets.",
      "author": "Arvin Xu",
      "created_at": "2025-08-18",
      "difficulty": "L3",
      "tags": [
        "data extraction"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/mcpmark-eval-website.mp4",
        "stateOriginalUrl": "https://eval-web.mcpmark.ai/extraction"
      }
    },
    {
      "task_id": "cloudflare_turnstile_challenge",
      "task_name": "Cloudflare Turnstile Challenge",
      "category_id": "eval_web",
      "category_name": "Eval Web",
      "description": "Navigate websites with Cloudflare Turnstile protection, handle security challenges, bypass bot detection mechanisms, and successfully access protected content using automated browser interactions.",
      "author": "Allison Zhang",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "user interaction"
      ],
      "mcp": [
        "playwright"
      ],
      "meta_data": {
        "stateType": "video",
        "stateContent": null,
        "stateUrl": "https://storage.mcpmark.ai/tasks_state/playwright_video/mcpmark-eval-website.mp4",
        "stateOriginalUrl": "https://mcp-eval-website.vercel.app/auth/turnstile"
      }
    },
    {
      "task_id": "employee_onboarding",
      "task_name": "Employee Onboarding",
      "category_id": "company_in_a_box",
      "category_name": "Company In A Box",
      "description": "Build an integrated Employee Onboarding system for the existing Company In A Box page with a checklist database, onboarding hub, and feedback form.",
      "author": "Zijian Wu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "template population",
        "cross-reference linking",
        "status tracking"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Company-In-A-Box-23d81626b6d7800098f3d0e64a706cd8",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/company-in-a-box"
      }
    },
    {
      "task_id": "goals_restructure",
      "task_name": "Goals Restructure",
      "category_id": "company_in_a_box",
      "category_name": "Company In A Box",
      "description": "Restructure the Current Goals section on the Company In A Box page by adding a new goal heading and converting all goal headings to toggles with content inside.",
      "author": "Zijian Wu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "content organization",
        "visual formatting"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Company-In-A-Box-23d81626b6d7800098f3d0e64a706cd8",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/company-in-a-box"
      }
    },
    {
      "task_id": "quarterly_review_dashboard",
      "task_name": "Quarterly Review Dashboard",
      "category_id": "company_in_a_box",
      "category_name": "Company In A Box",
      "description": "Create a quarterly business review dashboard in Notion based on the existing Company In A Box workspace with department objectives and action items database.",
      "author": "Zijian Wu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "data aggregation",
        "report generation",
        "status tracking",
        "template population"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Company-In-A-Box-23d81626b6d7800098f3d0e64a706cd8",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/company-in-a-box"
      }
    },
    {
      "task_id": "weekend_adventure_planner",
      "task_name": "Weekend Adventure Planner",
      "category_id": "toronto_guide",
      "category_name": "Toronto Guide",
      "description": "Create a comprehensive weekend adventure planner that analyzes Toronto Guide databases and generates a structured itinerary page.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-14",
      "difficulty": "L3",
      "tags": [
        "conditional filtering",
        "data aggregation",
        "report generation",
        "visual formatting",
        "status tracking"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Toronto-Guide-25281626b6d7802caa7cc394647e901c",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/conquering-toronto-a-destination-guide"
      }
    },
    {
      "task_id": "change_color",
      "task_name": "Change Color",
      "category_id": "toronto_guide",
      "category_name": "Toronto Guide",
      "description": "Navigate to the Toronto Guide page and change all pink-colored elements to different colors.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-14",
      "difficulty": "L3",
      "tags": [
        "visual formatting",
        "conditional filtering"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Toronto-Guide-25281626b6d7802caa7cc394647e901c",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/conquering-toronto-a-destination-guide"
      }
    },
    {
      "task_id": "work_history_addition",
      "task_name": "Work History Addition",
      "category_id": "online_resume",
      "category_name": "Online Resume",
      "description": "Add a Research Assistant position to the Work History section with consistent formatting and university logo.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "template population",
        "cross-reference linking",
        "visual formatting"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Online-Resume-23181626b6d781159faaeb5eadaf612e",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/online-resume"
      }
    },
    {
      "task_id": "layout_adjustment",
      "task_name": "Layout Adjustment",
      "category_id": "online_resume",
      "category_name": "Online Resume",
      "description": "This task involves modifying the layout and content of an online resume page by restructuring the Skills section with icon indicators and adjusting the Work History and Education sections to use equal column widths with placeholder images.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-14",
      "difficulty": "L3",
      "tags": [
        "content organization",
        "visual formatting",
        "conditional filtering",
        "template population"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Online-Resume-23181626b6d781159faaeb5eadaf612e",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/online-resume"
      }
    },
    {
      "task_id": "projects_section_update",
      "task_name": "Projects Section Update",
      "category_id": "online_resume",
      "category_name": "Online Resume",
      "description": "Reorganize the projects section by removing outdated projects and adding new relevant work with proper formatting.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "template population",
        "data aggregation",
        "visual formatting",
        "cross-reference linking"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Online-Resume-23181626b6d781159faaeb5eadaf612e",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/online-resume"
      }
    },
    {
      "task_id": "skills_development_tracker",
      "task_name": "Skills Development Tracker",
      "category_id": "online_resume",
      "category_name": "Online Resume",
      "description": "Create a comprehensive skills audit system with development tracking for skills below 70% proficiency.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "cross-reference linking",
        "conditional filtering",
        "data aggregation",
        "template population",
        "visual formatting"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Online-Resume-23181626b6d781159faaeb5eadaf612e",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/online-resume"
      }
    },
    {
      "task_id": "section_organization",
      "task_name": "Section Organization",
      "category_id": "standard_operating_procedure",
      "category_name": "Standard Operating Procedure",
      "description": "Reorganize the Standard Operating Procedure page by swapping sections and creating a column layout.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-11",
      "difficulty": "L3",
      "tags": [
        "content organization",
        "cross-reference linking",
        "visual formatting"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Standard-Operating-Procedure-24381626b6d780a8b678f9e62ae5b152",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/standard-operating-procedure"
      }
    },
    {
      "task_id": "deployment_process_sop",
      "task_name": "Deployment Process SOP",
      "category_id": "standard_operating_procedure",
      "category_name": "Standard Operating Procedure",
      "description": "Complete the SOP template with comprehensive content for a Software Deployment Process with interconnected sections.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "template population",
        "cross-reference linking",
        "content organization",
        "visual formatting"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Standard-Operating-Procedure-24381626b6d780a8b678f9e62ae5b152",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/standard-operating-procedure"
      }
    },
    {
      "task_id": "study_session_tracker",
      "task_name": "Study Session Tracker",
      "category_id": "computer_science_student_dashboard",
      "category_name": "Computer Science Student Dashboard",
      "description": "Create a new study-session entry in the Habit tracker section with four unchecked to-do items.",
      "author": "Zijian Wu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "content organization",
        "visual formatting",
        "status tracking"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Computer-Science-Student-Dashboard-23e81626b6d78083b787d3c832b02ef4",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/computer-science-student-dashboard"
      }
    },
    {
      "task_id": "code_snippets_go",
      "task_name": "Code Snippets Go",
      "category_id": "computer_science_student_dashboard",
      "category_name": "Computer Science Student Dashboard",
      "description": "Add a new Go column to the Code Snippets section between Python and JavaScript columns.",
      "author": "Zijian Wu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "content organization",
        "visual formatting",
        "template population"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Computer-Science-Student-Dashboard-23e81626b6d78083b787d3c832b02ef4",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/computer-science-student-dashboard"
      }
    },
    {
      "task_id": "courses_internships_relation",
      "task_name": "Courses Internships Relation",
      "category_id": "computer_science_student_dashboard",
      "category_name": "Computer Science Student Dashboard",
      "description": "Connect the Courses and Internship search databases with bidirectional relations and populate with sample data.",
      "author": "Zijian Wu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "cross-reference linking",
        "template population"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Computer-Science-Student-Dashboard-23e81626b6d78083b787d3c832b02ef4",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/computer-science-student-dashboard"
      }
    },
    {
      "task_id": "restaurant_expenses_sync",
      "task_name": "Restaurant Expenses Sync",
      "category_id": "japan_travel_planner",
      "category_name": "Japan Travel Planner",
      "description": "Find restaurants from Day 1 Travel Itinerary and create corresponding entries in the Expenses database.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "conditional filtering",
        "database manipulation",
        "cross-reference linking",
        "template population"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Japan-Travel-Planner-23181626b6d781c4b6bedb12786b5abe",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/japantravelplanner101"
      }
    },
    {
      "task_id": "daily_itinerary_overview",
      "task_name": "Daily Itinerary Overview",
      "category_id": "japan_travel_planner",
      "category_name": "Japan Travel Planner",
      "description": "Create a comprehensive daily itinerary overview page to organize Japan travel plans with structured day-by-day activities.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "data aggregation",
        "report generation",
        "visual formatting",
        "status tracking"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Japan-Travel-Planner-23181626b6d781c4b6bedb12786b5abe"
      }
    },
    {
      "task_id": "remove_osaka_itinerary",
      "task_name": "Remove Osaka Itinerary",
      "category_id": "japan_travel_planner",
      "category_name": "Japan Travel Planner",
      "description": "Remove the itinerary items in Osaka after 6 PM from Day 1 and Day 2 travel schedules.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "conditional filtering",
        "automated migration"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Japan-Travel-Planner-23181626b6d781c4b6bedb12786b5abe",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/japantravelplanner101"
      }
    },
    {
      "task_id": "packing_progress_summary",
      "task_name": "Packing Progress Summary",
      "category_id": "japan_travel_planner",
      "category_name": "Japan Travel Planner",
      "description": "Update packing list items and create a progress summary section showing statistics for each category.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "data aggregation",
        "report generation",
        "status tracking"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Japan-Travel-Planner-23181626b6d781c4b6bedb12786b5abe",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/japantravelplanner101"
      }
    },
    {
      "task_id": "learning_metrics_dashboard",
      "task_name": "Learning Metrics Dashboard",
      "category_id": "python_roadmap",
      "category_name": "Python Roadmap",
      "description": "Create a comprehensive Learning Metrics Dashboard section displaying precise statistics and recommendations based on the Steps database.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-02",
      "difficulty": "L3",
      "tags": [
        "data aggregation",
        "conditional filtering",
        "report generation",
        "visual formatting"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Python-Roadmap-25281626b6d78012bf2bce1fa8711f4d",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/python-roadmap"
      }
    },
    {
      "task_id": "expert_level_lessons",
      "task_name": "Expert Level Lessons",
      "category_id": "python_roadmap",
      "category_name": "Python Roadmap",
      "description": "Create an Expert Level chapter with sophisticated prerequisite chains and four expert-level lessons.",
      "author": "Lingjun Chen",
      "created_at": "2025-08-02",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "cross-reference linking",
        "conditional filtering",
        "status tracking",
        "template population"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Python-Roadmap-25281626b6d78012bf2bce1fa8711f4d",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/python-roadmap"
      }
    },
    {
      "task_id": "hyperfocus_analysis_report",
      "task_name": "Hyperfocus Analysis Report",
      "category_id": "self_assessment",
      "category_name": "Self Assessment",
      "description": "Create a hyperfocus analysis report by analyzing high-productivity sessions with challenges.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "conditional filtering",
        "data aggregation",
        "report generation",
        "visual formatting"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Self-Assessment-24381626b6d780fe9f56c2ba14ea042d",
        "stateOriginalUrl": "https://painted-tennis-ebc.notion.site/Self-Assessment-24381626b6d780fe9f56c2ba14ea042d"
      }
    },
    {
      "task_id": "faq_column_layout",
      "task_name": "FAQ Column Layout",
      "category_id": "self_assessment",
      "category_name": "Self Assessment",
      "description": "Reorganize the FAQ section content into a two-column layout with balanced Q&A pairs.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "content organization",
        "visual formatting",
        "template population"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Self-Assessment-24381626b6d780fe9f56c2ba14ea042d",
        "stateOriginalUrl": "https://painted-tennis-ebc.notion.site/Self-Assessment-24381626b6d780fe9f56c2ba14ea042d"
      }
    },
    {
      "task_id": "numbered_list_emojis",
      "task_name": "Numbered List Emojis",
      "category_id": "self_assessment",
      "category_name": "Self Assessment",
      "description": "Replace numbered list items with corresponding emoji numbers for better visual formatting.",
      "author": "Xiangyan Liu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "visual formatting",
        "automated migration"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Self-Assessment-24381626b6d780fe9f56c2ba14ea042d",
        "stateOriginalUrl": "https://painted-tennis-ebc.notion.site/Self-Assessment-24381626b6d780fe9f56c2ba14ea042d"
      }
    },
    {
      "task_id": "priority_tasks_table",
      "task_name": "Priority Tasks Table",
      "category_id": "team_projects",
      "category_name": "Team Projects",
      "description": "Create a five-column table listing tasks with 50% or less progress or P0 priority tasks not completed.",
      "author": "Zijian Wu",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "conditional filtering",
        "database manipulation",
        "data aggregation",
        "visual formatting"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Team-Projects-24e81626b6d7809c982fdb7a25825898",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/gantt-chart"
      }
    },
    {
      "task_id": "swap_tasks",
      "task_name": "Swap Tasks",
      "category_id": "team_projects",
      "category_name": "Team Projects",
      "description": "Find the person responsible for the most and fewest tasks, then swap their assigned tasks.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "data aggregation",
        "automated migration",
        "conditional filtering"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/Team-Projects-24e81626b6d7809c982fdb7a25825898",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/gantt-chart"
      }
    },
    {
      "task_id": "verification_expired_update",
      "task_name": "Verification Expired Update",
      "category_id": "it_trouble_shooting_hub",
      "category_name": "IT Trouble Shooting Hub",
      "description": "Update pages with expired verification status by adding warning callouts and creating a batch update request.",
      "author": "Zijian Wu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "conditional filtering",
        "visual formatting",
        "database manipulation",
        "cross-reference linking",
        "status tracking"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/It-Trouble-Shooting-Hub-23e81626b6d78020aba7eb65ae1cc2d5",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/japantravelplanner101"
      }
    },
    {
      "task_id": "security_audit_ticket",
      "task_name": "Security Audit Ticket",
      "category_id": "it_trouble_shooting_hub",
      "category_name": "IT Trouble Shooting Hub",
      "description": "Create a comprehensive security audit ticket based on expired inventory items and security FAQ entries.",
      "author": "Zijian Wu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "conditional filtering",
        "database manipulation",
        "data aggregation",
        "report generation"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/It-Trouble-Shooting-Hub-23e81626b6d78020aba7eb65ae1cc2d5",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/it-trouble-shooting-hub"
      }
    },
    {
      "task_id": "asset_retirement_migration",
      "task_name": "Asset Retirement Migration",
      "category_id": "it_trouble_shooting_hub",
      "category_name": "IT Trouble Shooting Hub",
      "description": "Restructure the IT Inventory database by migrating expired assets to a new IT Asset Retirement Queue database.",
      "author": "Zijian Wu",
      "created_at": "2025-07-27",
      "difficulty": "L3",
      "tags": [
        "database manipulation",
        "automated migration",
        "conditional filtering",
        "data aggregation",
        "report generation"
      ],
      "mcp": [
        "notion"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://painted-tennis-ebc.notion.site/It-Trouble-Shooting-Hub-23e81626b6d78020aba7eb65ae1cc2d5",
        "stateOriginalUrl": "https://www.notion.so/marketplace/templates/it-trouble-shooting-hub"
      }
    },
    {
      "task_id": "user_permission_audit",
      "task_name": "User Permission Audit",
      "category_id": "security",
      "category_name": "Security",
      "description": "Conduct comprehensive security audit identifying users with insufficient or dangling permissions in business database environment.",
      "author": "Fanshi Zhang",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "security and access control",
        "audit and compliance"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"user_profiles\" {\n  \"user_id\" int4 [pk, not null, increment]\n  \"username\" varchar(50) [unique, not null]\n  \"email\" varchar(100) [unique, not null]\n  \"first_name\" varchar(50) [not null]\n  \"last_name\" varchar(50) [not null]\n  \"phone\" varchar(20)\n  \"address\" text\n  \"city\" varchar(50)\n  \"state\" varchar(2)\n  \"zip_code\" varchar(10)\n  \"date_created\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"last_updated\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"is_active\" bool [default: true]\n  \"profile_picture_url\" text\n  \"bio\" text\n}\n\nTable \"user_credentials\" {\n  \"credential_id\" int4 [pk, not null, increment]\n  \"user_id\" int4\n  \"password_hash\" varchar(255) [not null]\n  \"salt\" varchar(100) [not null]\n  \"login_attempts\" int4 [default: 0]\n  \"last_login\" timestamp\n  \"password_created\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"password_expires\" timestamp\n  \"is_locked\" bool [default: false]\n  \"two_factor_enabled\" bool [default: false]\n  \"two_factor_secret\" varchar(32)\n  \"backup_codes\" \"text[]\"\n  \"security_questions\" jsonb\n}\n\nTable \"user_stat_analysis\" {\n  \"analysis_id\" int4 [pk, not null, increment]\n  \"user_id\" int4\n  \"session_id\" varchar(100)\n  \"page_views\" int4 [default: 0]\n  \"time_spent_minutes\" int4 [default: 0]\n  \"actions_performed\" jsonb\n  \"device_info\" jsonb\n  \"ip_address\" inet\n  \"location_data\" jsonb\n  \"referrer_url\" text\n  \"conversion_events\" jsonb\n  \"analysis_date\" date [default: `CURRENT_DATE`]\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n}\n\nTable \"product_catalog\" {\n  \"product_id\" int4 [pk, not null, increment]\n  \"product_name\" varchar(100) [not null]\n  \"description\" text\n  \"category\" varchar(50)\n  \"price\" numeric(10,2) [not null]\n  \"cost\" numeric(10,2)\n  \"sku\" varchar(50) [unique]\n  \"inventory_count\" int4 [default: 0]\n  \"is_active\" bool [default: true]\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"updated_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"supplier_info\" jsonb\n  \"weight_kg\" numeric(6,2)\n  \"dimensions\" jsonb\n}\n\nTable \"order_management\" {\n  \"order_id\" int4 [pk, not null, increment]\n  \"user_id\" int4\n  \"order_number\" varchar(50) [unique, not null]\n  \"order_status\" varchar(20) [default: 'pending']\n  \"total_amount\" numeric(12,2) [not null]\n  \"tax_amount\" numeric(12,2)\n  \"shipping_amount\" numeric(12,2)\n  \"discount_amount\" numeric(12,2) [default: 0]\n  \"payment_method\" varchar(50)\n  \"payment_status\" varchar(20) [default: 'pending']\n  \"shipping_address\" jsonb\n  \"billing_address\" jsonb\n  \"order_date\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"shipped_date\" timestamp\n  \"delivered_date\" timestamp\n  \"tracking_number\" varchar(100)\n}\n\nTable \"financial_transactions\" {\n  \"transaction_id\" int4 [pk, not null, increment]\n  \"order_id\" int4\n  \"user_id\" int4\n  \"transaction_type\" varchar(20) [not null]\n  \"amount\" numeric(12,2) [not null]\n  \"currency\" varchar(3) [default: 'USD']\n  \"payment_gateway\" varchar(50)\n  \"gateway_transaction_id\" varchar(100)\n  \"credit_card_last_four\" bpchar(4)\n  \"bank_account_last_four\" bpchar(4)\n  \"transaction_status\" varchar(20) [default: 'pending']\n  \"processed_at\" timestamp\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"fee_amount\" numeric(8,2)\n  \"refund_amount\" numeric(12,2) [default: 0]\n  \"notes\" text\n}\n\nTable \"audit_logs\" {\n  \"log_id\" int4 [pk, not null, increment]\n  \"user_id\" int4\n  \"action_type\" varchar(50) [not null]\n  \"table_name\" varchar(50)\n  \"record_id\" int4\n  \"old_values\" jsonb\n  \"new_values\" jsonb\n  \"ip_address\" inet\n  \"user_agent\" text\n  \"session_id\" varchar(100)\n  \"timestamp\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"success\" bool [default: true]\n  \"error_message\" text\n}\n\nRef \"audit_logs_user_id_fkey\":\"user_profiles\".\"user_id\" < \"audit_logs\".\"user_id\"\n\nRef \"financial_transactions_order_id_fkey\":\"order_management\".\"order_id\" < \"financial_transactions\".\"order_id\"\n\nRef \"financial_transactions_user_id_fkey\":\"user_profiles\".\"user_id\" < \"financial_transactions\".\"user_id\"\n\nRef \"order_management_user_id_fkey\":\"user_profiles\".\"user_id\" < \"order_management\".\"user_id\"\n\nRef \"user_credentials_user_id_fkey\":\"user_profiles\".\"user_id\" < \"user_credentials\".\"user_id\" [delete: cascade]\n\nRef \"user_stat_analysis_user_id_fkey\":\"user_profiles\".\"user_id\" < \"user_stat_analysis\".\"user_id\" [delete: cascade]\n",
        "stateUrl": null,
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "rls_business_access",
      "task_name": "RLS Business Access",
      "category_id": "security",
      "category_name": "Security",
      "description": "Implement Row Level Security policies for social platform with proper access control for posts, comments, and channels.",
      "author": "Fanshi Zhang",
      "created_at": "2025-08-17",
      "difficulty": "L3",
      "tags": [
        "security and access control",
        "stored procedures and functions",
        "schema design"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"users\" {\n  \"id\" uuid [pk, not null, default: `gen_random_uuid()`]\n  \"username\" varchar(50) [unique, not null]\n  \"email\" varchar(100) [unique, not null]\n  \"is_public\" bool [default: false]\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n\n  Indexes {\n    is_public [type: btree, name: \"idx_users_is_public\"]\n  }\n}\n\nTable \"channels\" {\n  \"id\" uuid [pk, not null, default: `gen_random_uuid()`]\n  \"name\" varchar(100) [not null]\n  \"description\" text\n  \"is_public\" bool [default: true]\n  \"owner_id\" uuid\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n\n  Indexes {\n    is_public [type: btree, name: \"idx_channels_is_public\"]\n    owner_id [type: btree, name: \"idx_channels_owner_id\"]\n  }\n}\n\nTable \"channel_moderators\" {\n  \"channel_id\" uuid [not null]\n  \"user_id\" uuid [not null]\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n\n  Indexes {\n    (channel_id, user_id) [type: btree, name: \"channel_moderators_pkey\"]\n    (channel_id, user_id) [type: btree, name: \"idx_channel_moderators_channel_user\"]\n    user_id [type: btree, name: \"idx_channel_moderators_user\"]\n  }\n}\n\nTable \"posts\" {\n  \"id\" uuid [pk, not null, default: `gen_random_uuid()`]\n  \"channel_id\" uuid\n  \"author_id\" uuid\n  \"title\" varchar(200) [not null]\n  \"content\" text\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"updated_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n\n  Indexes {\n    author_id [type: btree, name: \"idx_posts_author_id\"]\n    channel_id [type: btree, name: \"idx_posts_channel_id\"]\n    created_at [type: btree, name: \"idx_posts_created_at\"]\n  }\n}\n\nTable \"comments\" {\n  \"id\" uuid [pk, not null, default: `gen_random_uuid()`]\n  \"post_id\" uuid\n  \"author_id\" uuid\n  \"content\" text [not null]\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"updated_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n\n  Indexes {\n    author_id [type: btree, name: \"idx_comments_author_id\"]\n    created_at [type: btree, name: \"idx_comments_created_at\"]\n    post_id [type: btree, name: \"idx_comments_post_id\"]\n  }\n}\n\nRef \"channel_moderators_channel_id_fkey\":\"channels\".\"id\" < \"channel_moderators\".\"channel_id\" [delete: cascade]\n\nRef \"channel_moderators_user_id_fkey\":\"users\".\"id\" < \"channel_moderators\".\"user_id\" [delete: cascade]\n\nRef \"channels_owner_id_fkey\":\"users\".\"id\" < \"channels\".\"owner_id\" [delete: cascade]\n\nRef \"comments_author_id_fkey\":\"users\".\"id\" < \"comments\".\"author_id\" [delete: cascade]\n\nRef \"comments_post_id_fkey\":\"posts\".\"id\" < \"comments\".\"post_id\" [delete: cascade]\n\nRef \"posts_author_id_fkey\":\"users\".\"id\" < \"posts\".\"author_id\" [delete: cascade]\n\nRef \"posts_channel_id_fkey\":\"channels\".\"id\" < \"posts\".\"channel_id\" [delete: cascade]\n",
        "stateUrl": null,
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "dba_vector_analysis",
      "task_name": "DBA Vector Analysis",
      "category_id": "vectors",
      "category_name": "Vectors",
      "description": "Analyze pgvector database storage, identify vector columns, assess space utilization and performance for RAG applications.",
      "author": "Fanshi Zhang",
      "created_at": "2025-08-18",
      "difficulty": "L3",
      "tags": [
        "performance optimization",
        "audit and compliance",
        "statistical aggregation"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"documents\" {\n  \"id\" int4 [pk, not null, increment]\n  \"title\" text [not null]\n  \"content\" text [not null]\n  \"source_url\" text\n  \"document_type\" varchar(50) [default: 'article']\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"updated_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"word_count\" int4\n  \"embedding\" public.vector\n\n  Indexes {\n    created_at [type: btree, name: \"documents_created_idx\"]\n    embedding [type: hnsw, name: \"documents_embedding_idx\"]\n    title [type: btree, name: \"documents_title_idx\"]\n    document_type [type: btree, name: \"documents_type_idx\"]\n  }\n}\n\nTable \"document_chunks\" {\n  \"id\" int4 [pk, not null, increment]\n  \"document_id\" int4\n  \"chunk_index\" int4 [not null]\n  \"chunk_text\" text [not null]\n  \"chunk_size\" int4\n  \"overlap_size\" int4 [default: 0]\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"embedding\" public.vector\n\n  Indexes {\n    document_id [type: btree, name: \"chunks_doc_id_idx\"]\n    embedding [type: hnsw, name: \"chunks_embedding_idx\"]\n    chunk_index [type: btree, name: \"chunks_index_idx\"]\n  }\n}\n\nTable \"user_queries\" {\n  \"id\" int4 [pk, not null, increment]\n  \"query_text\" text [not null]\n  \"user_id\" varchar(100)\n  \"session_id\" varchar(100)\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"response_time_ms\" int4\n  \"embedding\" public.vector\n\n  Indexes {\n    created_at [type: btree, name: \"queries_created_idx\"]\n    embedding [type: hnsw, name: \"queries_embedding_idx\"]\n    user_id [type: btree, name: \"queries_user_idx\"]\n  }\n}\n\nTable \"embedding_models\" {\n  \"id\" int4 [pk, not null, increment]\n  \"model_name\" varchar(100) [unique, not null]\n  \"provider\" varchar(50) [not null]\n  \"dimensions\" int4 [not null]\n  \"max_tokens\" int4\n  \"cost_per_token\" numeric(10,8)\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"is_active\" bool [default: true]\n}\n\nTable \"knowledge_base\" {\n  \"id\" int4 [pk, not null, increment]\n  \"kb_name\" varchar(100) [not null]\n  \"description\" text\n  \"domain\" varchar(50)\n  \"language\" varchar(10) [default: 'en']\n  \"total_documents\" int4 [default: 0]\n  \"total_chunks\" int4 [default: 0]\n  \"total_storage_mb\" numeric(10,2)\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"updated_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n}\n\nTable \"search_cache\" {\n  \"id\" int4 [pk, not null, increment]\n  \"query_hash\" varchar(64) [not null]\n  \"query_text\" text [not null]\n  \"results_json\" jsonb\n  \"result_count\" int4\n  \"search_time_ms\" int4\n  \"similarity_threshold\" numeric(4,3)\n  \"created_at\" timestamp [default: `CURRENT_TIMESTAMP`]\n  \"expires_at\" timestamp\n\n  Indexes {\n    expires_at [type: btree, name: \"cache_expires_idx\"]\n    query_hash [type: btree, name: \"cache_hash_idx\"]\n  }\n}\n\nRef \"document_chunks_document_id_fkey\":\"documents\".\"id\" < \"document_chunks\".\"document_id\" [delete: cascade]\n",
        "stateUrl": null,
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "participant_report_optimization",
      "task_name": "Participant Report Optimization",
      "category_id": "sports",
      "category_name": "Sports",
      "description": "Optimize slow-running participant performance query by creating indexes and populating performance report table.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-18",
      "difficulty": "L3",
      "tags": [
        "performance optimization",
        "schema design"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"addresses\" {\n  \"id\" int4 [not null, increment]\n  \"location_id\" int4 [not null]\n  \"language\" varchar(100)\n  \"suite\" varchar(100)\n  \"floor\" varchar(100)\n  \"building\" varchar(100)\n  \"street_number\" varchar(100)\n  \"street_prefix\" varchar(100)\n  \"street\" varchar(100)\n  \"street_suffix\" varchar(100)\n  \"neighborhood\" varchar(100)\n  \"district\" varchar(100)\n  \"locality\" varchar(100)\n  \"county\" varchar(100)\n  \"region\" varchar(100)\n  \"postal_code\" varchar(100)\n  \"country\" varchar(100)\n}\n\nTable \"affiliation_phases\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_id\" int4 [not null]\n  \"ancestor_affiliation_id\" int4\n  \"start_season_id\" int4\n  \"start_date_time\" timestamp\n  \"end_season_id\" int4\n  \"end_date_time\" timestamp\n}\n\nTable \"affiliations\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_key\" varchar(100) [not null]\n  \"affiliation_type\" varchar(100)\n  \"publisher_id\" int4 [not null]\n}\n\nTable \"affiliations_documents\" {\n  \"affiliation_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"affiliations_events\" {\n  \"affiliation_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n}\n\nTable \"affiliations_media\" {\n  \"affiliation_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"american_football_action_participants\" {\n  \"id\" int4 [not null, increment]\n  \"american_football_action_play_id\" int4 [not null]\n  \"person_id\" int4 [not null]\n  \"participant_role\" varchar(100) [not null]\n  \"score_type\" varchar(100)\n  \"field_line\" int4\n  \"yardage\" int4\n  \"score_credit\" int4\n  \"yards_gained\" int4\n}\n\nTable \"american_football_action_plays\" {\n  \"id\" int4 [not null, increment]\n  \"american_football_event_state_id\" int4 [not null]\n  \"play_type\" varchar(100)\n  \"score_attempt_type\" varchar(100)\n  \"drive_result\" varchar(100)\n  \"points\" int4\n  \"comment\" varchar(255)\n}\n\nTable \"american_football_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"tackles_total\" varchar(100)\n  \"tackles_solo\" varchar(100)\n  \"tackles_assists\" varchar(100)\n  \"interceptions_total\" varchar(100)\n  \"interceptions_yards\" varchar(100)\n  \"interceptions_average\" varchar(100)\n  \"interceptions_longest\" varchar(100)\n  \"interceptions_touchdown\" varchar(100)\n  \"quarterback_hurries\" varchar(100)\n  \"sacks_total\" varchar(100)\n  \"sacks_yards\" varchar(100)\n  \"passes_defensed\" varchar(100)\n}\n\nTable \"american_football_down_progress_stats\" {\n  \"id\" int4 [not null, increment]\n  \"first_downs_total\" varchar(100)\n  \"first_downs_pass\" varchar(100)\n  \"first_downs_run\" varchar(100)\n  \"first_downs_penalty\" varchar(100)\n  \"conversions_third_down\" varchar(100)\n  \"conversions_third_down_attempts\" varchar(100)\n  \"conversions_third_down_percentage\" varchar(100)\n  \"conversions_fourth_down\" varchar(100)\n  \"conversions_fourth_down_attempts\" varchar(100)\n  \"conversions_fourth_down_percentage\" varchar(100)\n}\n\nTable \"american_football_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int2\n  \"sequence_number\" int4\n  \"period_value\" int4\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"clock_state\" varchar(100)\n  \"down\" int4\n  \"team_in_possession_id\" int4\n  \"distance_for_1st_down\" int4\n  \"field_side\" varchar(100)\n  \"field_line\" int4\n  \"context\" varchar(40)\n}\n\nTable \"american_football_fumbles_stats\" {\n  \"id\" int4 [not null, increment]\n  \"fumbles_committed\" varchar(100)\n  \"fumbles_forced\" varchar(100)\n  \"fumbles_recovered\" varchar(100)\n  \"fumbles_lost\" varchar(100)\n  \"fumbles_yards_gained\" varchar(100)\n  \"fumbles_own_committed\" varchar(100)\n  \"fumbles_own_recovered\" varchar(100)\n  \"fumbles_own_lost\" varchar(100)\n  \"fumbles_own_yards_gained\" varchar(100)\n  \"fumbles_opposing_committed\" varchar(100)\n  \"fumbles_opposing_recovered\" varchar(100)\n  \"fumbles_opposing_lost\" varchar(100)\n  \"fumbles_opposing_yards_gained\" varchar(100)\n}\n\nTable \"american_football_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"offensive_plays_yards\" varchar(100)\n  \"offensive_plays_number\" varchar(100)\n  \"offensive_plays_average_yards_per\" varchar(100)\n  \"possession_duration\" varchar(100)\n  \"turnovers_giveaway\" varchar(100)\n}\n\nTable \"american_football_passing_stats\" {\n  \"id\" int4 [not null, increment]\n  \"passes_attempts\" varchar(100)\n  \"passes_completions\" varchar(100)\n  \"passes_percentage\" varchar(100)\n  \"passes_yards_gross\" varchar(100)\n  \"passes_yards_net\" varchar(100)\n  \"passes_yards_lost\" varchar(100)\n  \"passes_touchdowns\" varchar(100)\n  \"passes_touchdowns_percentage\" varchar(100)\n  \"passes_interceptions\" varchar(100)\n  \"passes_interceptions_percentage\" varchar(100)\n  \"passes_longest\" varchar(100)\n  \"passes_average_yards_per\" varchar(100)\n  \"passer_rating\" varchar(100)\n  \"receptions_total\" varchar(100)\n  \"receptions_yards\" varchar(100)\n  \"receptions_touchdowns\" varchar(100)\n  \"receptions_first_down\" varchar(100)\n  \"receptions_longest\" varchar(100)\n  \"receptions_average_yards_per\" varchar(100)\n}\n\nTable \"american_football_penalties_stats\" {\n  \"id\" int4 [not null, increment]\n  \"penalties_total\" varchar(100)\n  \"penalty_yards\" varchar(100)\n  \"penalty_first_downs\" varchar(100)\n}\n\nTable \"american_football_rushing_stats\" {\n  \"id\" int4 [not null, increment]\n  \"rushes_attempts\" varchar(100)\n  \"rushes_yards\" varchar(100)\n  \"rushes_touchdowns\" varchar(100)\n  \"rushing_average_yards_per\" varchar(100)\n  \"rushes_first_down\" varchar(100)\n  \"rushes_longest\" varchar(100)\n}\n\nTable \"american_football_sacks_against_stats\" {\n  \"id\" int4 [not null, increment]\n  \"sacks_against_yards\" varchar(100)\n  \"sacks_against_total\" varchar(100)\n}\n\nTable \"american_football_scoring_stats\" {\n  \"id\" int4 [not null, increment]\n  \"touchdowns_total\" varchar(100)\n  \"touchdowns_passing\" varchar(100)\n  \"touchdowns_rushing\" varchar(100)\n  \"touchdowns_special_teams\" varchar(100)\n  \"touchdowns_defensive\" varchar(100)\n  \"extra_points_attempts\" varchar(100)\n  \"extra_points_made\" varchar(100)\n  \"extra_points_missed\" varchar(100)\n  \"extra_points_blocked\" varchar(100)\n  \"field_goal_attempts\" varchar(100)\n  \"field_goals_made\" varchar(100)\n  \"field_goals_missed\" varchar(100)\n  \"field_goals_blocked\" varchar(100)\n  \"safeties_against\" varchar(100)\n  \"two_point_conversions_attempts\" varchar(100)\n  \"two_point_conversions_made\" varchar(100)\n  \"touchbacks_total\" varchar(100)\n}\n\nTable \"american_football_special_teams_stats\" {\n  \"id\" int4 [not null, increment]\n  \"returns_punt_total\" varchar(100)\n  \"returns_punt_yards\" varchar(100)\n  \"returns_punt_average\" varchar(100)\n  \"returns_punt_longest\" varchar(100)\n  \"returns_punt_touchdown\" varchar(100)\n  \"returns_kickoff_total\" varchar(100)\n  \"returns_kickoff_yards\" varchar(100)\n  \"returns_kickoff_average\" varchar(100)\n  \"returns_kickoff_longest\" varchar(100)\n  \"returns_kickoff_touchdown\" varchar(100)\n  \"returns_total\" varchar(100)\n  \"returns_yards\" varchar(100)\n  \"punts_total\" varchar(100)\n  \"punts_yards_gross\" varchar(100)\n  \"punts_yards_net\" varchar(100)\n  \"punts_longest\" varchar(100)\n  \"punts_inside_20\" varchar(100)\n  \"punts_inside_20_percentage\" varchar(100)\n  \"punts_average\" varchar(100)\n  \"punts_blocked\" varchar(100)\n  \"touchbacks_total\" varchar(100)\n  \"touchbacks_total_percentage\" varchar(100)\n  \"touchbacks_kickoffs\" varchar(100)\n  \"touchbacks_kickoffs_percentage\" varchar(100)\n  \"touchbacks_punts\" varchar(100)\n  \"touchbacks_punts_percentage\" varchar(100)\n  \"touchbacks_interceptions\" varchar(100)\n  \"touchbacks_interceptions_percentage\" varchar(100)\n  \"fair_catches\" varchar(100)\n}\n\nTable \"baseball_action_contact_details\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_action_pitch_id\" int4 [not null]\n  \"location\" varchar(100)\n  \"strength\" varchar(100)\n  \"velocity\" int4\n  \"comment\" text\n  \"trajectory_coordinates\" varchar(100)\n  \"trajectory_formula\" varchar(100)\n}\n\nTable \"baseball_action_pitches\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_action_play_id\" int4 [not null]\n  \"sequence_number\" int4\n  \"baseball_defensive_group_id\" int4\n  \"umpire_call\" varchar(100)\n  \"pitch_location\" varchar(100)\n  \"pitch_type\" varchar(100)\n  \"pitch_velocity\" int4\n  \"comment\" text\n  \"trajectory_coordinates\" varchar(100)\n  \"trajectory_formula\" varchar(100)\n  \"ball_type\" varchar(40)\n  \"strike_type\" varchar(40)\n}\n\nTable \"baseball_action_plays\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_event_state_id\" int4 [not null]\n  \"play_type\" varchar(100)\n  \"notation\" varchar(100)\n  \"notation_yaml\" text\n  \"baseball_defensive_group_id\" int4\n  \"comment\" varchar(255)\n  \"runner_on_first_advance\" int4\n  \"runner_on_second_advance\" int4\n  \"runner_on_third_advance\" int4\n  \"outs_recorded\" int4\n  \"rbi\" int4\n  \"runs_scored\" int4\n  \"earned_runs_scored\" varchar(100)\n}\n\nTable \"baseball_action_substitutions\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_event_state_id\" int4 [not null]\n  \"sequence_number\" int4\n  \"person_type\" varchar(100)\n  \"person_original_id\" int4\n  \"person_original_position_id\" int4\n  \"person_original_lineup_slot\" int4\n  \"person_replacing_id\" int4\n  \"person_replacing_position_id\" int4\n  \"person_replacing_lineup_slot\" int4\n  \"substitution_reason\" varchar(100)\n  \"comment\" varchar(100)\n}\n\nTable \"baseball_defensive_group\" {\n  \"id\" int4 [not null, increment]\n}\n\nTable \"baseball_defensive_players\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_defensive_group_id\" int4 [not null]\n  \"player_id\" int4 [not null]\n  \"position_id\" int4 [not null]\n}\n\nTable \"baseball_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"double_plays\" int4\n  \"triple_plays\" int4\n  \"putouts\" int4\n  \"assists\" int4\n  \"errors\" int4\n  \"fielding_percentage\" numeric\n  \"defensive_average\" numeric\n  \"errors_passed_ball\" int4\n  \"errors_catchers_interference\" int4\n}\n\nTable \"baseball_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int2\n  \"sequence_number\" int4\n  \"at_bat_number\" int4\n  \"inning_value\" int4\n  \"inning_half\" varchar(100)\n  \"outs\" int4\n  \"balls\" int4\n  \"strikes\" int4\n  \"runner_on_first_id\" int4\n  \"runner_on_second_id\" int4\n  \"runner_on_third_id\" int4\n  \"runner_on_first\" int2\n  \"runner_on_second\" int2\n  \"runner_on_third\" int2\n  \"runs_this_inning_half\" int4\n  \"pitcher_id\" int4\n  \"batter_id\" int4\n  \"batter_side\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"baseball_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"average\" numeric\n  \"runs_scored\" int4\n  \"at_bats\" int4\n  \"hits\" int4\n  \"rbi\" int4\n  \"total_bases\" int4\n  \"slugging_percentage\" numeric\n  \"bases_on_balls\" int4\n  \"strikeouts\" int4\n  \"left_on_base\" int4\n  \"left_in_scoring_position\" int4\n  \"singles\" int4\n  \"doubles\" int4\n  \"triples\" int4\n  \"home_runs\" int4\n  \"grand_slams\" int4\n  \"at_bats_per_rbi\" numeric\n  \"plate_appearances_per_rbi\" numeric\n  \"at_bats_per_home_run\" numeric\n  \"plate_appearances_per_home_run\" numeric\n  \"sac_flies\" int4\n  \"sac_bunts\" int4\n  \"grounded_into_double_play\" int4\n  \"moved_up\" int4\n  \"on_base_percentage\" numeric\n  \"stolen_bases\" int4\n  \"stolen_bases_caught\" int4\n  \"stolen_bases_average\" numeric\n  \"hit_by_pitch\" int4\n  \"defensive_interferance_reaches\" int4\n  \"on_base_plus_slugging\" numeric\n  \"plate_appearances\" int4\n  \"hits_extra_base\" int4\n}\n\nTable \"baseball_pitching_stats\" {\n  \"id\" int4 [not null, increment]\n  \"runs_allowed\" int4\n  \"singles_allowed\" int4\n  \"doubles_allowed\" int4\n  \"triples_allowed\" int4\n  \"home_runs_allowed\" int4\n  \"innings_pitched\" varchar(20)\n  \"hits\" int4\n  \"earned_runs\" int4\n  \"unearned_runs\" int4\n  \"bases_on_balls\" int4\n  \"bases_on_balls_intentional\" int4\n  \"strikeouts\" int4\n  \"strikeout_to_bb_ratio\" numeric\n  \"number_of_pitches\" int4\n  \"era\" numeric\n  \"inherited_runners_scored\" int4\n  \"pick_offs\" int4\n  \"errors_hit_with_pitch\" int4\n  \"errors_wild_pitch\" int4\n  \"balks\" int4\n  \"wins\" int4\n  \"losses\" int4\n  \"saves\" int4\n  \"shutouts\" int4\n  \"games_complete\" int4\n  \"games_finished\" int4\n  \"winning_percentage\" numeric\n  \"event_credit\" varchar(40)\n  \"save_credit\" varchar(40)\n}\n\nTable \"basketball_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"steals_total\" varchar(100)\n  \"steals_per_game\" varchar(100)\n  \"blocks_total\" varchar(100)\n  \"blocks_per_game\" varchar(100)\n}\n\nTable \"basketball_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"period_value\" varchar(100)\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"basketball_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"field_goals_made\" int4\n  \"field_goals_attempted\" int4\n  \"field_goals_percentage\" varchar(100)\n  \"field_goals_per_game\" varchar(100)\n  \"field_goals_attempted_per_game\" varchar(100)\n  \"field_goals_percentage_adjusted\" varchar(100)\n  \"three_pointers_made\" int4\n  \"three_pointers_attempted\" int4\n  \"three_pointers_percentage\" varchar(100)\n  \"three_pointers_per_game\" varchar(100)\n  \"three_pointers_attempted_per_game\" varchar(100)\n  \"free_throws_made\" varchar(100)\n  \"free_throws_attempted\" varchar(100)\n  \"free_throws_percentage\" varchar(100)\n  \"free_throws_per_game\" varchar(100)\n  \"free_throws_attempted_per_game\" varchar(100)\n  \"points_scored_total\" varchar(100)\n  \"points_scored_per_game\" varchar(100)\n  \"assists_total\" varchar(100)\n  \"assists_per_game\" varchar(100)\n  \"turnovers_total\" varchar(100)\n  \"turnovers_per_game\" varchar(100)\n  \"points_scored_off_turnovers\" varchar(100)\n  \"points_scored_in_paint\" varchar(100)\n  \"points_scored_on_second_chance\" varchar(100)\n  \"points_scored_on_fast_break\" varchar(100)\n}\n\nTable \"basketball_rebounding_stats\" {\n  \"id\" int4 [not null, increment]\n  \"rebounds_total\" varchar(100)\n  \"rebounds_per_game\" varchar(100)\n  \"rebounds_defensive\" varchar(100)\n  \"rebounds_offensive\" varchar(100)\n  \"team_rebounds_total\" varchar(100)\n  \"team_rebounds_per_game\" varchar(100)\n  \"team_rebounds_defensive\" varchar(100)\n  \"team_rebounds_offensive\" varchar(100)\n}\n\nTable \"basketball_team_stats\" {\n  \"id\" int4 [not null, increment]\n  \"timeouts_left\" varchar(100)\n  \"largest_lead\" varchar(100)\n  \"fouls_total\" varchar(100)\n  \"turnover_margin\" varchar(100)\n}\n\nTable \"bookmakers\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_key\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"location_id\" int4\n}\n\nTable \"core_person_stats\" {\n  \"id\" int4 [not null, increment]\n  \"time_played_event\" varchar(40)\n  \"time_played_total\" varchar(40)\n  \"time_played_event_average\" varchar(40)\n  \"events_played\" int4\n  \"events_started\" int4\n  \"position_id\" int4\n}\n\nTable \"core_stats\" {\n  \"id\" int4 [not null, increment]\n  \"score\" varchar(100)\n  \"score_opposing\" varchar(100)\n  \"score_attempts\" varchar(100)\n  \"score_attempts_opposing\" varchar(100)\n  \"score_percentage\" varchar(100)\n  \"score_percentage_opposing\" varchar(100)\n}\n\nTable \"db_info\" {\n  \"version\" varchar(100) [not null, default: 16]\n}\n\nTable \"display_names\" {\n  \"id\" int4 [not null, increment]\n  \"language\" varchar(100) [not null]\n  \"entity_type\" varchar(100) [not null]\n  \"entity_id\" int4 [not null]\n  \"full_name\" varchar(100)\n  \"first_name\" varchar(100)\n  \"middle_name\" varchar(100)\n  \"last_name\" varchar(100)\n  \"alias\" varchar(100)\n  \"abbreviation\" varchar(100)\n  \"short_name\" varchar(100)\n  \"prefix\" varchar(20)\n  \"suffix\" varchar(20)\n}\n\nTable \"document_classes\" {\n  \"id\" int4 [not null, increment]\n  \"name\" varchar(100)\n}\n\nTable \"document_contents\" {\n  \"id\" int4 [not null, increment]\n  \"document_id\" int4 [not null]\n  \"sportsml\" varchar(200)\n  \"abstract\" text\n}\n\nTable \"document_fixtures\" {\n  \"id\" int4 [not null, increment]\n  \"fixture_key\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"name\" varchar(100)\n  \"document_class_id\" int4 [not null]\n}\n\nTable \"document_fixtures_events\" {\n  \"id\" int4 [not null, increment]\n  \"document_fixture_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"latest_document_id\" int4 [not null]\n  \"last_update\" timestamp\n}\n\nTable \"document_package_entry\" {\n  \"id\" int4 [not null, increment]\n  \"document_package_id\" int4 [not null]\n  \"rank\" varchar(100)\n  \"document_id\" int4 [not null]\n  \"headline\" varchar(100)\n  \"short_headline\" varchar(100)\n}\n\nTable \"document_packages\" {\n  \"id\" int4 [not null, increment]\n  \"package_key\" varchar(100)\n  \"package_name\" varchar(100)\n  \"date_time\" date\n}\n\nTable \"documents\" {\n  \"id\" int4 [not null, increment]\n  \"doc_id\" varchar(75) [not null]\n  \"publisher_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"title\" varchar(255)\n  \"language\" varchar(100)\n  \"priority\" varchar(100)\n  \"revision_id\" varchar(75)\n  \"stats_coverage\" varchar(100)\n  \"document_fixture_id\" int4 [not null]\n  \"source_id\" int4\n  \"db_loading_date_time\" timestamp\n}\n\nTable \"documents_media\" {\n  \"id\" int4 [not null, increment]\n  \"document_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n  \"media_caption_id\" int4 [not null]\n}\n\nTable \"events\" {\n  \"id\" int4 [not null, increment]\n  \"event_key\" varchar(100) [not null]\n  \"publisher_id\" int4 [not null]\n  \"start_date_time\" timestamp\n  \"site_id\" int4\n  \"site_alignment\" varchar(100)\n  \"event_status\" varchar(100)\n  \"duration\" varchar(100)\n  \"attendance\" varchar(100)\n  \"last_update\" timestamp\n}\n\nTable \"events_documents\" {\n  \"event_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"events_media\" {\n  \"event_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"events_sub_seasons\" {\n  \"event_id\" int4 [not null]\n  \"sub_season_id\" int4 [not null]\n}\n\nTable \"ice_hockey_action_participants\" {\n  \"id\" int4 [not null, increment]\n  \"ice_hockey_action_play_id\" int4 [not null]\n  \"person_id\" int4 [not null]\n  \"participant_role\" varchar(100) [not null]\n  \"point_credit\" int4\n}\n\nTable \"ice_hockey_action_plays\" {\n  \"id\" int4 [not null, increment]\n  \"ice_hockey_event_state_id\" int4 [not null]\n  \"play_type\" varchar(100)\n  \"score_attempt_type\" varchar(100)\n  \"play_result\" varchar(100)\n  \"comment\" varchar(255)\n}\n\nTable \"ice_hockey_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"shots_power_play_allowed\" varchar(100)\n  \"shots_penalty_shot_allowed\" varchar(100)\n  \"goals_power_play_allowed\" varchar(100)\n  \"goals_penalty_shot_allowed\" varchar(100)\n  \"goals_against_average\" varchar(100)\n  \"saves\" varchar(100)\n  \"save_percentage\" varchar(100)\n  \"penalty_killing_amount\" varchar(100)\n  \"penalty_killing_percentage\" varchar(100)\n  \"shots_blocked\" varchar(100)\n  \"takeaways\" varchar(100)\n  \"shutouts\" varchar(100)\n  \"minutes_penalty_killing\" varchar(100)\n  \"hits\" varchar(100)\n  \"goals_empty_net_allowed\" varchar(100)\n  \"goals_short_handed_allowed\" varchar(100)\n  \"goals_shootout_allowed\" varchar(100)\n  \"shots_shootout_allowed\" varchar(100)\n}\n\nTable \"ice_hockey_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"period_value\" varchar(100)\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"ice_hockey_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"goals_game_winning\" varchar(100)\n  \"goals_game_tying\" varchar(100)\n  \"goals_power_play\" varchar(100)\n  \"goals_short_handed\" varchar(100)\n  \"goals_even_strength\" varchar(100)\n  \"goals_empty_net\" varchar(100)\n  \"goals_overtime\" varchar(100)\n  \"goals_shootout\" varchar(100)\n  \"goals_penalty_shot\" varchar(100)\n  \"assists\" varchar(100)\n  \"points\" varchar(100)\n  \"power_play_amount\" varchar(100)\n  \"power_play_percentage\" varchar(100)\n  \"shots_penalty_shot_taken\" varchar(100)\n  \"shots_penalty_shot_missed\" varchar(100)\n  \"shots_penalty_shot_percentage\" varchar(100)\n  \"giveaways\" varchar(100)\n  \"minutes_power_play\" varchar(100)\n  \"faceoff_wins\" varchar(100)\n  \"faceoff_losses\" varchar(100)\n  \"faceoff_win_percentage\" varchar(100)\n  \"scoring_chances\" varchar(100)\n}\n\nTable \"ice_hockey_player_stats\" {\n  \"id\" int4 [not null, increment]\n  \"plus_minus\" varchar(100)\n}\n\nTable \"injury_phases\" {\n  \"id\" int4 [not null, increment]\n  \"person_id\" int4 [not null]\n  \"injury_status\" varchar(100)\n  \"injury_type\" varchar(100)\n  \"injury_comment\" varchar(100)\n  \"disabled_list\" varchar(100)\n  \"start_date_time\" timestamp\n  \"end_date_time\" timestamp\n  \"season_id\" int4\n  \"phase_type\" varchar(100)\n  \"injury_side\" varchar(100)\n}\n\nTable \"key_aliases\" {\n  \"id\" int4 [not null, increment]\n  \"key_id\" int4 [not null]\n  \"key_root_id\" int4 [not null]\n}\n\nTable \"key_roots\" {\n  \"id\" int4 [not null, increment]\n  \"key_type\" varchar(100)\n}\n\nTable \"latest_revisions\" {\n  \"id\" int4 [not null, increment]\n  \"revision_id\" varchar(75) [not null]\n  \"latest_document_id\" int4 [not null]\n}\n\nTable \"locations\" {\n  \"id\" int4 [not null, increment]\n  \"timezone\" varchar(100)\n  \"latitude\" varchar(100)\n  \"longitude\" varchar(100)\n  \"country_code\" varchar(100)\n}\n\nTable \"media\" {\n  \"id\" int4 [not null, increment]\n  \"object_id\" int4\n  \"source_id\" int4\n  \"revision_id\" int4\n  \"media_type\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"date_time\" varchar(100)\n  \"credit_id\" int4 [not null]\n  \"db_loading_date_time\" timestamp\n  \"creation_location_id\" int4 [not null]\n}\n\nTable \"media_captions\" {\n  \"id\" int4 [not null, increment]\n  \"media_id\" int4 [not null]\n  \"caption_type\" varchar(100)\n  \"caption\" varchar(100)\n  \"caption_author_id\" int4 [not null]\n  \"language\" varchar(100)\n  \"caption_size\" varchar(100)\n}\n\nTable \"media_contents\" {\n  \"id\" int4 [not null, increment]\n  \"media_id\" int4 [not null]\n  \"object\" varchar(100)\n  \"format\" varchar(100)\n  \"mime_type\" varchar(100)\n  \"height\" varchar(100)\n  \"width\" varchar(100)\n  \"duration\" varchar(100)\n  \"file_size\" varchar(100)\n  \"resolution\" varchar(100)\n}\n\nTable \"media_keywords\" {\n  \"id\" int4 [not null, increment]\n  \"keyword\" varchar(100)\n  \"media_id\" int4 [not null]\n}\n\nTable \"motor_racing_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"lap\" varchar(100)\n  \"laps_remaining\" varchar(100)\n  \"time_elapsed\" varchar(100)\n  \"flag_state\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"motor_racing_qualifying_stats\" {\n  \"id\" int4 [not null, increment]\n  \"grid\" varchar(100)\n  \"pole_position\" varchar(100)\n  \"pole_wins\" varchar(100)\n  \"qualifying_speed\" varchar(100)\n  \"qualifying_speed_units\" varchar(100)\n  \"qualifying_time\" varchar(100)\n  \"qualifying_position\" varchar(100)\n}\n\nTable \"motor_racing_race_stats\" {\n  \"id\" int4 [not null, increment]\n  \"time_behind_leader\" varchar(100)\n  \"laps_behind_leader\" varchar(100)\n  \"time_ahead_follower\" varchar(100)\n  \"laps_ahead_follower\" varchar(100)\n  \"time\" varchar(100)\n  \"points\" varchar(100)\n  \"points_rookie\" varchar(100)\n  \"bonus\" varchar(100)\n  \"laps_completed\" varchar(100)\n  \"laps_leading_total\" varchar(100)\n  \"distance_leading\" varchar(100)\n  \"distance_completed\" varchar(100)\n  \"distance_units\" varchar(40)\n  \"speed_average\" varchar(40)\n  \"speed_units\" varchar(40)\n  \"status\" varchar(40)\n  \"finishes_top_5\" varchar(40)\n  \"finishes_top_10\" varchar(40)\n  \"starts\" varchar(40)\n  \"finishes\" varchar(40)\n  \"non_finishes\" varchar(40)\n  \"wins\" varchar(40)\n  \"races_leading\" varchar(40)\n  \"money\" varchar(40)\n  \"money_units\" varchar(40)\n  \"leads_total\" varchar(40)\n}\n\nTable \"outcome_totals\" {\n  \"id\" int4 [not null, increment]\n  \"standing_subgroup_id\" int4 [not null]\n  \"outcome_holder_type\" varchar(100)\n  \"outcome_holder_id\" int4\n  \"rank\" varchar(100)\n  \"wins\" varchar(100)\n  \"losses\" varchar(100)\n  \"ties\" varchar(100)\n  \"undecideds\" varchar(100)\n  \"winning_percentage\" varchar(100)\n  \"points_scored_for\" varchar(100)\n  \"points_scored_against\" varchar(100)\n  \"points_difference\" varchar(100)\n  \"standing_points\" varchar(100)\n  \"streak_type\" varchar(100)\n  \"streak_duration\" varchar(100)\n  \"streak_total\" varchar(100)\n  \"streak_start\" date\n  \"streak_end\" date\n}\n\nTable \"participants_events\" {\n  \"id\" int4 [not null, increment]\n  \"participant_type\" varchar(100) [not null]\n  \"participant_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"alignment\" varchar(100)\n  \"score\" varchar(100)\n  \"event_outcome\" varchar(100)\n  \"rank\" int4\n}\n\nTable \"periods\" {\n  \"id\" int4 [not null, increment]\n  \"participant_event_id\" int4 [not null]\n  \"period_value\" varchar(100)\n  \"score\" varchar(100)\n}\n\nTable \"person_event_metadata\" {\n  \"id\" int4 [not null, increment]\n  \"person_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"status\" varchar(100)\n  \"health\" varchar(100)\n  \"weight\" varchar(100)\n  \"role_id\" int4\n  \"position_id\" int4\n  \"team_id\" int4\n  \"lineup_slot\" int4\n  \"lineup_slot_sequence\" int4\n}\n\nTable \"person_phases\" {\n  \"id\" int4 [not null, increment]\n  \"person_id\" int4 [not null]\n  \"membership_type\" varchar(40) [not null]\n  \"membership_id\" int4 [not null]\n  \"role_id\" int4\n  \"role_status\" varchar(40)\n  \"phase_status\" varchar(40)\n  \"uniform_number\" varchar(20)\n  \"regular_position_id\" int4\n  \"regular_position_depth\" varchar(40)\n  \"height\" varchar(100)\n  \"weight\" varchar(100)\n  \"start_date_time\" timestamp\n  \"start_season_id\" int4\n  \"end_date_time\" timestamp\n  \"end_season_id\" int4\n  \"entry_reason\" varchar(40)\n  \"exit_reason\" varchar(40)\n  \"selection_level\" int4\n  \"selection_sublevel\" int4\n  \"selection_overall\" int4\n}\n\nTable \"persons\" {\n  \"id\" int4 [not null, increment]\n  \"person_key\" varchar(100) [not null]\n  \"publisher_id\" int4 [not null]\n  \"gender\" varchar(20)\n  \"birth_date\" varchar(30)\n  \"death_date\" varchar(30)\n  \"birth_location_id\" int4\n  \"hometown_location_id\" int4\n  \"residence_location_id\" int4\n  \"death_location_id\" int4\n}\n\nTable \"persons_documents\" {\n  \"person_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"persons_media\" {\n  \"person_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"positions\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_id\" int4 [not null]\n  \"abbreviation\" varchar(100) [not null]\n}\n\nTable \"publishers\" {\n  \"id\" int4 [not null, increment]\n  \"publisher_key\" varchar(100) [not null]\n  \"publisher_name\" varchar(100)\n}\n\nTable \"roles\" {\n  \"id\" int4 [not null, increment]\n  \"role_key\" varchar(100) [not null]\n  \"role_name\" varchar(100)\n  \"comment\" varchar(100)\n}\n\nTable \"seasons\" {\n  \"id\" int4 [not null, increment]\n  \"season_key\" int4 [not null]\n  \"publisher_id\" int4 [not null]\n  \"league_id\" int4 [not null]\n  \"start_date_time\" timestamp\n  \"end_date_time\" timestamp\n}\n\nTable \"sites\" {\n  \"id\" int4 [not null, increment]\n  \"site_key\" int4 [not null]\n  \"publisher_id\" int4 [not null]\n  \"location_id\" int4\n}\n\nTable \"soccer_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"shots_penalty_shot_allowed\" varchar(100)\n  \"goals_penalty_shot_allowed\" varchar(100)\n  \"goals_against_average\" varchar(100)\n  \"goals_against_total\" varchar(100)\n  \"saves\" varchar(100)\n  \"save_percentage\" varchar(100)\n  \"catches_punches\" varchar(100)\n  \"shots_on_goal_total\" varchar(100)\n  \"shots_shootout_total\" varchar(100)\n  \"shots_shootout_allowed\" varchar(100)\n  \"shots_blocked\" varchar(100)\n  \"shutouts\" varchar(100)\n}\n\nTable \"soccer_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"period_value\" varchar(100)\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"minutes_elapsed\" varchar(100)\n  \"period_minute_elapsed\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"soccer_foul_stats\" {\n  \"id\" int4 [not null, increment]\n  \"fouls_suffered\" varchar(100)\n  \"fouls_commited\" varchar(100)\n  \"cautions_total\" varchar(100)\n  \"cautions_pending\" varchar(100)\n  \"caution_points_total\" varchar(100)\n  \"caution_points_pending\" varchar(100)\n  \"ejections_total\" varchar(100)\n}\n\nTable \"soccer_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"goals_game_winning\" varchar(100)\n  \"goals_game_tying\" varchar(100)\n  \"goals_overtime\" varchar(100)\n  \"goals_shootout\" varchar(100)\n  \"goals_total\" varchar(100)\n  \"assists_game_winning\" varchar(100)\n  \"assists_game_tying\" varchar(100)\n  \"assists_overtime\" varchar(100)\n  \"assists_total\" varchar(100)\n  \"points\" varchar(100)\n  \"shots_total\" varchar(100)\n  \"shots_on_goal_total\" varchar(100)\n  \"shots_hit_frame\" varchar(100)\n  \"shots_penalty_shot_taken\" varchar(100)\n  \"shots_penalty_shot_scored\" varchar(100)\n  \"shots_penalty_shot_missed\" varchar(40)\n  \"shots_penalty_shot_percentage\" varchar(40)\n  \"shots_shootout_taken\" varchar(40)\n  \"shots_shootout_scored\" varchar(40)\n  \"shots_shootout_missed\" varchar(40)\n  \"shots_shootout_percentage\" varchar(40)\n  \"giveaways\" varchar(40)\n  \"offsides\" varchar(40)\n  \"corner_kicks\" varchar(40)\n  \"hat_tricks\" varchar(40)\n}\n\nTable \"standing_subgroups\" {\n  \"id\" int4 [not null, increment]\n  \"standing_id\" int4 [not null]\n  \"affiliation_id\" int4 [not null]\n}\n\nTable \"standings\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_id\" int4 [not null]\n  \"standing_type\" varchar(100)\n  \"sub_season_id\" int4 [not null]\n  \"last_updated\" varchar(100)\n  \"duration_scope\" varchar(100)\n  \"competition_scope\" varchar(100)\n  \"competition_scope_id\" varchar(100)\n  \"alignment_scope\" varchar(100)\n  \"site_scope\" varchar(100)\n  \"scoping_label\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"source\" varchar(100)\n}\n\nTable \"stats\" {\n  \"id\" int4 [not null, increment]\n  \"stat_repository_type\" varchar(100)\n  \"stat_repository_id\" int4 [not null]\n  \"stat_holder_type\" varchar(100)\n  \"stat_holder_id\" int4\n  \"stat_coverage_type\" varchar(100)\n  \"stat_coverage_id\" int4\n  \"context\" varchar(40) [not null]\n}\n\nTable \"sub_periods\" {\n  \"id\" int4 [not null, increment]\n  \"period_id\" int4 [not null]\n  \"sub_period_value\" varchar(100)\n  \"score\" varchar(100)\n}\n\nTable \"sub_seasons\" {\n  \"id\" int4 [not null, increment]\n  \"sub_season_key\" varchar(100) [not null]\n  \"season_id\" int4 [not null]\n  \"sub_season_type\" varchar(100) [not null]\n  \"start_date_time\" timestamp\n  \"end_date_time\" timestamp\n}\n\nTable \"team_american_football_stats\" {\n  \"id\" int4 [not null, increment]\n  \"yards_per_attempt\" varchar(100)\n  \"average_starting_position\" varchar(100)\n  \"timeouts\" varchar(100)\n  \"time_of_possession\" varchar(100)\n  \"turnover_ratio\" varchar(100)\n}\n\nTable \"team_phases\" {\n  \"id\" int4 [not null, increment]\n  \"team_id\" int4 [not null]\n  \"start_season_id\" int4\n  \"end_season_id\" int4\n  \"affiliation_id\" int4 [not null]\n  \"start_date_time\" varchar(100)\n  \"end_date_time\" varchar(100)\n  \"phase_status\" varchar(40)\n  \"role_id\" int4\n}\n\nTable \"teams\" {\n  \"id\" int4 [not null, increment]\n  \"team_key\" varchar(100) [not null]\n  \"publisher_id\" int4 [not null]\n  \"home_site_id\" int4\n}\n\nTable \"teams_documents\" {\n  \"team_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"teams_media\" {\n  \"team_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"tennis_action_points\" {\n  \"id\" int4 [not null, increment]\n  \"sub_period_id\" varchar(100)\n  \"sequence_number\" varchar(100)\n  \"win_type\" varchar(100)\n}\n\nTable \"tennis_action_volleys\" {\n  \"id\" int4 [not null, increment]\n  \"sequence_number\" varchar(100)\n  \"tennis_action_points_id\" int4\n  \"landing_location\" varchar(100)\n  \"swing_type\" varchar(100)\n  \"result\" varchar(100)\n  \"spin_type\" varchar(100)\n  \"trajectory_details\" varchar(100)\n}\n\nTable \"tennis_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"tennis_set\" varchar(100)\n  \"game\" varchar(100)\n  \"server_person_id\" int4\n  \"server_score\" varchar(100)\n  \"receiver_person_id\" int4\n  \"receiver_score\" varchar(100)\n  \"service_number\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"tennis_return_stats\" {\n  \"id\" int4 [not null, increment]\n  \"returns_played\" varchar(100)\n  \"matches_played\" varchar(100)\n  \"first_service_return_points_won\" varchar(100)\n  \"first_service_return_points_won_pct\" varchar(100)\n  \"second_service_return_points_won\" varchar(100)\n  \"second_service_return_points_won_pct\" varchar(100)\n  \"return_games_played\" varchar(100)\n  \"return_games_won\" varchar(100)\n  \"return_games_won_pct\" varchar(100)\n  \"break_points_played\" varchar(100)\n  \"break_points_converted\" varchar(100)\n  \"break_points_converted_pct\" varchar(100)\n}\n\nTable \"tennis_service_stats\" {\n  \"id\" int4 [not null, increment]\n  \"services_played\" varchar(100)\n  \"matches_played\" varchar(100)\n  \"aces\" varchar(100)\n  \"first_services_good\" varchar(100)\n  \"first_services_good_pct\" varchar(100)\n  \"first_service_points_won\" varchar(100)\n  \"first_service_points_won_pct\" varchar(100)\n  \"second_service_points_won\" varchar(100)\n  \"second_service_points_won_pct\" varchar(100)\n  \"service_games_played\" varchar(100)\n  \"service_games_won\" varchar(100)\n  \"service_games_won_pct\" varchar(100)\n  \"break_points_played\" varchar(100)\n  \"break_points_saved\" varchar(100)\n  \"break_points_saved_pct\" varchar(100)\n}\n\nTable \"wagering_moneylines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line\" varchar(100)\n  \"line_opening\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"wagering_odds_lines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"numerator\" varchar(100)\n  \"denominator\" varchar(100)\n  \"prediction\" varchar(100)\n  \"payout_calculation\" varchar(100)\n  \"payout_amount\" varchar(100)\n}\n\nTable \"wagering_runlines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line\" varchar(100)\n  \"line_opening\" varchar(100)\n  \"line_value\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"wagering_straight_spread_lines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line_value\" varchar(100)\n  \"line_value_opening\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"wagering_total_score_lines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line_over\" varchar(100)\n  \"line_under\" varchar(100)\n  \"total\" varchar(100)\n  \"total_opening\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"weather_conditions\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"temperature\" varchar(100)\n  \"temperature_units\" varchar(40)\n  \"humidity\" varchar(100)\n  \"clouds\" varchar(100)\n  \"wind_direction\" varchar(100)\n  \"wind_velocity\" varchar(100)\n  \"weather_code\" varchar(100)\n}\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/yugabyte/yugabyte-db/blob/master/sample/sportsdb_tables.sql"
      }
    },
    {
      "task_id": "baseball_player_analysis",
      "task_name": "Baseball Player Analysis",
      "category_id": "sports",
      "category_name": "Sports",
      "description": "Consolidate scattered baseball player data into comprehensive analysis table combining offensive and defensive statistics.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-18",
      "difficulty": "L3",
      "tags": [
        "reporting and analytics",
        "statistical aggregation",
        "schema design"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"addresses\" {\n  \"id\" int4 [not null, increment]\n  \"location_id\" int4 [not null]\n  \"language\" varchar(100)\n  \"suite\" varchar(100)\n  \"floor\" varchar(100)\n  \"building\" varchar(100)\n  \"street_number\" varchar(100)\n  \"street_prefix\" varchar(100)\n  \"street\" varchar(100)\n  \"street_suffix\" varchar(100)\n  \"neighborhood\" varchar(100)\n  \"district\" varchar(100)\n  \"locality\" varchar(100)\n  \"county\" varchar(100)\n  \"region\" varchar(100)\n  \"postal_code\" varchar(100)\n  \"country\" varchar(100)\n}\n\nTable \"affiliation_phases\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_id\" int4 [not null]\n  \"ancestor_affiliation_id\" int4\n  \"start_season_id\" int4\n  \"start_date_time\" timestamp\n  \"end_season_id\" int4\n  \"end_date_time\" timestamp\n}\n\nTable \"affiliations\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_key\" varchar(100) [not null]\n  \"affiliation_type\" varchar(100)\n  \"publisher_id\" int4 [not null]\n}\n\nTable \"affiliations_documents\" {\n  \"affiliation_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"affiliations_events\" {\n  \"affiliation_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n}\n\nTable \"affiliations_media\" {\n  \"affiliation_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"american_football_action_participants\" {\n  \"id\" int4 [not null, increment]\n  \"american_football_action_play_id\" int4 [not null]\n  \"person_id\" int4 [not null]\n  \"participant_role\" varchar(100) [not null]\n  \"score_type\" varchar(100)\n  \"field_line\" int4\n  \"yardage\" int4\n  \"score_credit\" int4\n  \"yards_gained\" int4\n}\n\nTable \"american_football_action_plays\" {\n  \"id\" int4 [not null, increment]\n  \"american_football_event_state_id\" int4 [not null]\n  \"play_type\" varchar(100)\n  \"score_attempt_type\" varchar(100)\n  \"drive_result\" varchar(100)\n  \"points\" int4\n  \"comment\" varchar(255)\n}\n\nTable \"american_football_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"tackles_total\" varchar(100)\n  \"tackles_solo\" varchar(100)\n  \"tackles_assists\" varchar(100)\n  \"interceptions_total\" varchar(100)\n  \"interceptions_yards\" varchar(100)\n  \"interceptions_average\" varchar(100)\n  \"interceptions_longest\" varchar(100)\n  \"interceptions_touchdown\" varchar(100)\n  \"quarterback_hurries\" varchar(100)\n  \"sacks_total\" varchar(100)\n  \"sacks_yards\" varchar(100)\n  \"passes_defensed\" varchar(100)\n}\n\nTable \"american_football_down_progress_stats\" {\n  \"id\" int4 [not null, increment]\n  \"first_downs_total\" varchar(100)\n  \"first_downs_pass\" varchar(100)\n  \"first_downs_run\" varchar(100)\n  \"first_downs_penalty\" varchar(100)\n  \"conversions_third_down\" varchar(100)\n  \"conversions_third_down_attempts\" varchar(100)\n  \"conversions_third_down_percentage\" varchar(100)\n  \"conversions_fourth_down\" varchar(100)\n  \"conversions_fourth_down_attempts\" varchar(100)\n  \"conversions_fourth_down_percentage\" varchar(100)\n}\n\nTable \"american_football_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int2\n  \"sequence_number\" int4\n  \"period_value\" int4\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"clock_state\" varchar(100)\n  \"down\" int4\n  \"team_in_possession_id\" int4\n  \"distance_for_1st_down\" int4\n  \"field_side\" varchar(100)\n  \"field_line\" int4\n  \"context\" varchar(40)\n}\n\nTable \"american_football_fumbles_stats\" {\n  \"id\" int4 [not null, increment]\n  \"fumbles_committed\" varchar(100)\n  \"fumbles_forced\" varchar(100)\n  \"fumbles_recovered\" varchar(100)\n  \"fumbles_lost\" varchar(100)\n  \"fumbles_yards_gained\" varchar(100)\n  \"fumbles_own_committed\" varchar(100)\n  \"fumbles_own_recovered\" varchar(100)\n  \"fumbles_own_lost\" varchar(100)\n  \"fumbles_own_yards_gained\" varchar(100)\n  \"fumbles_opposing_committed\" varchar(100)\n  \"fumbles_opposing_recovered\" varchar(100)\n  \"fumbles_opposing_lost\" varchar(100)\n  \"fumbles_opposing_yards_gained\" varchar(100)\n}\n\nTable \"american_football_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"offensive_plays_yards\" varchar(100)\n  \"offensive_plays_number\" varchar(100)\n  \"offensive_plays_average_yards_per\" varchar(100)\n  \"possession_duration\" varchar(100)\n  \"turnovers_giveaway\" varchar(100)\n}\n\nTable \"american_football_passing_stats\" {\n  \"id\" int4 [not null, increment]\n  \"passes_attempts\" varchar(100)\n  \"passes_completions\" varchar(100)\n  \"passes_percentage\" varchar(100)\n  \"passes_yards_gross\" varchar(100)\n  \"passes_yards_net\" varchar(100)\n  \"passes_yards_lost\" varchar(100)\n  \"passes_touchdowns\" varchar(100)\n  \"passes_touchdowns_percentage\" varchar(100)\n  \"passes_interceptions\" varchar(100)\n  \"passes_interceptions_percentage\" varchar(100)\n  \"passes_longest\" varchar(100)\n  \"passes_average_yards_per\" varchar(100)\n  \"passer_rating\" varchar(100)\n  \"receptions_total\" varchar(100)\n  \"receptions_yards\" varchar(100)\n  \"receptions_touchdowns\" varchar(100)\n  \"receptions_first_down\" varchar(100)\n  \"receptions_longest\" varchar(100)\n  \"receptions_average_yards_per\" varchar(100)\n}\n\nTable \"american_football_penalties_stats\" {\n  \"id\" int4 [not null, increment]\n  \"penalties_total\" varchar(100)\n  \"penalty_yards\" varchar(100)\n  \"penalty_first_downs\" varchar(100)\n}\n\nTable \"american_football_rushing_stats\" {\n  \"id\" int4 [not null, increment]\n  \"rushes_attempts\" varchar(100)\n  \"rushes_yards\" varchar(100)\n  \"rushes_touchdowns\" varchar(100)\n  \"rushing_average_yards_per\" varchar(100)\n  \"rushes_first_down\" varchar(100)\n  \"rushes_longest\" varchar(100)\n}\n\nTable \"american_football_sacks_against_stats\" {\n  \"id\" int4 [not null, increment]\n  \"sacks_against_yards\" varchar(100)\n  \"sacks_against_total\" varchar(100)\n}\n\nTable \"american_football_scoring_stats\" {\n  \"id\" int4 [not null, increment]\n  \"touchdowns_total\" varchar(100)\n  \"touchdowns_passing\" varchar(100)\n  \"touchdowns_rushing\" varchar(100)\n  \"touchdowns_special_teams\" varchar(100)\n  \"touchdowns_defensive\" varchar(100)\n  \"extra_points_attempts\" varchar(100)\n  \"extra_points_made\" varchar(100)\n  \"extra_points_missed\" varchar(100)\n  \"extra_points_blocked\" varchar(100)\n  \"field_goal_attempts\" varchar(100)\n  \"field_goals_made\" varchar(100)\n  \"field_goals_missed\" varchar(100)\n  \"field_goals_blocked\" varchar(100)\n  \"safeties_against\" varchar(100)\n  \"two_point_conversions_attempts\" varchar(100)\n  \"two_point_conversions_made\" varchar(100)\n  \"touchbacks_total\" varchar(100)\n}\n\nTable \"american_football_special_teams_stats\" {\n  \"id\" int4 [not null, increment]\n  \"returns_punt_total\" varchar(100)\n  \"returns_punt_yards\" varchar(100)\n  \"returns_punt_average\" varchar(100)\n  \"returns_punt_longest\" varchar(100)\n  \"returns_punt_touchdown\" varchar(100)\n  \"returns_kickoff_total\" varchar(100)\n  \"returns_kickoff_yards\" varchar(100)\n  \"returns_kickoff_average\" varchar(100)\n  \"returns_kickoff_longest\" varchar(100)\n  \"returns_kickoff_touchdown\" varchar(100)\n  \"returns_total\" varchar(100)\n  \"returns_yards\" varchar(100)\n  \"punts_total\" varchar(100)\n  \"punts_yards_gross\" varchar(100)\n  \"punts_yards_net\" varchar(100)\n  \"punts_longest\" varchar(100)\n  \"punts_inside_20\" varchar(100)\n  \"punts_inside_20_percentage\" varchar(100)\n  \"punts_average\" varchar(100)\n  \"punts_blocked\" varchar(100)\n  \"touchbacks_total\" varchar(100)\n  \"touchbacks_total_percentage\" varchar(100)\n  \"touchbacks_kickoffs\" varchar(100)\n  \"touchbacks_kickoffs_percentage\" varchar(100)\n  \"touchbacks_punts\" varchar(100)\n  \"touchbacks_punts_percentage\" varchar(100)\n  \"touchbacks_interceptions\" varchar(100)\n  \"touchbacks_interceptions_percentage\" varchar(100)\n  \"fair_catches\" varchar(100)\n}\n\nTable \"baseball_action_contact_details\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_action_pitch_id\" int4 [not null]\n  \"location\" varchar(100)\n  \"strength\" varchar(100)\n  \"velocity\" int4\n  \"comment\" text\n  \"trajectory_coordinates\" varchar(100)\n  \"trajectory_formula\" varchar(100)\n}\n\nTable \"baseball_action_pitches\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_action_play_id\" int4 [not null]\n  \"sequence_number\" int4\n  \"baseball_defensive_group_id\" int4\n  \"umpire_call\" varchar(100)\n  \"pitch_location\" varchar(100)\n  \"pitch_type\" varchar(100)\n  \"pitch_velocity\" int4\n  \"comment\" text\n  \"trajectory_coordinates\" varchar(100)\n  \"trajectory_formula\" varchar(100)\n  \"ball_type\" varchar(40)\n  \"strike_type\" varchar(40)\n}\n\nTable \"baseball_action_plays\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_event_state_id\" int4 [not null]\n  \"play_type\" varchar(100)\n  \"notation\" varchar(100)\n  \"notation_yaml\" text\n  \"baseball_defensive_group_id\" int4\n  \"comment\" varchar(255)\n  \"runner_on_first_advance\" int4\n  \"runner_on_second_advance\" int4\n  \"runner_on_third_advance\" int4\n  \"outs_recorded\" int4\n  \"rbi\" int4\n  \"runs_scored\" int4\n  \"earned_runs_scored\" varchar(100)\n}\n\nTable \"baseball_action_substitutions\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_event_state_id\" int4 [not null]\n  \"sequence_number\" int4\n  \"person_type\" varchar(100)\n  \"person_original_id\" int4\n  \"person_original_position_id\" int4\n  \"person_original_lineup_slot\" int4\n  \"person_replacing_id\" int4\n  \"person_replacing_position_id\" int4\n  \"person_replacing_lineup_slot\" int4\n  \"substitution_reason\" varchar(100)\n  \"comment\" varchar(100)\n}\n\nTable \"baseball_defensive_group\" {\n  \"id\" int4 [not null, increment]\n}\n\nTable \"baseball_defensive_players\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_defensive_group_id\" int4 [not null]\n  \"player_id\" int4 [not null]\n  \"position_id\" int4 [not null]\n}\n\nTable \"baseball_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"double_plays\" int4\n  \"triple_plays\" int4\n  \"putouts\" int4\n  \"assists\" int4\n  \"errors\" int4\n  \"fielding_percentage\" numeric\n  \"defensive_average\" numeric\n  \"errors_passed_ball\" int4\n  \"errors_catchers_interference\" int4\n}\n\nTable \"baseball_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int2\n  \"sequence_number\" int4\n  \"at_bat_number\" int4\n  \"inning_value\" int4\n  \"inning_half\" varchar(100)\n  \"outs\" int4\n  \"balls\" int4\n  \"strikes\" int4\n  \"runner_on_first_id\" int4\n  \"runner_on_second_id\" int4\n  \"runner_on_third_id\" int4\n  \"runner_on_first\" int2\n  \"runner_on_second\" int2\n  \"runner_on_third\" int2\n  \"runs_this_inning_half\" int4\n  \"pitcher_id\" int4\n  \"batter_id\" int4\n  \"batter_side\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"baseball_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"average\" numeric\n  \"runs_scored\" int4\n  \"at_bats\" int4\n  \"hits\" int4\n  \"rbi\" int4\n  \"total_bases\" int4\n  \"slugging_percentage\" numeric\n  \"bases_on_balls\" int4\n  \"strikeouts\" int4\n  \"left_on_base\" int4\n  \"left_in_scoring_position\" int4\n  \"singles\" int4\n  \"doubles\" int4\n  \"triples\" int4\n  \"home_runs\" int4\n  \"grand_slams\" int4\n  \"at_bats_per_rbi\" numeric\n  \"plate_appearances_per_rbi\" numeric\n  \"at_bats_per_home_run\" numeric\n  \"plate_appearances_per_home_run\" numeric\n  \"sac_flies\" int4\n  \"sac_bunts\" int4\n  \"grounded_into_double_play\" int4\n  \"moved_up\" int4\n  \"on_base_percentage\" numeric\n  \"stolen_bases\" int4\n  \"stolen_bases_caught\" int4\n  \"stolen_bases_average\" numeric\n  \"hit_by_pitch\" int4\n  \"defensive_interferance_reaches\" int4\n  \"on_base_plus_slugging\" numeric\n  \"plate_appearances\" int4\n  \"hits_extra_base\" int4\n}\n\nTable \"baseball_pitching_stats\" {\n  \"id\" int4 [not null, increment]\n  \"runs_allowed\" int4\n  \"singles_allowed\" int4\n  \"doubles_allowed\" int4\n  \"triples_allowed\" int4\n  \"home_runs_allowed\" int4\n  \"innings_pitched\" varchar(20)\n  \"hits\" int4\n  \"earned_runs\" int4\n  \"unearned_runs\" int4\n  \"bases_on_balls\" int4\n  \"bases_on_balls_intentional\" int4\n  \"strikeouts\" int4\n  \"strikeout_to_bb_ratio\" numeric\n  \"number_of_pitches\" int4\n  \"era\" numeric\n  \"inherited_runners_scored\" int4\n  \"pick_offs\" int4\n  \"errors_hit_with_pitch\" int4\n  \"errors_wild_pitch\" int4\n  \"balks\" int4\n  \"wins\" int4\n  \"losses\" int4\n  \"saves\" int4\n  \"shutouts\" int4\n  \"games_complete\" int4\n  \"games_finished\" int4\n  \"winning_percentage\" numeric\n  \"event_credit\" varchar(40)\n  \"save_credit\" varchar(40)\n}\n\nTable \"basketball_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"steals_total\" varchar(100)\n  \"steals_per_game\" varchar(100)\n  \"blocks_total\" varchar(100)\n  \"blocks_per_game\" varchar(100)\n}\n\nTable \"basketball_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"period_value\" varchar(100)\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"basketball_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"field_goals_made\" int4\n  \"field_goals_attempted\" int4\n  \"field_goals_percentage\" varchar(100)\n  \"field_goals_per_game\" varchar(100)\n  \"field_goals_attempted_per_game\" varchar(100)\n  \"field_goals_percentage_adjusted\" varchar(100)\n  \"three_pointers_made\" int4\n  \"three_pointers_attempted\" int4\n  \"three_pointers_percentage\" varchar(100)\n  \"three_pointers_per_game\" varchar(100)\n  \"three_pointers_attempted_per_game\" varchar(100)\n  \"free_throws_made\" varchar(100)\n  \"free_throws_attempted\" varchar(100)\n  \"free_throws_percentage\" varchar(100)\n  \"free_throws_per_game\" varchar(100)\n  \"free_throws_attempted_per_game\" varchar(100)\n  \"points_scored_total\" varchar(100)\n  \"points_scored_per_game\" varchar(100)\n  \"assists_total\" varchar(100)\n  \"assists_per_game\" varchar(100)\n  \"turnovers_total\" varchar(100)\n  \"turnovers_per_game\" varchar(100)\n  \"points_scored_off_turnovers\" varchar(100)\n  \"points_scored_in_paint\" varchar(100)\n  \"points_scored_on_second_chance\" varchar(100)\n  \"points_scored_on_fast_break\" varchar(100)\n}\n\nTable \"basketball_rebounding_stats\" {\n  \"id\" int4 [not null, increment]\n  \"rebounds_total\" varchar(100)\n  \"rebounds_per_game\" varchar(100)\n  \"rebounds_defensive\" varchar(100)\n  \"rebounds_offensive\" varchar(100)\n  \"team_rebounds_total\" varchar(100)\n  \"team_rebounds_per_game\" varchar(100)\n  \"team_rebounds_defensive\" varchar(100)\n  \"team_rebounds_offensive\" varchar(100)\n}\n\nTable \"basketball_team_stats\" {\n  \"id\" int4 [not null, increment]\n  \"timeouts_left\" varchar(100)\n  \"largest_lead\" varchar(100)\n  \"fouls_total\" varchar(100)\n  \"turnover_margin\" varchar(100)\n}\n\nTable \"bookmakers\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_key\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"location_id\" int4\n}\n\nTable \"core_person_stats\" {\n  \"id\" int4 [not null, increment]\n  \"time_played_event\" varchar(40)\n  \"time_played_total\" varchar(40)\n  \"time_played_event_average\" varchar(40)\n  \"events_played\" int4\n  \"events_started\" int4\n  \"position_id\" int4\n}\n\nTable \"core_stats\" {\n  \"id\" int4 [not null, increment]\n  \"score\" varchar(100)\n  \"score_opposing\" varchar(100)\n  \"score_attempts\" varchar(100)\n  \"score_attempts_opposing\" varchar(100)\n  \"score_percentage\" varchar(100)\n  \"score_percentage_opposing\" varchar(100)\n}\n\nTable \"db_info\" {\n  \"version\" varchar(100) [not null, default: 16]\n}\n\nTable \"display_names\" {\n  \"id\" int4 [not null, increment]\n  \"language\" varchar(100) [not null]\n  \"entity_type\" varchar(100) [not null]\n  \"entity_id\" int4 [not null]\n  \"full_name\" varchar(100)\n  \"first_name\" varchar(100)\n  \"middle_name\" varchar(100)\n  \"last_name\" varchar(100)\n  \"alias\" varchar(100)\n  \"abbreviation\" varchar(100)\n  \"short_name\" varchar(100)\n  \"prefix\" varchar(20)\n  \"suffix\" varchar(20)\n}\n\nTable \"document_classes\" {\n  \"id\" int4 [not null, increment]\n  \"name\" varchar(100)\n}\n\nTable \"document_contents\" {\n  \"id\" int4 [not null, increment]\n  \"document_id\" int4 [not null]\n  \"sportsml\" varchar(200)\n  \"abstract\" text\n}\n\nTable \"document_fixtures\" {\n  \"id\" int4 [not null, increment]\n  \"fixture_key\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"name\" varchar(100)\n  \"document_class_id\" int4 [not null]\n}\n\nTable \"document_fixtures_events\" {\n  \"id\" int4 [not null, increment]\n  \"document_fixture_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"latest_document_id\" int4 [not null]\n  \"last_update\" timestamp\n}\n\nTable \"document_package_entry\" {\n  \"id\" int4 [not null, increment]\n  \"document_package_id\" int4 [not null]\n  \"rank\" varchar(100)\n  \"document_id\" int4 [not null]\n  \"headline\" varchar(100)\n  \"short_headline\" varchar(100)\n}\n\nTable \"document_packages\" {\n  \"id\" int4 [not null, increment]\n  \"package_key\" varchar(100)\n  \"package_name\" varchar(100)\n  \"date_time\" date\n}\n\nTable \"documents\" {\n  \"id\" int4 [not null, increment]\n  \"doc_id\" varchar(75) [not null]\n  \"publisher_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"title\" varchar(255)\n  \"language\" varchar(100)\n  \"priority\" varchar(100)\n  \"revision_id\" varchar(75)\n  \"stats_coverage\" varchar(100)\n  \"document_fixture_id\" int4 [not null]\n  \"source_id\" int4\n  \"db_loading_date_time\" timestamp\n}\n\nTable \"documents_media\" {\n  \"id\" int4 [not null, increment]\n  \"document_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n  \"media_caption_id\" int4 [not null]\n}\n\nTable \"events\" {\n  \"id\" int4 [not null, increment]\n  \"event_key\" varchar(100) [not null]\n  \"publisher_id\" int4 [not null]\n  \"start_date_time\" timestamp\n  \"site_id\" int4\n  \"site_alignment\" varchar(100)\n  \"event_status\" varchar(100)\n  \"duration\" varchar(100)\n  \"attendance\" varchar(100)\n  \"last_update\" timestamp\n}\n\nTable \"events_documents\" {\n  \"event_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"events_media\" {\n  \"event_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"events_sub_seasons\" {\n  \"event_id\" int4 [not null]\n  \"sub_season_id\" int4 [not null]\n}\n\nTable \"ice_hockey_action_participants\" {\n  \"id\" int4 [not null, increment]\n  \"ice_hockey_action_play_id\" int4 [not null]\n  \"person_id\" int4 [not null]\n  \"participant_role\" varchar(100) [not null]\n  \"point_credit\" int4\n}\n\nTable \"ice_hockey_action_plays\" {\n  \"id\" int4 [not null, increment]\n  \"ice_hockey_event_state_id\" int4 [not null]\n  \"play_type\" varchar(100)\n  \"score_attempt_type\" varchar(100)\n  \"play_result\" varchar(100)\n  \"comment\" varchar(255)\n}\n\nTable \"ice_hockey_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"shots_power_play_allowed\" varchar(100)\n  \"shots_penalty_shot_allowed\" varchar(100)\n  \"goals_power_play_allowed\" varchar(100)\n  \"goals_penalty_shot_allowed\" varchar(100)\n  \"goals_against_average\" varchar(100)\n  \"saves\" varchar(100)\n  \"save_percentage\" varchar(100)\n  \"penalty_killing_amount\" varchar(100)\n  \"penalty_killing_percentage\" varchar(100)\n  \"shots_blocked\" varchar(100)\n  \"takeaways\" varchar(100)\n  \"shutouts\" varchar(100)\n  \"minutes_penalty_killing\" varchar(100)\n  \"hits\" varchar(100)\n  \"goals_empty_net_allowed\" varchar(100)\n  \"goals_short_handed_allowed\" varchar(100)\n  \"goals_shootout_allowed\" varchar(100)\n  \"shots_shootout_allowed\" varchar(100)\n}\n\nTable \"ice_hockey_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"period_value\" varchar(100)\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"ice_hockey_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"goals_game_winning\" varchar(100)\n  \"goals_game_tying\" varchar(100)\n  \"goals_power_play\" varchar(100)\n  \"goals_short_handed\" varchar(100)\n  \"goals_even_strength\" varchar(100)\n  \"goals_empty_net\" varchar(100)\n  \"goals_overtime\" varchar(100)\n  \"goals_shootout\" varchar(100)\n  \"goals_penalty_shot\" varchar(100)\n  \"assists\" varchar(100)\n  \"points\" varchar(100)\n  \"power_play_amount\" varchar(100)\n  \"power_play_percentage\" varchar(100)\n  \"shots_penalty_shot_taken\" varchar(100)\n  \"shots_penalty_shot_missed\" varchar(100)\n  \"shots_penalty_shot_percentage\" varchar(100)\n  \"giveaways\" varchar(100)\n  \"minutes_power_play\" varchar(100)\n  \"faceoff_wins\" varchar(100)\n  \"faceoff_losses\" varchar(100)\n  \"faceoff_win_percentage\" varchar(100)\n  \"scoring_chances\" varchar(100)\n}\n\nTable \"ice_hockey_player_stats\" {\n  \"id\" int4 [not null, increment]\n  \"plus_minus\" varchar(100)\n}\n\nTable \"injury_phases\" {\n  \"id\" int4 [not null, increment]\n  \"person_id\" int4 [not null]\n  \"injury_status\" varchar(100)\n  \"injury_type\" varchar(100)\n  \"injury_comment\" varchar(100)\n  \"disabled_list\" varchar(100)\n  \"start_date_time\" timestamp\n  \"end_date_time\" timestamp\n  \"season_id\" int4\n  \"phase_type\" varchar(100)\n  \"injury_side\" varchar(100)\n}\n\nTable \"key_aliases\" {\n  \"id\" int4 [not null, increment]\n  \"key_id\" int4 [not null]\n  \"key_root_id\" int4 [not null]\n}\n\nTable \"key_roots\" {\n  \"id\" int4 [not null, increment]\n  \"key_type\" varchar(100)\n}\n\nTable \"latest_revisions\" {\n  \"id\" int4 [not null, increment]\n  \"revision_id\" varchar(75) [not null]\n  \"latest_document_id\" int4 [not null]\n}\n\nTable \"locations\" {\n  \"id\" int4 [not null, increment]\n  \"timezone\" varchar(100)\n  \"latitude\" varchar(100)\n  \"longitude\" varchar(100)\n  \"country_code\" varchar(100)\n}\n\nTable \"media\" {\n  \"id\" int4 [not null, increment]\n  \"object_id\" int4\n  \"source_id\" int4\n  \"revision_id\" int4\n  \"media_type\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"date_time\" varchar(100)\n  \"credit_id\" int4 [not null]\n  \"db_loading_date_time\" timestamp\n  \"creation_location_id\" int4 [not null]\n}\n\nTable \"media_captions\" {\n  \"id\" int4 [not null, increment]\n  \"media_id\" int4 [not null]\n  \"caption_type\" varchar(100)\n  \"caption\" varchar(100)\n  \"caption_author_id\" int4 [not null]\n  \"language\" varchar(100)\n  \"caption_size\" varchar(100)\n}\n\nTable \"media_contents\" {\n  \"id\" int4 [not null, increment]\n  \"media_id\" int4 [not null]\n  \"object\" varchar(100)\n  \"format\" varchar(100)\n  \"mime_type\" varchar(100)\n  \"height\" varchar(100)\n  \"width\" varchar(100)\n  \"duration\" varchar(100)\n  \"file_size\" varchar(100)\n  \"resolution\" varchar(100)\n}\n\nTable \"media_keywords\" {\n  \"id\" int4 [not null, increment]\n  \"keyword\" varchar(100)\n  \"media_id\" int4 [not null]\n}\n\nTable \"motor_racing_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"lap\" varchar(100)\n  \"laps_remaining\" varchar(100)\n  \"time_elapsed\" varchar(100)\n  \"flag_state\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"motor_racing_qualifying_stats\" {\n  \"id\" int4 [not null, increment]\n  \"grid\" varchar(100)\n  \"pole_position\" varchar(100)\n  \"pole_wins\" varchar(100)\n  \"qualifying_speed\" varchar(100)\n  \"qualifying_speed_units\" varchar(100)\n  \"qualifying_time\" varchar(100)\n  \"qualifying_position\" varchar(100)\n}\n\nTable \"motor_racing_race_stats\" {\n  \"id\" int4 [not null, increment]\n  \"time_behind_leader\" varchar(100)\n  \"laps_behind_leader\" varchar(100)\n  \"time_ahead_follower\" varchar(100)\n  \"laps_ahead_follower\" varchar(100)\n  \"time\" varchar(100)\n  \"points\" varchar(100)\n  \"points_rookie\" varchar(100)\n  \"bonus\" varchar(100)\n  \"laps_completed\" varchar(100)\n  \"laps_leading_total\" varchar(100)\n  \"distance_leading\" varchar(100)\n  \"distance_completed\" varchar(100)\n  \"distance_units\" varchar(40)\n  \"speed_average\" varchar(40)\n  \"speed_units\" varchar(40)\n  \"status\" varchar(40)\n  \"finishes_top_5\" varchar(40)\n  \"finishes_top_10\" varchar(40)\n  \"starts\" varchar(40)\n  \"finishes\" varchar(40)\n  \"non_finishes\" varchar(40)\n  \"wins\" varchar(40)\n  \"races_leading\" varchar(40)\n  \"money\" varchar(40)\n  \"money_units\" varchar(40)\n  \"leads_total\" varchar(40)\n}\n\nTable \"outcome_totals\" {\n  \"id\" int4 [not null, increment]\n  \"standing_subgroup_id\" int4 [not null]\n  \"outcome_holder_type\" varchar(100)\n  \"outcome_holder_id\" int4\n  \"rank\" varchar(100)\n  \"wins\" varchar(100)\n  \"losses\" varchar(100)\n  \"ties\" varchar(100)\n  \"undecideds\" varchar(100)\n  \"winning_percentage\" varchar(100)\n  \"points_scored_for\" varchar(100)\n  \"points_scored_against\" varchar(100)\n  \"points_difference\" varchar(100)\n  \"standing_points\" varchar(100)\n  \"streak_type\" varchar(100)\n  \"streak_duration\" varchar(100)\n  \"streak_total\" varchar(100)\n  \"streak_start\" date\n  \"streak_end\" date\n}\n\nTable \"participants_events\" {\n  \"id\" int4 [not null, increment]\n  \"participant_type\" varchar(100) [not null]\n  \"participant_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"alignment\" varchar(100)\n  \"score\" varchar(100)\n  \"event_outcome\" varchar(100)\n  \"rank\" int4\n}\n\nTable \"periods\" {\n  \"id\" int4 [not null, increment]\n  \"participant_event_id\" int4 [not null]\n  \"period_value\" varchar(100)\n  \"score\" varchar(100)\n}\n\nTable \"person_event_metadata\" {\n  \"id\" int4 [not null, increment]\n  \"person_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"status\" varchar(100)\n  \"health\" varchar(100)\n  \"weight\" varchar(100)\n  \"role_id\" int4\n  \"position_id\" int4\n  \"team_id\" int4\n  \"lineup_slot\" int4\n  \"lineup_slot_sequence\" int4\n}\n\nTable \"person_phases\" {\n  \"id\" int4 [not null, increment]\n  \"person_id\" int4 [not null]\n  \"membership_type\" varchar(40) [not null]\n  \"membership_id\" int4 [not null]\n  \"role_id\" int4\n  \"role_status\" varchar(40)\n  \"phase_status\" varchar(40)\n  \"uniform_number\" varchar(20)\n  \"regular_position_id\" int4\n  \"regular_position_depth\" varchar(40)\n  \"height\" varchar(100)\n  \"weight\" varchar(100)\n  \"start_date_time\" timestamp\n  \"start_season_id\" int4\n  \"end_date_time\" timestamp\n  \"end_season_id\" int4\n  \"entry_reason\" varchar(40)\n  \"exit_reason\" varchar(40)\n  \"selection_level\" int4\n  \"selection_sublevel\" int4\n  \"selection_overall\" int4\n}\n\nTable \"persons\" {\n  \"id\" int4 [not null, increment]\n  \"person_key\" varchar(100) [not null]\n  \"publisher_id\" int4 [not null]\n  \"gender\" varchar(20)\n  \"birth_date\" varchar(30)\n  \"death_date\" varchar(30)\n  \"birth_location_id\" int4\n  \"hometown_location_id\" int4\n  \"residence_location_id\" int4\n  \"death_location_id\" int4\n}\n\nTable \"persons_documents\" {\n  \"person_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"persons_media\" {\n  \"person_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"positions\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_id\" int4 [not null]\n  \"abbreviation\" varchar(100) [not null]\n}\n\nTable \"publishers\" {\n  \"id\" int4 [not null, increment]\n  \"publisher_key\" varchar(100) [not null]\n  \"publisher_name\" varchar(100)\n}\n\nTable \"roles\" {\n  \"id\" int4 [not null, increment]\n  \"role_key\" varchar(100) [not null]\n  \"role_name\" varchar(100)\n  \"comment\" varchar(100)\n}\n\nTable \"seasons\" {\n  \"id\" int4 [not null, increment]\n  \"season_key\" int4 [not null]\n  \"publisher_id\" int4 [not null]\n  \"league_id\" int4 [not null]\n  \"start_date_time\" timestamp\n  \"end_date_time\" timestamp\n}\n\nTable \"sites\" {\n  \"id\" int4 [not null, increment]\n  \"site_key\" int4 [not null]\n  \"publisher_id\" int4 [not null]\n  \"location_id\" int4\n}\n\nTable \"soccer_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"shots_penalty_shot_allowed\" varchar(100)\n  \"goals_penalty_shot_allowed\" varchar(100)\n  \"goals_against_average\" varchar(100)\n  \"goals_against_total\" varchar(100)\n  \"saves\" varchar(100)\n  \"save_percentage\" varchar(100)\n  \"catches_punches\" varchar(100)\n  \"shots_on_goal_total\" varchar(100)\n  \"shots_shootout_total\" varchar(100)\n  \"shots_shootout_allowed\" varchar(100)\n  \"shots_blocked\" varchar(100)\n  \"shutouts\" varchar(100)\n}\n\nTable \"soccer_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"period_value\" varchar(100)\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"minutes_elapsed\" varchar(100)\n  \"period_minute_elapsed\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"soccer_foul_stats\" {\n  \"id\" int4 [not null, increment]\n  \"fouls_suffered\" varchar(100)\n  \"fouls_commited\" varchar(100)\n  \"cautions_total\" varchar(100)\n  \"cautions_pending\" varchar(100)\n  \"caution_points_total\" varchar(100)\n  \"caution_points_pending\" varchar(100)\n  \"ejections_total\" varchar(100)\n}\n\nTable \"soccer_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"goals_game_winning\" varchar(100)\n  \"goals_game_tying\" varchar(100)\n  \"goals_overtime\" varchar(100)\n  \"goals_shootout\" varchar(100)\n  \"goals_total\" varchar(100)\n  \"assists_game_winning\" varchar(100)\n  \"assists_game_tying\" varchar(100)\n  \"assists_overtime\" varchar(100)\n  \"assists_total\" varchar(100)\n  \"points\" varchar(100)\n  \"shots_total\" varchar(100)\n  \"shots_on_goal_total\" varchar(100)\n  \"shots_hit_frame\" varchar(100)\n  \"shots_penalty_shot_taken\" varchar(100)\n  \"shots_penalty_shot_scored\" varchar(100)\n  \"shots_penalty_shot_missed\" varchar(40)\n  \"shots_penalty_shot_percentage\" varchar(40)\n  \"shots_shootout_taken\" varchar(40)\n  \"shots_shootout_scored\" varchar(40)\n  \"shots_shootout_missed\" varchar(40)\n  \"shots_shootout_percentage\" varchar(40)\n  \"giveaways\" varchar(40)\n  \"offsides\" varchar(40)\n  \"corner_kicks\" varchar(40)\n  \"hat_tricks\" varchar(40)\n}\n\nTable \"standing_subgroups\" {\n  \"id\" int4 [not null, increment]\n  \"standing_id\" int4 [not null]\n  \"affiliation_id\" int4 [not null]\n}\n\nTable \"standings\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_id\" int4 [not null]\n  \"standing_type\" varchar(100)\n  \"sub_season_id\" int4 [not null]\n  \"last_updated\" varchar(100)\n  \"duration_scope\" varchar(100)\n  \"competition_scope\" varchar(100)\n  \"competition_scope_id\" varchar(100)\n  \"alignment_scope\" varchar(100)\n  \"site_scope\" varchar(100)\n  \"scoping_label\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"source\" varchar(100)\n}\n\nTable \"stats\" {\n  \"id\" int4 [not null, increment]\n  \"stat_repository_type\" varchar(100)\n  \"stat_repository_id\" int4 [not null]\n  \"stat_holder_type\" varchar(100)\n  \"stat_holder_id\" int4\n  \"stat_coverage_type\" varchar(100)\n  \"stat_coverage_id\" int4\n  \"context\" varchar(40) [not null]\n}\n\nTable \"sub_periods\" {\n  \"id\" int4 [not null, increment]\n  \"period_id\" int4 [not null]\n  \"sub_period_value\" varchar(100)\n  \"score\" varchar(100)\n}\n\nTable \"sub_seasons\" {\n  \"id\" int4 [not null, increment]\n  \"sub_season_key\" varchar(100) [not null]\n  \"season_id\" int4 [not null]\n  \"sub_season_type\" varchar(100) [not null]\n  \"start_date_time\" timestamp\n  \"end_date_time\" timestamp\n}\n\nTable \"team_american_football_stats\" {\n  \"id\" int4 [not null, increment]\n  \"yards_per_attempt\" varchar(100)\n  \"average_starting_position\" varchar(100)\n  \"timeouts\" varchar(100)\n  \"time_of_possession\" varchar(100)\n  \"turnover_ratio\" varchar(100)\n}\n\nTable \"team_phases\" {\n  \"id\" int4 [not null, increment]\n  \"team_id\" int4 [not null]\n  \"start_season_id\" int4\n  \"end_season_id\" int4\n  \"affiliation_id\" int4 [not null]\n  \"start_date_time\" varchar(100)\n  \"end_date_time\" varchar(100)\n  \"phase_status\" varchar(40)\n  \"role_id\" int4\n}\n\nTable \"teams\" {\n  \"id\" int4 [not null, increment]\n  \"team_key\" varchar(100) [not null]\n  \"publisher_id\" int4 [not null]\n  \"home_site_id\" int4\n}\n\nTable \"teams_documents\" {\n  \"team_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"teams_media\" {\n  \"team_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"tennis_action_points\" {\n  \"id\" int4 [not null, increment]\n  \"sub_period_id\" varchar(100)\n  \"sequence_number\" varchar(100)\n  \"win_type\" varchar(100)\n}\n\nTable \"tennis_action_volleys\" {\n  \"id\" int4 [not null, increment]\n  \"sequence_number\" varchar(100)\n  \"tennis_action_points_id\" int4\n  \"landing_location\" varchar(100)\n  \"swing_type\" varchar(100)\n  \"result\" varchar(100)\n  \"spin_type\" varchar(100)\n  \"trajectory_details\" varchar(100)\n}\n\nTable \"tennis_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"tennis_set\" varchar(100)\n  \"game\" varchar(100)\n  \"server_person_id\" int4\n  \"server_score\" varchar(100)\n  \"receiver_person_id\" int4\n  \"receiver_score\" varchar(100)\n  \"service_number\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"tennis_return_stats\" {\n  \"id\" int4 [not null, increment]\n  \"returns_played\" varchar(100)\n  \"matches_played\" varchar(100)\n  \"first_service_return_points_won\" varchar(100)\n  \"first_service_return_points_won_pct\" varchar(100)\n  \"second_service_return_points_won\" varchar(100)\n  \"second_service_return_points_won_pct\" varchar(100)\n  \"return_games_played\" varchar(100)\n  \"return_games_won\" varchar(100)\n  \"return_games_won_pct\" varchar(100)\n  \"break_points_played\" varchar(100)\n  \"break_points_converted\" varchar(100)\n  \"break_points_converted_pct\" varchar(100)\n}\n\nTable \"tennis_service_stats\" {\n  \"id\" int4 [not null, increment]\n  \"services_played\" varchar(100)\n  \"matches_played\" varchar(100)\n  \"aces\" varchar(100)\n  \"first_services_good\" varchar(100)\n  \"first_services_good_pct\" varchar(100)\n  \"first_service_points_won\" varchar(100)\n  \"first_service_points_won_pct\" varchar(100)\n  \"second_service_points_won\" varchar(100)\n  \"second_service_points_won_pct\" varchar(100)\n  \"service_games_played\" varchar(100)\n  \"service_games_won\" varchar(100)\n  \"service_games_won_pct\" varchar(100)\n  \"break_points_played\" varchar(100)\n  \"break_points_saved\" varchar(100)\n  \"break_points_saved_pct\" varchar(100)\n}\n\nTable \"wagering_moneylines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line\" varchar(100)\n  \"line_opening\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"wagering_odds_lines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"numerator\" varchar(100)\n  \"denominator\" varchar(100)\n  \"prediction\" varchar(100)\n  \"payout_calculation\" varchar(100)\n  \"payout_amount\" varchar(100)\n}\n\nTable \"wagering_runlines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line\" varchar(100)\n  \"line_opening\" varchar(100)\n  \"line_value\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"wagering_straight_spread_lines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line_value\" varchar(100)\n  \"line_value_opening\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"wagering_total_score_lines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line_over\" varchar(100)\n  \"line_under\" varchar(100)\n  \"total\" varchar(100)\n  \"total_opening\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"weather_conditions\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"temperature\" varchar(100)\n  \"temperature_units\" varchar(40)\n  \"humidity\" varchar(100)\n  \"clouds\" varchar(100)\n  \"wind_direction\" varchar(100)\n  \"wind_velocity\" varchar(100)\n  \"weather_code\" varchar(100)\n}\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/yugabyte/yugabyte-db/blob/master/sample/sportsdb_tables.sql"
      }
    },
    {
      "task_id": "team_roster_management",
      "task_name": "Team Roster Management",
      "category_id": "sports",
      "category_name": "Sports",
      "description": "Manage team rosters with player transfers, injury tracking, performance evaluations, and health status adjustments.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-18",
      "difficulty": "L3",
      "tags": [
        "schema design",
        "data migration",
        "statistical aggregation"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"addresses\" {\n  \"id\" int4 [not null, increment]\n  \"location_id\" int4 [not null]\n  \"language\" varchar(100)\n  \"suite\" varchar(100)\n  \"floor\" varchar(100)\n  \"building\" varchar(100)\n  \"street_number\" varchar(100)\n  \"street_prefix\" varchar(100)\n  \"street\" varchar(100)\n  \"street_suffix\" varchar(100)\n  \"neighborhood\" varchar(100)\n  \"district\" varchar(100)\n  \"locality\" varchar(100)\n  \"county\" varchar(100)\n  \"region\" varchar(100)\n  \"postal_code\" varchar(100)\n  \"country\" varchar(100)\n}\n\nTable \"affiliation_phases\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_id\" int4 [not null]\n  \"ancestor_affiliation_id\" int4\n  \"start_season_id\" int4\n  \"start_date_time\" timestamp\n  \"end_season_id\" int4\n  \"end_date_time\" timestamp\n}\n\nTable \"affiliations\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_key\" varchar(100) [not null]\n  \"affiliation_type\" varchar(100)\n  \"publisher_id\" int4 [not null]\n}\n\nTable \"affiliations_documents\" {\n  \"affiliation_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"affiliations_events\" {\n  \"affiliation_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n}\n\nTable \"affiliations_media\" {\n  \"affiliation_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"american_football_action_participants\" {\n  \"id\" int4 [not null, increment]\n  \"american_football_action_play_id\" int4 [not null]\n  \"person_id\" int4 [not null]\n  \"participant_role\" varchar(100) [not null]\n  \"score_type\" varchar(100)\n  \"field_line\" int4\n  \"yardage\" int4\n  \"score_credit\" int4\n  \"yards_gained\" int4\n}\n\nTable \"american_football_action_plays\" {\n  \"id\" int4 [not null, increment]\n  \"american_football_event_state_id\" int4 [not null]\n  \"play_type\" varchar(100)\n  \"score_attempt_type\" varchar(100)\n  \"drive_result\" varchar(100)\n  \"points\" int4\n  \"comment\" varchar(255)\n}\n\nTable \"american_football_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"tackles_total\" varchar(100)\n  \"tackles_solo\" varchar(100)\n  \"tackles_assists\" varchar(100)\n  \"interceptions_total\" varchar(100)\n  \"interceptions_yards\" varchar(100)\n  \"interceptions_average\" varchar(100)\n  \"interceptions_longest\" varchar(100)\n  \"interceptions_touchdown\" varchar(100)\n  \"quarterback_hurries\" varchar(100)\n  \"sacks_total\" varchar(100)\n  \"sacks_yards\" varchar(100)\n  \"passes_defensed\" varchar(100)\n}\n\nTable \"american_football_down_progress_stats\" {\n  \"id\" int4 [not null, increment]\n  \"first_downs_total\" varchar(100)\n  \"first_downs_pass\" varchar(100)\n  \"first_downs_run\" varchar(100)\n  \"first_downs_penalty\" varchar(100)\n  \"conversions_third_down\" varchar(100)\n  \"conversions_third_down_attempts\" varchar(100)\n  \"conversions_third_down_percentage\" varchar(100)\n  \"conversions_fourth_down\" varchar(100)\n  \"conversions_fourth_down_attempts\" varchar(100)\n  \"conversions_fourth_down_percentage\" varchar(100)\n}\n\nTable \"american_football_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int2\n  \"sequence_number\" int4\n  \"period_value\" int4\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"clock_state\" varchar(100)\n  \"down\" int4\n  \"team_in_possession_id\" int4\n  \"distance_for_1st_down\" int4\n  \"field_side\" varchar(100)\n  \"field_line\" int4\n  \"context\" varchar(40)\n}\n\nTable \"american_football_fumbles_stats\" {\n  \"id\" int4 [not null, increment]\n  \"fumbles_committed\" varchar(100)\n  \"fumbles_forced\" varchar(100)\n  \"fumbles_recovered\" varchar(100)\n  \"fumbles_lost\" varchar(100)\n  \"fumbles_yards_gained\" varchar(100)\n  \"fumbles_own_committed\" varchar(100)\n  \"fumbles_own_recovered\" varchar(100)\n  \"fumbles_own_lost\" varchar(100)\n  \"fumbles_own_yards_gained\" varchar(100)\n  \"fumbles_opposing_committed\" varchar(100)\n  \"fumbles_opposing_recovered\" varchar(100)\n  \"fumbles_opposing_lost\" varchar(100)\n  \"fumbles_opposing_yards_gained\" varchar(100)\n}\n\nTable \"american_football_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"offensive_plays_yards\" varchar(100)\n  \"offensive_plays_number\" varchar(100)\n  \"offensive_plays_average_yards_per\" varchar(100)\n  \"possession_duration\" varchar(100)\n  \"turnovers_giveaway\" varchar(100)\n}\n\nTable \"american_football_passing_stats\" {\n  \"id\" int4 [not null, increment]\n  \"passes_attempts\" varchar(100)\n  \"passes_completions\" varchar(100)\n  \"passes_percentage\" varchar(100)\n  \"passes_yards_gross\" varchar(100)\n  \"passes_yards_net\" varchar(100)\n  \"passes_yards_lost\" varchar(100)\n  \"passes_touchdowns\" varchar(100)\n  \"passes_touchdowns_percentage\" varchar(100)\n  \"passes_interceptions\" varchar(100)\n  \"passes_interceptions_percentage\" varchar(100)\n  \"passes_longest\" varchar(100)\n  \"passes_average_yards_per\" varchar(100)\n  \"passer_rating\" varchar(100)\n  \"receptions_total\" varchar(100)\n  \"receptions_yards\" varchar(100)\n  \"receptions_touchdowns\" varchar(100)\n  \"receptions_first_down\" varchar(100)\n  \"receptions_longest\" varchar(100)\n  \"receptions_average_yards_per\" varchar(100)\n}\n\nTable \"american_football_penalties_stats\" {\n  \"id\" int4 [not null, increment]\n  \"penalties_total\" varchar(100)\n  \"penalty_yards\" varchar(100)\n  \"penalty_first_downs\" varchar(100)\n}\n\nTable \"american_football_rushing_stats\" {\n  \"id\" int4 [not null, increment]\n  \"rushes_attempts\" varchar(100)\n  \"rushes_yards\" varchar(100)\n  \"rushes_touchdowns\" varchar(100)\n  \"rushing_average_yards_per\" varchar(100)\n  \"rushes_first_down\" varchar(100)\n  \"rushes_longest\" varchar(100)\n}\n\nTable \"american_football_sacks_against_stats\" {\n  \"id\" int4 [not null, increment]\n  \"sacks_against_yards\" varchar(100)\n  \"sacks_against_total\" varchar(100)\n}\n\nTable \"american_football_scoring_stats\" {\n  \"id\" int4 [not null, increment]\n  \"touchdowns_total\" varchar(100)\n  \"touchdowns_passing\" varchar(100)\n  \"touchdowns_rushing\" varchar(100)\n  \"touchdowns_special_teams\" varchar(100)\n  \"touchdowns_defensive\" varchar(100)\n  \"extra_points_attempts\" varchar(100)\n  \"extra_points_made\" varchar(100)\n  \"extra_points_missed\" varchar(100)\n  \"extra_points_blocked\" varchar(100)\n  \"field_goal_attempts\" varchar(100)\n  \"field_goals_made\" varchar(100)\n  \"field_goals_missed\" varchar(100)\n  \"field_goals_blocked\" varchar(100)\n  \"safeties_against\" varchar(100)\n  \"two_point_conversions_attempts\" varchar(100)\n  \"two_point_conversions_made\" varchar(100)\n  \"touchbacks_total\" varchar(100)\n}\n\nTable \"american_football_special_teams_stats\" {\n  \"id\" int4 [not null, increment]\n  \"returns_punt_total\" varchar(100)\n  \"returns_punt_yards\" varchar(100)\n  \"returns_punt_average\" varchar(100)\n  \"returns_punt_longest\" varchar(100)\n  \"returns_punt_touchdown\" varchar(100)\n  \"returns_kickoff_total\" varchar(100)\n  \"returns_kickoff_yards\" varchar(100)\n  \"returns_kickoff_average\" varchar(100)\n  \"returns_kickoff_longest\" varchar(100)\n  \"returns_kickoff_touchdown\" varchar(100)\n  \"returns_total\" varchar(100)\n  \"returns_yards\" varchar(100)\n  \"punts_total\" varchar(100)\n  \"punts_yards_gross\" varchar(100)\n  \"punts_yards_net\" varchar(100)\n  \"punts_longest\" varchar(100)\n  \"punts_inside_20\" varchar(100)\n  \"punts_inside_20_percentage\" varchar(100)\n  \"punts_average\" varchar(100)\n  \"punts_blocked\" varchar(100)\n  \"touchbacks_total\" varchar(100)\n  \"touchbacks_total_percentage\" varchar(100)\n  \"touchbacks_kickoffs\" varchar(100)\n  \"touchbacks_kickoffs_percentage\" varchar(100)\n  \"touchbacks_punts\" varchar(100)\n  \"touchbacks_punts_percentage\" varchar(100)\n  \"touchbacks_interceptions\" varchar(100)\n  \"touchbacks_interceptions_percentage\" varchar(100)\n  \"fair_catches\" varchar(100)\n}\n\nTable \"baseball_action_contact_details\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_action_pitch_id\" int4 [not null]\n  \"location\" varchar(100)\n  \"strength\" varchar(100)\n  \"velocity\" int4\n  \"comment\" text\n  \"trajectory_coordinates\" varchar(100)\n  \"trajectory_formula\" varchar(100)\n}\n\nTable \"baseball_action_pitches\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_action_play_id\" int4 [not null]\n  \"sequence_number\" int4\n  \"baseball_defensive_group_id\" int4\n  \"umpire_call\" varchar(100)\n  \"pitch_location\" varchar(100)\n  \"pitch_type\" varchar(100)\n  \"pitch_velocity\" int4\n  \"comment\" text\n  \"trajectory_coordinates\" varchar(100)\n  \"trajectory_formula\" varchar(100)\n  \"ball_type\" varchar(40)\n  \"strike_type\" varchar(40)\n}\n\nTable \"baseball_action_plays\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_event_state_id\" int4 [not null]\n  \"play_type\" varchar(100)\n  \"notation\" varchar(100)\n  \"notation_yaml\" text\n  \"baseball_defensive_group_id\" int4\n  \"comment\" varchar(255)\n  \"runner_on_first_advance\" int4\n  \"runner_on_second_advance\" int4\n  \"runner_on_third_advance\" int4\n  \"outs_recorded\" int4\n  \"rbi\" int4\n  \"runs_scored\" int4\n  \"earned_runs_scored\" varchar(100)\n}\n\nTable \"baseball_action_substitutions\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_event_state_id\" int4 [not null]\n  \"sequence_number\" int4\n  \"person_type\" varchar(100)\n  \"person_original_id\" int4\n  \"person_original_position_id\" int4\n  \"person_original_lineup_slot\" int4\n  \"person_replacing_id\" int4\n  \"person_replacing_position_id\" int4\n  \"person_replacing_lineup_slot\" int4\n  \"substitution_reason\" varchar(100)\n  \"comment\" varchar(100)\n}\n\nTable \"baseball_defensive_group\" {\n  \"id\" int4 [not null, increment]\n}\n\nTable \"baseball_defensive_players\" {\n  \"id\" int4 [not null, increment]\n  \"baseball_defensive_group_id\" int4 [not null]\n  \"player_id\" int4 [not null]\n  \"position_id\" int4 [not null]\n}\n\nTable \"baseball_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"double_plays\" int4\n  \"triple_plays\" int4\n  \"putouts\" int4\n  \"assists\" int4\n  \"errors\" int4\n  \"fielding_percentage\" numeric\n  \"defensive_average\" numeric\n  \"errors_passed_ball\" int4\n  \"errors_catchers_interference\" int4\n}\n\nTable \"baseball_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int2\n  \"sequence_number\" int4\n  \"at_bat_number\" int4\n  \"inning_value\" int4\n  \"inning_half\" varchar(100)\n  \"outs\" int4\n  \"balls\" int4\n  \"strikes\" int4\n  \"runner_on_first_id\" int4\n  \"runner_on_second_id\" int4\n  \"runner_on_third_id\" int4\n  \"runner_on_first\" int2\n  \"runner_on_second\" int2\n  \"runner_on_third\" int2\n  \"runs_this_inning_half\" int4\n  \"pitcher_id\" int4\n  \"batter_id\" int4\n  \"batter_side\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"baseball_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"average\" numeric\n  \"runs_scored\" int4\n  \"at_bats\" int4\n  \"hits\" int4\n  \"rbi\" int4\n  \"total_bases\" int4\n  \"slugging_percentage\" numeric\n  \"bases_on_balls\" int4\n  \"strikeouts\" int4\n  \"left_on_base\" int4\n  \"left_in_scoring_position\" int4\n  \"singles\" int4\n  \"doubles\" int4\n  \"triples\" int4\n  \"home_runs\" int4\n  \"grand_slams\" int4\n  \"at_bats_per_rbi\" numeric\n  \"plate_appearances_per_rbi\" numeric\n  \"at_bats_per_home_run\" numeric\n  \"plate_appearances_per_home_run\" numeric\n  \"sac_flies\" int4\n  \"sac_bunts\" int4\n  \"grounded_into_double_play\" int4\n  \"moved_up\" int4\n  \"on_base_percentage\" numeric\n  \"stolen_bases\" int4\n  \"stolen_bases_caught\" int4\n  \"stolen_bases_average\" numeric\n  \"hit_by_pitch\" int4\n  \"defensive_interferance_reaches\" int4\n  \"on_base_plus_slugging\" numeric\n  \"plate_appearances\" int4\n  \"hits_extra_base\" int4\n}\n\nTable \"baseball_pitching_stats\" {\n  \"id\" int4 [not null, increment]\n  \"runs_allowed\" int4\n  \"singles_allowed\" int4\n  \"doubles_allowed\" int4\n  \"triples_allowed\" int4\n  \"home_runs_allowed\" int4\n  \"innings_pitched\" varchar(20)\n  \"hits\" int4\n  \"earned_runs\" int4\n  \"unearned_runs\" int4\n  \"bases_on_balls\" int4\n  \"bases_on_balls_intentional\" int4\n  \"strikeouts\" int4\n  \"strikeout_to_bb_ratio\" numeric\n  \"number_of_pitches\" int4\n  \"era\" numeric\n  \"inherited_runners_scored\" int4\n  \"pick_offs\" int4\n  \"errors_hit_with_pitch\" int4\n  \"errors_wild_pitch\" int4\n  \"balks\" int4\n  \"wins\" int4\n  \"losses\" int4\n  \"saves\" int4\n  \"shutouts\" int4\n  \"games_complete\" int4\n  \"games_finished\" int4\n  \"winning_percentage\" numeric\n  \"event_credit\" varchar(40)\n  \"save_credit\" varchar(40)\n}\n\nTable \"basketball_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"steals_total\" varchar(100)\n  \"steals_per_game\" varchar(100)\n  \"blocks_total\" varchar(100)\n  \"blocks_per_game\" varchar(100)\n}\n\nTable \"basketball_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"period_value\" varchar(100)\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"basketball_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"field_goals_made\" int4\n  \"field_goals_attempted\" int4\n  \"field_goals_percentage\" varchar(100)\n  \"field_goals_per_game\" varchar(100)\n  \"field_goals_attempted_per_game\" varchar(100)\n  \"field_goals_percentage_adjusted\" varchar(100)\n  \"three_pointers_made\" int4\n  \"three_pointers_attempted\" int4\n  \"three_pointers_percentage\" varchar(100)\n  \"three_pointers_per_game\" varchar(100)\n  \"three_pointers_attempted_per_game\" varchar(100)\n  \"free_throws_made\" varchar(100)\n  \"free_throws_attempted\" varchar(100)\n  \"free_throws_percentage\" varchar(100)\n  \"free_throws_per_game\" varchar(100)\n  \"free_throws_attempted_per_game\" varchar(100)\n  \"points_scored_total\" varchar(100)\n  \"points_scored_per_game\" varchar(100)\n  \"assists_total\" varchar(100)\n  \"assists_per_game\" varchar(100)\n  \"turnovers_total\" varchar(100)\n  \"turnovers_per_game\" varchar(100)\n  \"points_scored_off_turnovers\" varchar(100)\n  \"points_scored_in_paint\" varchar(100)\n  \"points_scored_on_second_chance\" varchar(100)\n  \"points_scored_on_fast_break\" varchar(100)\n}\n\nTable \"basketball_rebounding_stats\" {\n  \"id\" int4 [not null, increment]\n  \"rebounds_total\" varchar(100)\n  \"rebounds_per_game\" varchar(100)\n  \"rebounds_defensive\" varchar(100)\n  \"rebounds_offensive\" varchar(100)\n  \"team_rebounds_total\" varchar(100)\n  \"team_rebounds_per_game\" varchar(100)\n  \"team_rebounds_defensive\" varchar(100)\n  \"team_rebounds_offensive\" varchar(100)\n}\n\nTable \"basketball_team_stats\" {\n  \"id\" int4 [not null, increment]\n  \"timeouts_left\" varchar(100)\n  \"largest_lead\" varchar(100)\n  \"fouls_total\" varchar(100)\n  \"turnover_margin\" varchar(100)\n}\n\nTable \"bookmakers\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_key\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"location_id\" int4\n}\n\nTable \"core_person_stats\" {\n  \"id\" int4 [not null, increment]\n  \"time_played_event\" varchar(40)\n  \"time_played_total\" varchar(40)\n  \"time_played_event_average\" varchar(40)\n  \"events_played\" int4\n  \"events_started\" int4\n  \"position_id\" int4\n}\n\nTable \"core_stats\" {\n  \"id\" int4 [not null, increment]\n  \"score\" varchar(100)\n  \"score_opposing\" varchar(100)\n  \"score_attempts\" varchar(100)\n  \"score_attempts_opposing\" varchar(100)\n  \"score_percentage\" varchar(100)\n  \"score_percentage_opposing\" varchar(100)\n}\n\nTable \"db_info\" {\n  \"version\" varchar(100) [not null, default: 16]\n}\n\nTable \"display_names\" {\n  \"id\" int4 [not null, increment]\n  \"language\" varchar(100) [not null]\n  \"entity_type\" varchar(100) [not null]\n  \"entity_id\" int4 [not null]\n  \"full_name\" varchar(100)\n  \"first_name\" varchar(100)\n  \"middle_name\" varchar(100)\n  \"last_name\" varchar(100)\n  \"alias\" varchar(100)\n  \"abbreviation\" varchar(100)\n  \"short_name\" varchar(100)\n  \"prefix\" varchar(20)\n  \"suffix\" varchar(20)\n}\n\nTable \"document_classes\" {\n  \"id\" int4 [not null, increment]\n  \"name\" varchar(100)\n}\n\nTable \"document_contents\" {\n  \"id\" int4 [not null, increment]\n  \"document_id\" int4 [not null]\n  \"sportsml\" varchar(200)\n  \"abstract\" text\n}\n\nTable \"document_fixtures\" {\n  \"id\" int4 [not null, increment]\n  \"fixture_key\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"name\" varchar(100)\n  \"document_class_id\" int4 [not null]\n}\n\nTable \"document_fixtures_events\" {\n  \"id\" int4 [not null, increment]\n  \"document_fixture_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"latest_document_id\" int4 [not null]\n  \"last_update\" timestamp\n}\n\nTable \"document_package_entry\" {\n  \"id\" int4 [not null, increment]\n  \"document_package_id\" int4 [not null]\n  \"rank\" varchar(100)\n  \"document_id\" int4 [not null]\n  \"headline\" varchar(100)\n  \"short_headline\" varchar(100)\n}\n\nTable \"document_packages\" {\n  \"id\" int4 [not null, increment]\n  \"package_key\" varchar(100)\n  \"package_name\" varchar(100)\n  \"date_time\" date\n}\n\nTable \"documents\" {\n  \"id\" int4 [not null, increment]\n  \"doc_id\" varchar(75) [not null]\n  \"publisher_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"title\" varchar(255)\n  \"language\" varchar(100)\n  \"priority\" varchar(100)\n  \"revision_id\" varchar(75)\n  \"stats_coverage\" varchar(100)\n  \"document_fixture_id\" int4 [not null]\n  \"source_id\" int4\n  \"db_loading_date_time\" timestamp\n}\n\nTable \"documents_media\" {\n  \"id\" int4 [not null, increment]\n  \"document_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n  \"media_caption_id\" int4 [not null]\n}\n\nTable \"events\" {\n  \"id\" int4 [not null, increment]\n  \"event_key\" varchar(100) [not null]\n  \"publisher_id\" int4 [not null]\n  \"start_date_time\" timestamp\n  \"site_id\" int4\n  \"site_alignment\" varchar(100)\n  \"event_status\" varchar(100)\n  \"duration\" varchar(100)\n  \"attendance\" varchar(100)\n  \"last_update\" timestamp\n}\n\nTable \"events_documents\" {\n  \"event_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"events_media\" {\n  \"event_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"events_sub_seasons\" {\n  \"event_id\" int4 [not null]\n  \"sub_season_id\" int4 [not null]\n}\n\nTable \"ice_hockey_action_participants\" {\n  \"id\" int4 [not null, increment]\n  \"ice_hockey_action_play_id\" int4 [not null]\n  \"person_id\" int4 [not null]\n  \"participant_role\" varchar(100) [not null]\n  \"point_credit\" int4\n}\n\nTable \"ice_hockey_action_plays\" {\n  \"id\" int4 [not null, increment]\n  \"ice_hockey_event_state_id\" int4 [not null]\n  \"play_type\" varchar(100)\n  \"score_attempt_type\" varchar(100)\n  \"play_result\" varchar(100)\n  \"comment\" varchar(255)\n}\n\nTable \"ice_hockey_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"shots_power_play_allowed\" varchar(100)\n  \"shots_penalty_shot_allowed\" varchar(100)\n  \"goals_power_play_allowed\" varchar(100)\n  \"goals_penalty_shot_allowed\" varchar(100)\n  \"goals_against_average\" varchar(100)\n  \"saves\" varchar(100)\n  \"save_percentage\" varchar(100)\n  \"penalty_killing_amount\" varchar(100)\n  \"penalty_killing_percentage\" varchar(100)\n  \"shots_blocked\" varchar(100)\n  \"takeaways\" varchar(100)\n  \"shutouts\" varchar(100)\n  \"minutes_penalty_killing\" varchar(100)\n  \"hits\" varchar(100)\n  \"goals_empty_net_allowed\" varchar(100)\n  \"goals_short_handed_allowed\" varchar(100)\n  \"goals_shootout_allowed\" varchar(100)\n  \"shots_shootout_allowed\" varchar(100)\n}\n\nTable \"ice_hockey_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"period_value\" varchar(100)\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"ice_hockey_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"goals_game_winning\" varchar(100)\n  \"goals_game_tying\" varchar(100)\n  \"goals_power_play\" varchar(100)\n  \"goals_short_handed\" varchar(100)\n  \"goals_even_strength\" varchar(100)\n  \"goals_empty_net\" varchar(100)\n  \"goals_overtime\" varchar(100)\n  \"goals_shootout\" varchar(100)\n  \"goals_penalty_shot\" varchar(100)\n  \"assists\" varchar(100)\n  \"points\" varchar(100)\n  \"power_play_amount\" varchar(100)\n  \"power_play_percentage\" varchar(100)\n  \"shots_penalty_shot_taken\" varchar(100)\n  \"shots_penalty_shot_missed\" varchar(100)\n  \"shots_penalty_shot_percentage\" varchar(100)\n  \"giveaways\" varchar(100)\n  \"minutes_power_play\" varchar(100)\n  \"faceoff_wins\" varchar(100)\n  \"faceoff_losses\" varchar(100)\n  \"faceoff_win_percentage\" varchar(100)\n  \"scoring_chances\" varchar(100)\n}\n\nTable \"ice_hockey_player_stats\" {\n  \"id\" int4 [not null, increment]\n  \"plus_minus\" varchar(100)\n}\n\nTable \"injury_phases\" {\n  \"id\" int4 [not null, increment]\n  \"person_id\" int4 [not null]\n  \"injury_status\" varchar(100)\n  \"injury_type\" varchar(100)\n  \"injury_comment\" varchar(100)\n  \"disabled_list\" varchar(100)\n  \"start_date_time\" timestamp\n  \"end_date_time\" timestamp\n  \"season_id\" int4\n  \"phase_type\" varchar(100)\n  \"injury_side\" varchar(100)\n}\n\nTable \"key_aliases\" {\n  \"id\" int4 [not null, increment]\n  \"key_id\" int4 [not null]\n  \"key_root_id\" int4 [not null]\n}\n\nTable \"key_roots\" {\n  \"id\" int4 [not null, increment]\n  \"key_type\" varchar(100)\n}\n\nTable \"latest_revisions\" {\n  \"id\" int4 [not null, increment]\n  \"revision_id\" varchar(75) [not null]\n  \"latest_document_id\" int4 [not null]\n}\n\nTable \"locations\" {\n  \"id\" int4 [not null, increment]\n  \"timezone\" varchar(100)\n  \"latitude\" varchar(100)\n  \"longitude\" varchar(100)\n  \"country_code\" varchar(100)\n}\n\nTable \"media\" {\n  \"id\" int4 [not null, increment]\n  \"object_id\" int4\n  \"source_id\" int4\n  \"revision_id\" int4\n  \"media_type\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"date_time\" varchar(100)\n  \"credit_id\" int4 [not null]\n  \"db_loading_date_time\" timestamp\n  \"creation_location_id\" int4 [not null]\n}\n\nTable \"media_captions\" {\n  \"id\" int4 [not null, increment]\n  \"media_id\" int4 [not null]\n  \"caption_type\" varchar(100)\n  \"caption\" varchar(100)\n  \"caption_author_id\" int4 [not null]\n  \"language\" varchar(100)\n  \"caption_size\" varchar(100)\n}\n\nTable \"media_contents\" {\n  \"id\" int4 [not null, increment]\n  \"media_id\" int4 [not null]\n  \"object\" varchar(100)\n  \"format\" varchar(100)\n  \"mime_type\" varchar(100)\n  \"height\" varchar(100)\n  \"width\" varchar(100)\n  \"duration\" varchar(100)\n  \"file_size\" varchar(100)\n  \"resolution\" varchar(100)\n}\n\nTable \"media_keywords\" {\n  \"id\" int4 [not null, increment]\n  \"keyword\" varchar(100)\n  \"media_id\" int4 [not null]\n}\n\nTable \"motor_racing_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"lap\" varchar(100)\n  \"laps_remaining\" varchar(100)\n  \"time_elapsed\" varchar(100)\n  \"flag_state\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"motor_racing_qualifying_stats\" {\n  \"id\" int4 [not null, increment]\n  \"grid\" varchar(100)\n  \"pole_position\" varchar(100)\n  \"pole_wins\" varchar(100)\n  \"qualifying_speed\" varchar(100)\n  \"qualifying_speed_units\" varchar(100)\n  \"qualifying_time\" varchar(100)\n  \"qualifying_position\" varchar(100)\n}\n\nTable \"motor_racing_race_stats\" {\n  \"id\" int4 [not null, increment]\n  \"time_behind_leader\" varchar(100)\n  \"laps_behind_leader\" varchar(100)\n  \"time_ahead_follower\" varchar(100)\n  \"laps_ahead_follower\" varchar(100)\n  \"time\" varchar(100)\n  \"points\" varchar(100)\n  \"points_rookie\" varchar(100)\n  \"bonus\" varchar(100)\n  \"laps_completed\" varchar(100)\n  \"laps_leading_total\" varchar(100)\n  \"distance_leading\" varchar(100)\n  \"distance_completed\" varchar(100)\n  \"distance_units\" varchar(40)\n  \"speed_average\" varchar(40)\n  \"speed_units\" varchar(40)\n  \"status\" varchar(40)\n  \"finishes_top_5\" varchar(40)\n  \"finishes_top_10\" varchar(40)\n  \"starts\" varchar(40)\n  \"finishes\" varchar(40)\n  \"non_finishes\" varchar(40)\n  \"wins\" varchar(40)\n  \"races_leading\" varchar(40)\n  \"money\" varchar(40)\n  \"money_units\" varchar(40)\n  \"leads_total\" varchar(40)\n}\n\nTable \"outcome_totals\" {\n  \"id\" int4 [not null, increment]\n  \"standing_subgroup_id\" int4 [not null]\n  \"outcome_holder_type\" varchar(100)\n  \"outcome_holder_id\" int4\n  \"rank\" varchar(100)\n  \"wins\" varchar(100)\n  \"losses\" varchar(100)\n  \"ties\" varchar(100)\n  \"undecideds\" varchar(100)\n  \"winning_percentage\" varchar(100)\n  \"points_scored_for\" varchar(100)\n  \"points_scored_against\" varchar(100)\n  \"points_difference\" varchar(100)\n  \"standing_points\" varchar(100)\n  \"streak_type\" varchar(100)\n  \"streak_duration\" varchar(100)\n  \"streak_total\" varchar(100)\n  \"streak_start\" date\n  \"streak_end\" date\n}\n\nTable \"participants_events\" {\n  \"id\" int4 [not null, increment]\n  \"participant_type\" varchar(100) [not null]\n  \"participant_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"alignment\" varchar(100)\n  \"score\" varchar(100)\n  \"event_outcome\" varchar(100)\n  \"rank\" int4\n}\n\nTable \"periods\" {\n  \"id\" int4 [not null, increment]\n  \"participant_event_id\" int4 [not null]\n  \"period_value\" varchar(100)\n  \"score\" varchar(100)\n}\n\nTable \"person_event_metadata\" {\n  \"id\" int4 [not null, increment]\n  \"person_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"status\" varchar(100)\n  \"health\" varchar(100)\n  \"weight\" varchar(100)\n  \"role_id\" int4\n  \"position_id\" int4\n  \"team_id\" int4\n  \"lineup_slot\" int4\n  \"lineup_slot_sequence\" int4\n}\n\nTable \"person_phases\" {\n  \"id\" int4 [not null, increment]\n  \"person_id\" int4 [not null]\n  \"membership_type\" varchar(40) [not null]\n  \"membership_id\" int4 [not null]\n  \"role_id\" int4\n  \"role_status\" varchar(40)\n  \"phase_status\" varchar(40)\n  \"uniform_number\" varchar(20)\n  \"regular_position_id\" int4\n  \"regular_position_depth\" varchar(40)\n  \"height\" varchar(100)\n  \"weight\" varchar(100)\n  \"start_date_time\" timestamp\n  \"start_season_id\" int4\n  \"end_date_time\" timestamp\n  \"end_season_id\" int4\n  \"entry_reason\" varchar(40)\n  \"exit_reason\" varchar(40)\n  \"selection_level\" int4\n  \"selection_sublevel\" int4\n  \"selection_overall\" int4\n}\n\nTable \"persons\" {\n  \"id\" int4 [not null, increment]\n  \"person_key\" varchar(100) [not null]\n  \"publisher_id\" int4 [not null]\n  \"gender\" varchar(20)\n  \"birth_date\" varchar(30)\n  \"death_date\" varchar(30)\n  \"birth_location_id\" int4\n  \"hometown_location_id\" int4\n  \"residence_location_id\" int4\n  \"death_location_id\" int4\n}\n\nTable \"persons_documents\" {\n  \"person_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"persons_media\" {\n  \"person_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"positions\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_id\" int4 [not null]\n  \"abbreviation\" varchar(100) [not null]\n}\n\nTable \"publishers\" {\n  \"id\" int4 [not null, increment]\n  \"publisher_key\" varchar(100) [not null]\n  \"publisher_name\" varchar(100)\n}\n\nTable \"roles\" {\n  \"id\" int4 [not null, increment]\n  \"role_key\" varchar(100) [not null]\n  \"role_name\" varchar(100)\n  \"comment\" varchar(100)\n}\n\nTable \"seasons\" {\n  \"id\" int4 [not null, increment]\n  \"season_key\" int4 [not null]\n  \"publisher_id\" int4 [not null]\n  \"league_id\" int4 [not null]\n  \"start_date_time\" timestamp\n  \"end_date_time\" timestamp\n}\n\nTable \"sites\" {\n  \"id\" int4 [not null, increment]\n  \"site_key\" int4 [not null]\n  \"publisher_id\" int4 [not null]\n  \"location_id\" int4\n}\n\nTable \"soccer_defensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"shots_penalty_shot_allowed\" varchar(100)\n  \"goals_penalty_shot_allowed\" varchar(100)\n  \"goals_against_average\" varchar(100)\n  \"goals_against_total\" varchar(100)\n  \"saves\" varchar(100)\n  \"save_percentage\" varchar(100)\n  \"catches_punches\" varchar(100)\n  \"shots_on_goal_total\" varchar(100)\n  \"shots_shootout_total\" varchar(100)\n  \"shots_shootout_allowed\" varchar(100)\n  \"shots_blocked\" varchar(100)\n  \"shutouts\" varchar(100)\n}\n\nTable \"soccer_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"period_value\" varchar(100)\n  \"period_time_elapsed\" varchar(100)\n  \"period_time_remaining\" varchar(100)\n  \"minutes_elapsed\" varchar(100)\n  \"period_minute_elapsed\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"soccer_foul_stats\" {\n  \"id\" int4 [not null, increment]\n  \"fouls_suffered\" varchar(100)\n  \"fouls_commited\" varchar(100)\n  \"cautions_total\" varchar(100)\n  \"cautions_pending\" varchar(100)\n  \"caution_points_total\" varchar(100)\n  \"caution_points_pending\" varchar(100)\n  \"ejections_total\" varchar(100)\n}\n\nTable \"soccer_offensive_stats\" {\n  \"id\" int4 [not null, increment]\n  \"goals_game_winning\" varchar(100)\n  \"goals_game_tying\" varchar(100)\n  \"goals_overtime\" varchar(100)\n  \"goals_shootout\" varchar(100)\n  \"goals_total\" varchar(100)\n  \"assists_game_winning\" varchar(100)\n  \"assists_game_tying\" varchar(100)\n  \"assists_overtime\" varchar(100)\n  \"assists_total\" varchar(100)\n  \"points\" varchar(100)\n  \"shots_total\" varchar(100)\n  \"shots_on_goal_total\" varchar(100)\n  \"shots_hit_frame\" varchar(100)\n  \"shots_penalty_shot_taken\" varchar(100)\n  \"shots_penalty_shot_scored\" varchar(100)\n  \"shots_penalty_shot_missed\" varchar(40)\n  \"shots_penalty_shot_percentage\" varchar(40)\n  \"shots_shootout_taken\" varchar(40)\n  \"shots_shootout_scored\" varchar(40)\n  \"shots_shootout_missed\" varchar(40)\n  \"shots_shootout_percentage\" varchar(40)\n  \"giveaways\" varchar(40)\n  \"offsides\" varchar(40)\n  \"corner_kicks\" varchar(40)\n  \"hat_tricks\" varchar(40)\n}\n\nTable \"standing_subgroups\" {\n  \"id\" int4 [not null, increment]\n  \"standing_id\" int4 [not null]\n  \"affiliation_id\" int4 [not null]\n}\n\nTable \"standings\" {\n  \"id\" int4 [not null, increment]\n  \"affiliation_id\" int4 [not null]\n  \"standing_type\" varchar(100)\n  \"sub_season_id\" int4 [not null]\n  \"last_updated\" varchar(100)\n  \"duration_scope\" varchar(100)\n  \"competition_scope\" varchar(100)\n  \"competition_scope_id\" varchar(100)\n  \"alignment_scope\" varchar(100)\n  \"site_scope\" varchar(100)\n  \"scoping_label\" varchar(100)\n  \"publisher_id\" int4 [not null]\n  \"source\" varchar(100)\n}\n\nTable \"stats\" {\n  \"id\" int4 [not null, increment]\n  \"stat_repository_type\" varchar(100)\n  \"stat_repository_id\" int4 [not null]\n  \"stat_holder_type\" varchar(100)\n  \"stat_holder_id\" int4\n  \"stat_coverage_type\" varchar(100)\n  \"stat_coverage_id\" int4\n  \"context\" varchar(40) [not null]\n}\n\nTable \"sub_periods\" {\n  \"id\" int4 [not null, increment]\n  \"period_id\" int4 [not null]\n  \"sub_period_value\" varchar(100)\n  \"score\" varchar(100)\n}\n\nTable \"sub_seasons\" {\n  \"id\" int4 [not null, increment]\n  \"sub_season_key\" varchar(100) [not null]\n  \"season_id\" int4 [not null]\n  \"sub_season_type\" varchar(100) [not null]\n  \"start_date_time\" timestamp\n  \"end_date_time\" timestamp\n}\n\nTable \"team_american_football_stats\" {\n  \"id\" int4 [not null, increment]\n  \"yards_per_attempt\" varchar(100)\n  \"average_starting_position\" varchar(100)\n  \"timeouts\" varchar(100)\n  \"time_of_possession\" varchar(100)\n  \"turnover_ratio\" varchar(100)\n}\n\nTable \"team_phases\" {\n  \"id\" int4 [not null, increment]\n  \"team_id\" int4 [not null]\n  \"start_season_id\" int4\n  \"end_season_id\" int4\n  \"affiliation_id\" int4 [not null]\n  \"start_date_time\" varchar(100)\n  \"end_date_time\" varchar(100)\n  \"phase_status\" varchar(40)\n  \"role_id\" int4\n}\n\nTable \"teams\" {\n  \"id\" int4 [not null, increment]\n  \"team_key\" varchar(100) [not null]\n  \"publisher_id\" int4 [not null]\n  \"home_site_id\" int4\n}\n\nTable \"teams_documents\" {\n  \"team_id\" int4 [not null]\n  \"document_id\" int4 [not null]\n}\n\nTable \"teams_media\" {\n  \"team_id\" int4 [not null]\n  \"media_id\" int4 [not null]\n}\n\nTable \"tennis_action_points\" {\n  \"id\" int4 [not null, increment]\n  \"sub_period_id\" varchar(100)\n  \"sequence_number\" varchar(100)\n  \"win_type\" varchar(100)\n}\n\nTable \"tennis_action_volleys\" {\n  \"id\" int4 [not null, increment]\n  \"sequence_number\" varchar(100)\n  \"tennis_action_points_id\" int4\n  \"landing_location\" varchar(100)\n  \"swing_type\" varchar(100)\n  \"result\" varchar(100)\n  \"spin_type\" varchar(100)\n  \"trajectory_details\" varchar(100)\n}\n\nTable \"tennis_event_states\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"current_state\" int4\n  \"sequence_number\" int4\n  \"tennis_set\" varchar(100)\n  \"game\" varchar(100)\n  \"server_person_id\" int4\n  \"server_score\" varchar(100)\n  \"receiver_person_id\" int4\n  \"receiver_score\" varchar(100)\n  \"service_number\" varchar(100)\n  \"context\" varchar(40)\n}\n\nTable \"tennis_return_stats\" {\n  \"id\" int4 [not null, increment]\n  \"returns_played\" varchar(100)\n  \"matches_played\" varchar(100)\n  \"first_service_return_points_won\" varchar(100)\n  \"first_service_return_points_won_pct\" varchar(100)\n  \"second_service_return_points_won\" varchar(100)\n  \"second_service_return_points_won_pct\" varchar(100)\n  \"return_games_played\" varchar(100)\n  \"return_games_won\" varchar(100)\n  \"return_games_won_pct\" varchar(100)\n  \"break_points_played\" varchar(100)\n  \"break_points_converted\" varchar(100)\n  \"break_points_converted_pct\" varchar(100)\n}\n\nTable \"tennis_service_stats\" {\n  \"id\" int4 [not null, increment]\n  \"services_played\" varchar(100)\n  \"matches_played\" varchar(100)\n  \"aces\" varchar(100)\n  \"first_services_good\" varchar(100)\n  \"first_services_good_pct\" varchar(100)\n  \"first_service_points_won\" varchar(100)\n  \"first_service_points_won_pct\" varchar(100)\n  \"second_service_points_won\" varchar(100)\n  \"second_service_points_won_pct\" varchar(100)\n  \"service_games_played\" varchar(100)\n  \"service_games_won\" varchar(100)\n  \"service_games_won_pct\" varchar(100)\n  \"break_points_played\" varchar(100)\n  \"break_points_saved\" varchar(100)\n  \"break_points_saved_pct\" varchar(100)\n}\n\nTable \"wagering_moneylines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line\" varchar(100)\n  \"line_opening\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"wagering_odds_lines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"numerator\" varchar(100)\n  \"denominator\" varchar(100)\n  \"prediction\" varchar(100)\n  \"payout_calculation\" varchar(100)\n  \"payout_amount\" varchar(100)\n}\n\nTable \"wagering_runlines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line\" varchar(100)\n  \"line_opening\" varchar(100)\n  \"line_value\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"wagering_straight_spread_lines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line_value\" varchar(100)\n  \"line_value_opening\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"wagering_total_score_lines\" {\n  \"id\" int4 [not null, increment]\n  \"bookmaker_id\" int4 [not null]\n  \"event_id\" int4 [not null]\n  \"date_time\" timestamp\n  \"team_id\" int4 [not null]\n  \"person_id\" int4\n  \"rotation_key\" varchar(100)\n  \"comment\" varchar(100)\n  \"vigorish\" varchar(100)\n  \"line_over\" varchar(100)\n  \"line_under\" varchar(100)\n  \"total\" varchar(100)\n  \"total_opening\" varchar(100)\n  \"prediction\" varchar(100)\n}\n\nTable \"weather_conditions\" {\n  \"id\" int4 [not null, increment]\n  \"event_id\" int4 [not null]\n  \"temperature\" varchar(100)\n  \"temperature_units\" varchar(40)\n  \"humidity\" varchar(100)\n  \"clouds\" varchar(100)\n  \"wind_direction\" varchar(100)\n  \"wind_velocity\" varchar(100)\n  \"weather_code\" varchar(100)\n}\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/yugabyte/yugabyte-db/blob/master/sample/sportsdb_tables.sql"
      }
    },
    {
      "task_id": "sales_and_music_charts",
      "task_name": "Sales and Music Charts",
      "category_id": "chinook",
      "category_name": "Chinook",
      "description": "Create monthly sales dashboard and top music charts system for tracking business performance and trending content.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "reporting and analytics",
        "statistical aggregation",
        "schema design"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"Album\" {\n  \"AlbumId\" int4 [pk, not null]\n  \"Title\" varchar(160) [not null]\n  \"ArtistId\" int4 [not null]\n\n  Indexes {\n    ArtistId [type: btree, name: \"IFK_AlbumArtistId\"]\n  }\n}\n\nTable \"Artist\" {\n  \"ArtistId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"Customer\" {\n  \"CustomerId\" int4 [pk, not null]\n  \"FirstName\" varchar(40) [not null]\n  \"LastName\" varchar(20) [not null]\n  \"Company\" varchar(80)\n  \"Address\" varchar(70)\n  \"City\" varchar(40)\n  \"State\" varchar(40)\n  \"Country\" varchar(40)\n  \"PostalCode\" varchar(10)\n  \"Phone\" varchar(24)\n  \"Fax\" varchar(24)\n  \"Email\" varchar(60) [not null]\n  \"SupportRepId\" int4\n\n  Indexes {\n    SupportRepId [type: btree, name: \"IFK_CustomerSupportRepId\"]\n  }\n}\n\nTable \"Employee\" {\n  \"EmployeeId\" int4 [pk, not null]\n  \"LastName\" varchar(20) [not null]\n  \"FirstName\" varchar(20) [not null]\n  \"Title\" varchar(30)\n  \"ReportsTo\" int4\n  \"BirthDate\" timestamp\n  \"HireDate\" timestamp\n  \"Address\" varchar(70)\n  \"City\" varchar(40)\n  \"State\" varchar(40)\n  \"Country\" varchar(40)\n  \"PostalCode\" varchar(10)\n  \"Phone\" varchar(24)\n  \"Fax\" varchar(24)\n  \"Email\" varchar(60)\n\n  Indexes {\n    ReportsTo [type: btree, name: \"IFK_EmployeeReportsTo\"]\n  }\n}\n\nTable \"Genre\" {\n  \"GenreId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"Invoice\" {\n  \"InvoiceId\" int4 [pk, not null]\n  \"CustomerId\" int4 [not null]\n  \"InvoiceDate\" timestamp [not null]\n  \"BillingAddress\" varchar(70)\n  \"BillingCity\" varchar(40)\n  \"BillingState\" varchar(40)\n  \"BillingCountry\" varchar(40)\n  \"BillingPostalCode\" varchar(10)\n  \"Total\" numeric(10,2) [not null]\n\n  Indexes {\n    CustomerId [type: btree, name: \"IFK_InvoiceCustomerId\"]\n  }\n}\n\nTable \"InvoiceLine\" {\n  \"InvoiceLineId\" int4 [pk, not null]\n  \"InvoiceId\" int4 [not null]\n  \"TrackId\" int4 [not null]\n  \"UnitPrice\" numeric(10,2) [not null]\n  \"Quantity\" int4 [not null]\n\n  Indexes {\n    InvoiceId [type: btree, name: \"IFK_InvoiceLineInvoiceId\"]\n    TrackId [type: btree, name: \"IFK_InvoiceLineTrackId\"]\n  }\n}\n\nTable \"MediaType\" {\n  \"MediaTypeId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"Playlist\" {\n  \"PlaylistId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"PlaylistTrack\" {\n  \"PlaylistId\" int4 [not null]\n  \"TrackId\" int4 [not null]\n\n  Indexes {\n    (PlaylistId, TrackId) [type: btree, name: \"PK_PlaylistTrack\"]\n    TrackId [type: btree, name: \"IFK_PlaylistTrackTrackId\"]\n  }\n}\n\nTable \"Track\" {\n  \"TrackId\" int4 [pk, not null]\n  \"Name\" varchar(200) [not null]\n  \"AlbumId\" int4\n  \"MediaTypeId\" int4 [not null]\n  \"GenreId\" int4\n  \"Composer\" varchar(220)\n  \"Milliseconds\" int4 [not null]\n  \"Bytes\" int4\n  \"UnitPrice\" numeric(10,2) [not null]\n\n  Indexes {\n    AlbumId [type: btree, name: \"IFK_TrackAlbumId\"]\n    GenreId [type: btree, name: \"IFK_TrackGenreId\"]\n    MediaTypeId [type: btree, name: \"IFK_TrackMediaTypeId\"]\n  }\n}\n\nRef \"FK_AlbumArtistId\":\"Artist\".\"ArtistId\" < \"Album\".\"ArtistId\"\n\nRef \"FK_CustomerSupportRepId\":\"Employee\".\"EmployeeId\" < \"Customer\".\"SupportRepId\"\n\nRef \"FK_EmployeeReportsTo\":\"Employee\".\"EmployeeId\" < \"Employee\".\"ReportsTo\"\n\nRef \"FK_InvoiceCustomerId\":\"Customer\".\"CustomerId\" < \"Invoice\".\"CustomerId\"\n\nRef \"FK_InvoiceLineInvoiceId\":\"Invoice\".\"InvoiceId\" < \"InvoiceLine\".\"InvoiceId\"\n\nRef \"FK_InvoiceLineTrackId\":\"Track\".\"TrackId\" < \"InvoiceLine\".\"TrackId\"\n\nRef \"FK_PlaylistTrackPlaylistId\":\"Playlist\".\"PlaylistId\" < \"PlaylistTrack\".\"PlaylistId\"\n\nRef \"FK_PlaylistTrackTrackId\":\"Track\".\"TrackId\" < \"PlaylistTrack\".\"TrackId\"\n\nRef \"FK_TrackAlbumId\":\"Album\".\"AlbumId\" < \"Track\".\"AlbumId\"\n\nRef \"FK_TrackGenreId\":\"Genre\".\"GenreId\" < \"Track\".\"GenreId\"\n\nRef \"FK_TrackMediaTypeId\":\"MediaType\".\"MediaTypeId\" < \"Track\".\"MediaTypeId\"\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/chinook.sql"
      }
    },
    {
      "task_id": "customer_data_migration",
      "task_name": "Customer Data Migration",
      "category_id": "chinook",
      "category_name": "Chinook",
      "description": "Migrate customer data from acquired company MelodyMart into Chinook database using bulk operations and business logic.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "data migration",
        "transactional operations"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"Album\" {\n  \"AlbumId\" int4 [pk, not null]\n  \"Title\" varchar(160) [not null]\n  \"ArtistId\" int4 [not null]\n\n  Indexes {\n    ArtistId [type: btree, name: \"IFK_AlbumArtistId\"]\n  }\n}\n\nTable \"Artist\" {\n  \"ArtistId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"Customer\" {\n  \"CustomerId\" int4 [pk, not null]\n  \"FirstName\" varchar(40) [not null]\n  \"LastName\" varchar(20) [not null]\n  \"Company\" varchar(80)\n  \"Address\" varchar(70)\n  \"City\" varchar(40)\n  \"State\" varchar(40)\n  \"Country\" varchar(40)\n  \"PostalCode\" varchar(10)\n  \"Phone\" varchar(24)\n  \"Fax\" varchar(24)\n  \"Email\" varchar(60) [not null]\n  \"SupportRepId\" int4\n\n  Indexes {\n    SupportRepId [type: btree, name: \"IFK_CustomerSupportRepId\"]\n  }\n}\n\nTable \"Employee\" {\n  \"EmployeeId\" int4 [pk, not null]\n  \"LastName\" varchar(20) [not null]\n  \"FirstName\" varchar(20) [not null]\n  \"Title\" varchar(30)\n  \"ReportsTo\" int4\n  \"BirthDate\" timestamp\n  \"HireDate\" timestamp\n  \"Address\" varchar(70)\n  \"City\" varchar(40)\n  \"State\" varchar(40)\n  \"Country\" varchar(40)\n  \"PostalCode\" varchar(10)\n  \"Phone\" varchar(24)\n  \"Fax\" varchar(24)\n  \"Email\" varchar(60)\n\n  Indexes {\n    ReportsTo [type: btree, name: \"IFK_EmployeeReportsTo\"]\n  }\n}\n\nTable \"Genre\" {\n  \"GenreId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"Invoice\" {\n  \"InvoiceId\" int4 [pk, not null]\n  \"CustomerId\" int4 [not null]\n  \"InvoiceDate\" timestamp [not null]\n  \"BillingAddress\" varchar(70)\n  \"BillingCity\" varchar(40)\n  \"BillingState\" varchar(40)\n  \"BillingCountry\" varchar(40)\n  \"BillingPostalCode\" varchar(10)\n  \"Total\" numeric(10,2) [not null]\n\n  Indexes {\n    CustomerId [type: btree, name: \"IFK_InvoiceCustomerId\"]\n  }\n}\n\nTable \"InvoiceLine\" {\n  \"InvoiceLineId\" int4 [pk, not null]\n  \"InvoiceId\" int4 [not null]\n  \"TrackId\" int4 [not null]\n  \"UnitPrice\" numeric(10,2) [not null]\n  \"Quantity\" int4 [not null]\n\n  Indexes {\n    InvoiceId [type: btree, name: \"IFK_InvoiceLineInvoiceId\"]\n    TrackId [type: btree, name: \"IFK_InvoiceLineTrackId\"]\n  }\n}\n\nTable \"MediaType\" {\n  \"MediaTypeId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"Playlist\" {\n  \"PlaylistId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"PlaylistTrack\" {\n  \"PlaylistId\" int4 [not null]\n  \"TrackId\" int4 [not null]\n\n  Indexes {\n    (PlaylistId, TrackId) [type: btree, name: \"PK_PlaylistTrack\"]\n    TrackId [type: btree, name: \"IFK_PlaylistTrackTrackId\"]\n  }\n}\n\nTable \"Track\" {\n  \"TrackId\" int4 [pk, not null]\n  \"Name\" varchar(200) [not null]\n  \"AlbumId\" int4\n  \"MediaTypeId\" int4 [not null]\n  \"GenreId\" int4\n  \"Composer\" varchar(220)\n  \"Milliseconds\" int4 [not null]\n  \"Bytes\" int4\n  \"UnitPrice\" numeric(10,2) [not null]\n\n  Indexes {\n    AlbumId [type: btree, name: \"IFK_TrackAlbumId\"]\n    GenreId [type: btree, name: \"IFK_TrackGenreId\"]\n    MediaTypeId [type: btree, name: \"IFK_TrackMediaTypeId\"]\n  }\n}\n\nRef \"FK_AlbumArtistId\":\"Artist\".\"ArtistId\" < \"Album\".\"ArtistId\"\n\nRef \"FK_CustomerSupportRepId\":\"Employee\".\"EmployeeId\" < \"Customer\".\"SupportRepId\"\n\nRef \"FK_EmployeeReportsTo\":\"Employee\".\"EmployeeId\" < \"Employee\".\"ReportsTo\"\n\nRef \"FK_InvoiceCustomerId\":\"Customer\".\"CustomerId\" < \"Invoice\".\"CustomerId\"\n\nRef \"FK_InvoiceLineInvoiceId\":\"Invoice\".\"InvoiceId\" < \"InvoiceLine\".\"InvoiceId\"\n\nRef \"FK_InvoiceLineTrackId\":\"Track\".\"TrackId\" < \"InvoiceLine\".\"TrackId\"\n\nRef \"FK_PlaylistTrackPlaylistId\":\"Playlist\".\"PlaylistId\" < \"PlaylistTrack\".\"PlaylistId\"\n\nRef \"FK_PlaylistTrackTrackId\":\"Track\".\"TrackId\" < \"PlaylistTrack\".\"TrackId\"\n\nRef \"FK_TrackAlbumId\":\"Album\".\"AlbumId\" < \"Track\".\"AlbumId\"\n\nRef \"FK_TrackGenreId\":\"Genre\".\"GenreId\" < \"Track\".\"GenreId\"\n\nRef \"FK_TrackMediaTypeId\":\"MediaType\".\"MediaTypeId\" < \"Track\".\"MediaTypeId\"\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/chinook.sql"
      }
    },
    {
      "task_id": "employee_hierarchy_management",
      "task_name": "Employee Hierarchy Management",
      "category_id": "chinook",
      "category_name": "Chinook",
      "description": "Reorganize employee structure through CRUD operations including inserts, updates, deletes, and customer reassignments.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-12",
      "difficulty": "L3",
      "tags": [
        "data migration",
        "schema design",
        "transactional operations"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"Album\" {\n  \"AlbumId\" int4 [pk, not null]\n  \"Title\" varchar(160) [not null]\n  \"ArtistId\" int4 [not null]\n\n  Indexes {\n    ArtistId [type: btree, name: \"IFK_AlbumArtistId\"]\n  }\n}\n\nTable \"Artist\" {\n  \"ArtistId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"Customer\" {\n  \"CustomerId\" int4 [pk, not null]\n  \"FirstName\" varchar(40) [not null]\n  \"LastName\" varchar(20) [not null]\n  \"Company\" varchar(80)\n  \"Address\" varchar(70)\n  \"City\" varchar(40)\n  \"State\" varchar(40)\n  \"Country\" varchar(40)\n  \"PostalCode\" varchar(10)\n  \"Phone\" varchar(24)\n  \"Fax\" varchar(24)\n  \"Email\" varchar(60) [not null]\n  \"SupportRepId\" int4\n\n  Indexes {\n    SupportRepId [type: btree, name: \"IFK_CustomerSupportRepId\"]\n  }\n}\n\nTable \"Employee\" {\n  \"EmployeeId\" int4 [pk, not null]\n  \"LastName\" varchar(20) [not null]\n  \"FirstName\" varchar(20) [not null]\n  \"Title\" varchar(30)\n  \"ReportsTo\" int4\n  \"BirthDate\" timestamp\n  \"HireDate\" timestamp\n  \"Address\" varchar(70)\n  \"City\" varchar(40)\n  \"State\" varchar(40)\n  \"Country\" varchar(40)\n  \"PostalCode\" varchar(10)\n  \"Phone\" varchar(24)\n  \"Fax\" varchar(24)\n  \"Email\" varchar(60)\n\n  Indexes {\n    ReportsTo [type: btree, name: \"IFK_EmployeeReportsTo\"]\n  }\n}\n\nTable \"Genre\" {\n  \"GenreId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"Invoice\" {\n  \"InvoiceId\" int4 [pk, not null]\n  \"CustomerId\" int4 [not null]\n  \"InvoiceDate\" timestamp [not null]\n  \"BillingAddress\" varchar(70)\n  \"BillingCity\" varchar(40)\n  \"BillingState\" varchar(40)\n  \"BillingCountry\" varchar(40)\n  \"BillingPostalCode\" varchar(10)\n  \"Total\" numeric(10,2) [not null]\n\n  Indexes {\n    CustomerId [type: btree, name: \"IFK_InvoiceCustomerId\"]\n  }\n}\n\nTable \"InvoiceLine\" {\n  \"InvoiceLineId\" int4 [pk, not null]\n  \"InvoiceId\" int4 [not null]\n  \"TrackId\" int4 [not null]\n  \"UnitPrice\" numeric(10,2) [not null]\n  \"Quantity\" int4 [not null]\n\n  Indexes {\n    InvoiceId [type: btree, name: \"IFK_InvoiceLineInvoiceId\"]\n    TrackId [type: btree, name: \"IFK_InvoiceLineTrackId\"]\n  }\n}\n\nTable \"MediaType\" {\n  \"MediaTypeId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"Playlist\" {\n  \"PlaylistId\" int4 [pk, not null]\n  \"Name\" varchar(120)\n}\n\nTable \"PlaylistTrack\" {\n  \"PlaylistId\" int4 [not null]\n  \"TrackId\" int4 [not null]\n\n  Indexes {\n    (PlaylistId, TrackId) [type: btree, name: \"PK_PlaylistTrack\"]\n    TrackId [type: btree, name: \"IFK_PlaylistTrackTrackId\"]\n  }\n}\n\nTable \"Track\" {\n  \"TrackId\" int4 [pk, not null]\n  \"Name\" varchar(200) [not null]\n  \"AlbumId\" int4\n  \"MediaTypeId\" int4 [not null]\n  \"GenreId\" int4\n  \"Composer\" varchar(220)\n  \"Milliseconds\" int4 [not null]\n  \"Bytes\" int4\n  \"UnitPrice\" numeric(10,2) [not null]\n\n  Indexes {\n    AlbumId [type: btree, name: \"IFK_TrackAlbumId\"]\n    GenreId [type: btree, name: \"IFK_TrackGenreId\"]\n    MediaTypeId [type: btree, name: \"IFK_TrackMediaTypeId\"]\n  }\n}\n\nRef \"FK_AlbumArtistId\":\"Artist\".\"ArtistId\" < \"Album\".\"ArtistId\"\n\nRef \"FK_CustomerSupportRepId\":\"Employee\".\"EmployeeId\" < \"Customer\".\"SupportRepId\"\n\nRef \"FK_EmployeeReportsTo\":\"Employee\".\"EmployeeId\" < \"Employee\".\"ReportsTo\"\n\nRef \"FK_InvoiceCustomerId\":\"Customer\".\"CustomerId\" < \"Invoice\".\"CustomerId\"\n\nRef \"FK_InvoiceLineInvoiceId\":\"Invoice\".\"InvoiceId\" < \"InvoiceLine\".\"InvoiceId\"\n\nRef \"FK_InvoiceLineTrackId\":\"Track\".\"TrackId\" < \"InvoiceLine\".\"TrackId\"\n\nRef \"FK_PlaylistTrackPlaylistId\":\"Playlist\".\"PlaylistId\" < \"PlaylistTrack\".\"PlaylistId\"\n\nRef \"FK_PlaylistTrackTrackId\":\"Track\".\"TrackId\" < \"PlaylistTrack\".\"TrackId\"\n\nRef \"FK_TrackAlbumId\":\"Album\".\"AlbumId\" < \"Track\".\"AlbumId\"\n\nRef \"FK_TrackGenreId\":\"Genre\".\"GenreId\" < \"Track\".\"GenreId\"\n\nRef \"FK_TrackMediaTypeId\":\"MediaType\".\"MediaTypeId\" < \"Track\".\"MediaTypeId\"\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/chinook.sql"
      }
    },
    {
      "task_id": "film_inventory_management",
      "task_name": "Film Inventory Management",
      "category_id": "dvdrental",
      "category_name": "DVD Rental",
      "description": "Manage film inventory through multiple operations including adding films, updating records, and cleaning old data.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-20",
      "difficulty": "L3",
      "tags": [
        "data migration",
        "transactional operations",
        "schema design"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Enum \"mpaa_rating\" {\n  \"G\"\n  \"PG\"\n  \"PG-13\"\n  \"R\"\n  \"NC-17\"\n}\n\nTable \"customer\" {\n  \"customer_id\" int4 [pk, not null, increment]\n  \"store_id\" int2 [not null]\n  \"first_name\" varchar(45) [not null]\n  \"last_name\" varchar(45) [not null]\n  \"email\" varchar(50)\n  \"address_id\" int2 [not null]\n  \"activebool\" bool [not null, default: true]\n  \"create_date\" date [not null, default: `('now'::text)::date`]\n  \"last_update\" timestamp [default: `now()`]\n  \"active\" int4\n\n  Indexes {\n    address_id [type: btree, name: \"idx_fk_address_id\"]\n    store_id [type: btree, name: \"idx_fk_store_id\"]\n    last_name [type: btree, name: \"idx_last_name\"]\n  }\n}\n\nTable \"actor\" {\n  \"actor_id\" int4 [pk, not null, increment]\n  \"first_name\" varchar(45) [not null]\n  \"last_name\" varchar(45) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    last_name [type: btree, name: \"idx_actor_last_name\"]\n  }\n}\n\nTable \"category\" {\n  \"category_id\" int4 [pk, not null, increment]\n  \"name\" varchar(25) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nTable \"film\" {\n  \"film_id\" int4 [pk, not null, increment]\n  \"title\" varchar(255) [not null]\n  \"description\" text\n  \"release_year\" int4\n  \"language_id\" int2 [not null]\n  \"rental_duration\" int2 [not null, default: 3]\n  \"rental_rate\" numeric(4,2) [not null, default: 4.99]\n  \"length\" int2\n  \"replacement_cost\" numeric(5,2) [not null, default: 19.99]\n  \"rating\" mpaa_rating [default: 'G']\n  \"last_update\" timestamp [not null, default: `now()`]\n  \"special_features\" \"text[]\"\n  \"fulltext\" tsvector [not null]\n\n  Indexes {\n    fulltext [type: gist, name: \"film_fulltext_idx\"]\n    language_id [type: btree, name: \"idx_fk_language_id\"]\n    title [type: btree, name: \"idx_title\"]\n  }\n}\n\nTable \"film_actor\" {\n  \"actor_id\" int2 [not null]\n  \"film_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (actor_id, film_id) [type: btree, name: \"film_actor_pkey\"]\n    film_id [type: btree, name: \"idx_fk_film_id\"]\n  }\n}\n\nTable \"film_category\" {\n  \"film_id\" int2 [not null]\n  \"category_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (film_id, category_id) [type: btree, name: \"film_category_pkey\"]\n  }\n}\n\nTable \"address\" {\n  \"address_id\" int4 [pk, not null, increment]\n  \"address\" varchar(50) [not null]\n  \"address2\" varchar(50)\n  \"district\" varchar(20) [not null]\n  \"city_id\" int2 [not null]\n  \"postal_code\" varchar(10)\n  \"phone\" varchar(20) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    city_id [type: btree, name: \"idx_fk_city_id\"]\n  }\n}\n\nTable \"city\" {\n  \"city_id\" int4 [pk, not null, increment]\n  \"city\" varchar(50) [not null]\n  \"country_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    country_id [type: btree, name: \"idx_fk_country_id\"]\n  }\n}\n\nTable \"country\" {\n  \"country_id\" int4 [pk, not null, increment]\n  \"country\" varchar(50) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nTable \"inventory\" {\n  \"inventory_id\" int4 [pk, not null, increment]\n  \"film_id\" int2 [not null]\n  \"store_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (store_id, film_id) [type: btree, name: \"idx_store_id_film_id\"]\n  }\n}\n\nTable \"language\" {\n  \"language_id\" int4 [pk, not null, increment]\n  \"name\" bpchar(20) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nTable \"payment\" {\n  \"payment_id\" int4 [pk, not null, increment]\n  \"customer_id\" int2 [not null]\n  \"staff_id\" int2 [not null]\n  \"rental_id\" int4 [not null]\n  \"amount\" numeric(5,2) [not null]\n  \"payment_date\" timestamp [not null]\n\n  Indexes {\n    rental_id [type: btree, name: \"idx_fk_rental_id\"]\n    staff_id [type: btree, name: \"idx_fk_staff_id\"]\n  }\n}\n\nTable \"rental\" {\n  \"rental_id\" int4 [pk, not null, increment]\n  \"rental_date\" timestamp [not null]\n  \"inventory_id\" int4 [not null]\n  \"customer_id\" int2 [not null]\n  \"return_date\" timestamp\n  \"staff_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (rental_date, inventory_id, customer_id) [type: btree, name: \"idx_unq_rental_rental_date_inventory_id_customer_id\"]\n    inventory_id [type: btree, name: \"idx_fk_inventory_id\"]\n  }\n}\n\nTable \"staff\" {\n  \"staff_id\" int4 [pk, not null, increment]\n  \"first_name\" varchar(45) [not null]\n  \"last_name\" varchar(45) [not null]\n  \"address_id\" int2 [not null]\n  \"email\" varchar(50)\n  \"store_id\" int2 [not null]\n  \"active\" bool [not null, default: true]\n  \"username\" varchar(16) [not null]\n  \"password\" varchar(40)\n  \"last_update\" timestamp [not null, default: `now()`]\n  \"picture\" bytea\n}\n\nTable \"store\" {\n  \"store_id\" int4 [pk, not null, increment]\n  \"manager_staff_id\" int2 [unique, not null]\n  \"address_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nRef \"fk_address_city\":\"city\".\"city_id\" < \"address\".\"city_id\"\n\nRef \"fk_city\":\"country\".\"country_id\" < \"city\".\"country_id\"\n\nRef \"customer_address_id_fkey\":\"address\".\"address_id\" < \"customer\".\"address_id\" [update: cascade, delete: restrict]\n\nRef \"film_language_id_fkey\":\"language\".\"language_id\" < \"film\".\"language_id\" [update: cascade, delete: restrict]\n\nRef \"film_actor_actor_id_fkey\":\"actor\".\"actor_id\" < \"film_actor\".\"actor_id\" [update: cascade, delete: restrict]\n\nRef \"film_actor_film_id_fkey\":\"film\".\"film_id\" < \"film_actor\".\"film_id\" [update: cascade, delete: restrict]\n\nRef \"film_category_category_id_fkey\":\"category\".\"category_id\" < \"film_category\".\"category_id\" [update: cascade, delete: restrict]\n\nRef \"film_category_film_id_fkey\":\"film\".\"film_id\" < \"film_category\".\"film_id\" [update: cascade, delete: restrict]\n\nRef \"inventory_film_id_fkey\":\"film\".\"film_id\" < \"inventory\".\"film_id\" [update: cascade, delete: restrict]\n\nRef \"payment_customer_id_fkey\":\"customer\".\"customer_id\" < \"payment\".\"customer_id\" [update: cascade, delete: restrict]\n\nRef \"payment_rental_id_fkey\":\"rental\".\"rental_id\" < \"payment\".\"rental_id\" [update: cascade, delete: set null]\n\nRef \"payment_staff_id_fkey\":\"staff\".\"staff_id\" < \"payment\".\"staff_id\" [update: cascade, delete: restrict]\n\nRef \"rental_customer_id_fkey\":\"customer\".\"customer_id\" < \"rental\".\"customer_id\" [update: cascade, delete: restrict]\n\nRef \"rental_inventory_id_fkey\":\"inventory\".\"inventory_id\" < \"rental\".\"inventory_id\" [update: cascade, delete: restrict]\n\nRef \"rental_staff_id_key\":\"staff\".\"staff_id\" < \"rental\".\"staff_id\"\n\nRef \"staff_address_id_fkey\":\"address\".\"address_id\" < \"staff\".\"address_id\" [update: cascade, delete: restrict]\n\nRef \"store_address_id_fkey\":\"address\".\"address_id\" < \"store\".\"address_id\" [update: cascade, delete: restrict]\n\nRef \"store_manager_staff_id_fkey\":\"staff\".\"staff_id\" < \"store\".\"manager_staff_id\" [update: cascade, delete: restrict]\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/gordonkwokkwok/DVD-Rental-PostgreSQL-Project"
      }
    },
    {
      "task_id": "customer_analysis_fix",
      "task_name": "Customer Analysis Fix",
      "category_id": "dvdrental",
      "category_name": "DVD Rental",
      "description": "Debug and fix customer behavior analysis query producing incorrect rental counts and spending calculations.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-20",
      "difficulty": "L3",
      "tags": [
        "performance optimization",
        "data integrity enforcement"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Enum \"mpaa_rating\" {\n  \"G\"\n  \"PG\"\n  \"PG-13\"\n  \"R\"\n  \"NC-17\"\n}\n\nTable \"customer\" {\n  \"customer_id\" int4 [pk, not null, increment]\n  \"store_id\" int2 [not null]\n  \"first_name\" varchar(45) [not null]\n  \"last_name\" varchar(45) [not null]\n  \"email\" varchar(50)\n  \"address_id\" int2 [not null]\n  \"activebool\" bool [not null, default: true]\n  \"create_date\" date [not null, default: `('now'::text)::date`]\n  \"last_update\" timestamp [default: `now()`]\n  \"active\" int4\n\n  Indexes {\n    address_id [type: btree, name: \"idx_fk_address_id\"]\n    store_id [type: btree, name: \"idx_fk_store_id\"]\n    last_name [type: btree, name: \"idx_last_name\"]\n  }\n}\n\nTable \"actor\" {\n  \"actor_id\" int4 [pk, not null, increment]\n  \"first_name\" varchar(45) [not null]\n  \"last_name\" varchar(45) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    last_name [type: btree, name: \"idx_actor_last_name\"]\n  }\n}\n\nTable \"category\" {\n  \"category_id\" int4 [pk, not null, increment]\n  \"name\" varchar(25) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nTable \"film\" {\n  \"film_id\" int4 [pk, not null, increment]\n  \"title\" varchar(255) [not null]\n  \"description\" text\n  \"release_year\" int4\n  \"language_id\" int2 [not null]\n  \"rental_duration\" int2 [not null, default: 3]\n  \"rental_rate\" numeric(4,2) [not null, default: 4.99]\n  \"length\" int2\n  \"replacement_cost\" numeric(5,2) [not null, default: 19.99]\n  \"rating\" mpaa_rating [default: 'G']\n  \"last_update\" timestamp [not null, default: `now()`]\n  \"special_features\" \"text[]\"\n  \"fulltext\" tsvector [not null]\n\n  Indexes {\n    fulltext [type: gist, name: \"film_fulltext_idx\"]\n    language_id [type: btree, name: \"idx_fk_language_id\"]\n    title [type: btree, name: \"idx_title\"]\n  }\n}\n\nTable \"film_actor\" {\n  \"actor_id\" int2 [not null]\n  \"film_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (actor_id, film_id) [type: btree, name: \"film_actor_pkey\"]\n    film_id [type: btree, name: \"idx_fk_film_id\"]\n  }\n}\n\nTable \"film_category\" {\n  \"film_id\" int2 [not null]\n  \"category_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (film_id, category_id) [type: btree, name: \"film_category_pkey\"]\n  }\n}\n\nTable \"address\" {\n  \"address_id\" int4 [pk, not null, increment]\n  \"address\" varchar(50) [not null]\n  \"address2\" varchar(50)\n  \"district\" varchar(20) [not null]\n  \"city_id\" int2 [not null]\n  \"postal_code\" varchar(10)\n  \"phone\" varchar(20) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    city_id [type: btree, name: \"idx_fk_city_id\"]\n  }\n}\n\nTable \"city\" {\n  \"city_id\" int4 [pk, not null, increment]\n  \"city\" varchar(50) [not null]\n  \"country_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    country_id [type: btree, name: \"idx_fk_country_id\"]\n  }\n}\n\nTable \"country\" {\n  \"country_id\" int4 [pk, not null, increment]\n  \"country\" varchar(50) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nTable \"inventory\" {\n  \"inventory_id\" int4 [pk, not null, increment]\n  \"film_id\" int2 [not null]\n  \"store_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (store_id, film_id) [type: btree, name: \"idx_store_id_film_id\"]\n  }\n}\n\nTable \"language\" {\n  \"language_id\" int4 [pk, not null, increment]\n  \"name\" bpchar(20) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nTable \"payment\" {\n  \"payment_id\" int4 [pk, not null, increment]\n  \"customer_id\" int2 [not null]\n  \"staff_id\" int2 [not null]\n  \"rental_id\" int4 [not null]\n  \"amount\" numeric(5,2) [not null]\n  \"payment_date\" timestamp [not null]\n\n  Indexes {\n    rental_id [type: btree, name: \"idx_fk_rental_id\"]\n    staff_id [type: btree, name: \"idx_fk_staff_id\"]\n  }\n}\n\nTable \"rental\" {\n  \"rental_id\" int4 [pk, not null, increment]\n  \"rental_date\" timestamp [not null]\n  \"inventory_id\" int4 [not null]\n  \"customer_id\" int2 [not null]\n  \"return_date\" timestamp\n  \"staff_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (rental_date, inventory_id, customer_id) [type: btree, name: \"idx_unq_rental_rental_date_inventory_id_customer_id\"]\n    inventory_id [type: btree, name: \"idx_fk_inventory_id\"]\n  }\n}\n\nTable \"staff\" {\n  \"staff_id\" int4 [pk, not null, increment]\n  \"first_name\" varchar(45) [not null]\n  \"last_name\" varchar(45) [not null]\n  \"address_id\" int2 [not null]\n  \"email\" varchar(50)\n  \"store_id\" int2 [not null]\n  \"active\" bool [not null, default: true]\n  \"username\" varchar(16) [not null]\n  \"password\" varchar(40)\n  \"last_update\" timestamp [not null, default: `now()`]\n  \"picture\" bytea\n}\n\nTable \"store\" {\n  \"store_id\" int4 [pk, not null, increment]\n  \"manager_staff_id\" int2 [unique, not null]\n  \"address_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nRef \"fk_address_city\":\"city\".\"city_id\" < \"address\".\"city_id\"\n\nRef \"fk_city\":\"country\".\"country_id\" < \"city\".\"country_id\"\n\nRef \"customer_address_id_fkey\":\"address\".\"address_id\" < \"customer\".\"address_id\" [update: cascade, delete: restrict]\n\nRef \"film_language_id_fkey\":\"language\".\"language_id\" < \"film\".\"language_id\" [update: cascade, delete: restrict]\n\nRef \"film_actor_actor_id_fkey\":\"actor\".\"actor_id\" < \"film_actor\".\"actor_id\" [update: cascade, delete: restrict]\n\nRef \"film_actor_film_id_fkey\":\"film\".\"film_id\" < \"film_actor\".\"film_id\" [update: cascade, delete: restrict]\n\nRef \"film_category_category_id_fkey\":\"category\".\"category_id\" < \"film_category\".\"category_id\" [update: cascade, delete: restrict]\n\nRef \"film_category_film_id_fkey\":\"film\".\"film_id\" < \"film_category\".\"film_id\" [update: cascade, delete: restrict]\n\nRef \"inventory_film_id_fkey\":\"film\".\"film_id\" < \"inventory\".\"film_id\" [update: cascade, delete: restrict]\n\nRef \"payment_customer_id_fkey\":\"customer\".\"customer_id\" < \"payment\".\"customer_id\" [update: cascade, delete: restrict]\n\nRef \"payment_rental_id_fkey\":\"rental\".\"rental_id\" < \"payment\".\"rental_id\" [update: cascade, delete: set null]\n\nRef \"payment_staff_id_fkey\":\"staff\".\"staff_id\" < \"payment\".\"staff_id\" [update: cascade, delete: restrict]\n\nRef \"rental_customer_id_fkey\":\"customer\".\"customer_id\" < \"rental\".\"customer_id\" [update: cascade, delete: restrict]\n\nRef \"rental_inventory_id_fkey\":\"inventory\".\"inventory_id\" < \"rental\".\"inventory_id\" [update: cascade, delete: restrict]\n\nRef \"rental_staff_id_key\":\"staff\".\"staff_id\" < \"rental\".\"staff_id\"\n\nRef \"staff_address_id_fkey\":\"address\".\"address_id\" < \"staff\".\"address_id\" [update: cascade, delete: restrict]\n\nRef \"store_address_id_fkey\":\"address\".\"address_id\" < \"store\".\"address_id\" [update: cascade, delete: restrict]\n\nRef \"store_manager_staff_id_fkey\":\"staff\".\"staff_id\" < \"store\".\"manager_staff_id\" [update: cascade, delete: restrict]\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/gordonkwokkwok/DVD-Rental-PostgreSQL-Project"
      }
    },
    {
      "task_id": "customer_analytics_optimization",
      "task_name": "Customer Analytics Optimization",
      "category_id": "dvdrental",
      "category_name": "DVD Rental",
      "description": "Optimize slow customer analytics query with correlated subqueries causing timeout issues in reporting dashboard.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-20",
      "difficulty": "L3",
      "tags": [
        "performance optimization"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Enum \"mpaa_rating\" {\n  \"G\"\n  \"PG\"\n  \"PG-13\"\n  \"R\"\n  \"NC-17\"\n}\n\nTable \"customer\" {\n  \"customer_id\" int4 [pk, not null, increment]\n  \"store_id\" int2 [not null]\n  \"first_name\" varchar(45) [not null]\n  \"last_name\" varchar(45) [not null]\n  \"email\" varchar(50)\n  \"address_id\" int2 [not null]\n  \"activebool\" bool [not null, default: true]\n  \"create_date\" date [not null, default: `('now'::text)::date`]\n  \"last_update\" timestamp [default: `now()`]\n  \"active\" int4\n\n  Indexes {\n    address_id [type: btree, name: \"idx_fk_address_id\"]\n    store_id [type: btree, name: \"idx_fk_store_id\"]\n    last_name [type: btree, name: \"idx_last_name\"]\n  }\n}\n\nTable \"actor\" {\n  \"actor_id\" int4 [pk, not null, increment]\n  \"first_name\" varchar(45) [not null]\n  \"last_name\" varchar(45) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    last_name [type: btree, name: \"idx_actor_last_name\"]\n  }\n}\n\nTable \"category\" {\n  \"category_id\" int4 [pk, not null, increment]\n  \"name\" varchar(25) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nTable \"film\" {\n  \"film_id\" int4 [pk, not null, increment]\n  \"title\" varchar(255) [not null]\n  \"description\" text\n  \"release_year\" int4\n  \"language_id\" int2 [not null]\n  \"rental_duration\" int2 [not null, default: 3]\n  \"rental_rate\" numeric(4,2) [not null, default: 4.99]\n  \"length\" int2\n  \"replacement_cost\" numeric(5,2) [not null, default: 19.99]\n  \"rating\" mpaa_rating [default: 'G']\n  \"last_update\" timestamp [not null, default: `now()`]\n  \"special_features\" \"text[]\"\n  \"fulltext\" tsvector [not null]\n\n  Indexes {\n    fulltext [type: gist, name: \"film_fulltext_idx\"]\n    language_id [type: btree, name: \"idx_fk_language_id\"]\n    title [type: btree, name: \"idx_title\"]\n  }\n}\n\nTable \"film_actor\" {\n  \"actor_id\" int2 [not null]\n  \"film_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (actor_id, film_id) [type: btree, name: \"film_actor_pkey\"]\n    film_id [type: btree, name: \"idx_fk_film_id\"]\n  }\n}\n\nTable \"film_category\" {\n  \"film_id\" int2 [not null]\n  \"category_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (film_id, category_id) [type: btree, name: \"film_category_pkey\"]\n  }\n}\n\nTable \"address\" {\n  \"address_id\" int4 [pk, not null, increment]\n  \"address\" varchar(50) [not null]\n  \"address2\" varchar(50)\n  \"district\" varchar(20) [not null]\n  \"city_id\" int2 [not null]\n  \"postal_code\" varchar(10)\n  \"phone\" varchar(20) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    city_id [type: btree, name: \"idx_fk_city_id\"]\n  }\n}\n\nTable \"city\" {\n  \"city_id\" int4 [pk, not null, increment]\n  \"city\" varchar(50) [not null]\n  \"country_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    country_id [type: btree, name: \"idx_fk_country_id\"]\n  }\n}\n\nTable \"country\" {\n  \"country_id\" int4 [pk, not null, increment]\n  \"country\" varchar(50) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nTable \"inventory\" {\n  \"inventory_id\" int4 [pk, not null, increment]\n  \"film_id\" int2 [not null]\n  \"store_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (store_id, film_id) [type: btree, name: \"idx_store_id_film_id\"]\n  }\n}\n\nTable \"language\" {\n  \"language_id\" int4 [pk, not null, increment]\n  \"name\" bpchar(20) [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nTable \"payment\" {\n  \"payment_id\" int4 [pk, not null, increment]\n  \"customer_id\" int2 [not null]\n  \"staff_id\" int2 [not null]\n  \"rental_id\" int4 [not null]\n  \"amount\" numeric(5,2) [not null]\n  \"payment_date\" timestamp [not null]\n\n  Indexes {\n    rental_id [type: btree, name: \"idx_fk_rental_id\"]\n    staff_id [type: btree, name: \"idx_fk_staff_id\"]\n  }\n}\n\nTable \"rental\" {\n  \"rental_id\" int4 [pk, not null, increment]\n  \"rental_date\" timestamp [not null]\n  \"inventory_id\" int4 [not null]\n  \"customer_id\" int2 [not null]\n  \"return_date\" timestamp\n  \"staff_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n\n  Indexes {\n    (rental_date, inventory_id, customer_id) [type: btree, name: \"idx_unq_rental_rental_date_inventory_id_customer_id\"]\n    inventory_id [type: btree, name: \"idx_fk_inventory_id\"]\n  }\n}\n\nTable \"staff\" {\n  \"staff_id\" int4 [pk, not null, increment]\n  \"first_name\" varchar(45) [not null]\n  \"last_name\" varchar(45) [not null]\n  \"address_id\" int2 [not null]\n  \"email\" varchar(50)\n  \"store_id\" int2 [not null]\n  \"active\" bool [not null, default: true]\n  \"username\" varchar(16) [not null]\n  \"password\" varchar(40)\n  \"last_update\" timestamp [not null, default: `now()`]\n  \"picture\" bytea\n}\n\nTable \"store\" {\n  \"store_id\" int4 [pk, not null, increment]\n  \"manager_staff_id\" int2 [unique, not null]\n  \"address_id\" int2 [not null]\n  \"last_update\" timestamp [not null, default: `now()`]\n}\n\nRef \"fk_address_city\":\"city\".\"city_id\" < \"address\".\"city_id\"\n\nRef \"fk_city\":\"country\".\"country_id\" < \"city\".\"country_id\"\n\nRef \"customer_address_id_fkey\":\"address\".\"address_id\" < \"customer\".\"address_id\" [update: cascade, delete: restrict]\n\nRef \"film_language_id_fkey\":\"language\".\"language_id\" < \"film\".\"language_id\" [update: cascade, delete: restrict]\n\nRef \"film_actor_actor_id_fkey\":\"actor\".\"actor_id\" < \"film_actor\".\"actor_id\" [update: cascade, delete: restrict]\n\nRef \"film_actor_film_id_fkey\":\"film\".\"film_id\" < \"film_actor\".\"film_id\" [update: cascade, delete: restrict]\n\nRef \"film_category_category_id_fkey\":\"category\".\"category_id\" < \"film_category\".\"category_id\" [update: cascade, delete: restrict]\n\nRef \"film_category_film_id_fkey\":\"film\".\"film_id\" < \"film_category\".\"film_id\" [update: cascade, delete: restrict]\n\nRef \"inventory_film_id_fkey\":\"film\".\"film_id\" < \"inventory\".\"film_id\" [update: cascade, delete: restrict]\n\nRef \"payment_customer_id_fkey\":\"customer\".\"customer_id\" < \"payment\".\"customer_id\" [update: cascade, delete: restrict]\n\nRef \"payment_rental_id_fkey\":\"rental\".\"rental_id\" < \"payment\".\"rental_id\" [update: cascade, delete: set null]\n\nRef \"payment_staff_id_fkey\":\"staff\".\"staff_id\" < \"payment\".\"staff_id\" [update: cascade, delete: restrict]\n\nRef \"rental_customer_id_fkey\":\"customer\".\"customer_id\" < \"rental\".\"customer_id\" [update: cascade, delete: restrict]\n\nRef \"rental_inventory_id_fkey\":\"inventory\".\"inventory_id\" < \"rental\".\"inventory_id\" [update: cascade, delete: restrict]\n\nRef \"rental_staff_id_key\":\"staff\".\"staff_id\" < \"rental\".\"staff_id\"\n\nRef \"staff_address_id_fkey\":\"address\".\"address_id\" < \"staff\".\"address_id\" [update: cascade, delete: restrict]\n\nRef \"store_address_id_fkey\":\"address\".\"address_id\" < \"store\".\"address_id\" [update: cascade, delete: restrict]\n\nRef \"store_manager_staff_id_fkey\":\"staff\".\"staff_id\" < \"store\".\"manager_staff_id\" [update: cascade, delete: restrict]\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/gordonkwokkwok/DVD-Rental-PostgreSQL-Project"
      }
    },
    {
      "task_id": "consistency_enforcement",
      "task_name": "Consistency Enforcement",
      "category_id": "lego",
      "category_name": "Lego",
      "description": "Implement data consistency system ensuring reported part counts match actual inventory using triggers and constraint enforcement.",
      "author": "Jiawei Wang",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "data integrity enforcement",
        "stored procedures and functions",
        "transactional operations"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"lego_colors\" {\n  \"id\" int4 [pk, not null, increment]\n  \"name\" varchar(255) [not null]\n  \"rgb\" varchar(6) [not null]\n  \"is_trans\" bpchar(1) [not null]\n}\n\nTable \"lego_inventories\" {\n  \"id\" int4 [pk, not null, increment]\n  \"version\" int4 [not null]\n  \"set_num\" varchar(255) [not null]\n}\n\nTable \"lego_inventory_parts\" {\n  \"inventory_id\" int4 [not null]\n  \"part_num\" varchar(255) [not null]\n  \"color_id\" int4 [not null]\n  \"quantity\" int4 [not null]\n  \"is_spare\" bool [not null]\n}\n\nTable \"lego_inventory_sets\" {\n  \"inventory_id\" int4 [not null]\n  \"set_num\" varchar(255) [not null]\n  \"quantity\" int4 [not null]\n}\n\nTable \"lego_part_categories\" {\n  \"id\" int4 [pk, not null, increment]\n  \"name\" varchar(255) [not null]\n}\n\nTable \"lego_parts\" {\n  \"part_num\" varchar(255) [pk, not null]\n  \"name\" text [not null]\n  \"part_cat_id\" int4 [not null]\n}\n\nTable \"lego_sets\" {\n  \"set_num\" varchar(255) [pk, not null]\n  \"name\" varchar(255) [not null]\n  \"year\" int4\n  \"theme_id\" int4\n  \"num_parts\" int4\n}\n\nTable \"lego_themes\" {\n  \"id\" int4 [pk, not null, increment]\n  \"name\" varchar(255) [not null]\n  \"parent_id\" int4\n}\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/lego.sql"
      }
    },
    {
      "task_id": "database_security_policies",
      "task_name": "Database Security Policies",
      "category_id": "lego",
      "category_name": "Lego",
      "description": "Implement Row-Level Security policies with role-based access control for theme-based data isolation in LEGO database.",
      "author": "Jiawei Wang",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "security and access control",
        "stored procedures and functions"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"lego_colors\" {\n  \"id\" int4 [pk, not null, increment]\n  \"name\" varchar(255) [not null]\n  \"rgb\" varchar(6) [not null]\n  \"is_trans\" bpchar(1) [not null]\n}\n\nTable \"lego_inventories\" {\n  \"id\" int4 [pk, not null, increment]\n  \"version\" int4 [not null]\n  \"set_num\" varchar(255) [not null]\n}\n\nTable \"lego_inventory_parts\" {\n  \"inventory_id\" int4 [not null]\n  \"part_num\" varchar(255) [not null]\n  \"color_id\" int4 [not null]\n  \"quantity\" int4 [not null]\n  \"is_spare\" bool [not null]\n}\n\nTable \"lego_inventory_sets\" {\n  \"inventory_id\" int4 [not null]\n  \"set_num\" varchar(255) [not null]\n  \"quantity\" int4 [not null]\n}\n\nTable \"lego_part_categories\" {\n  \"id\" int4 [pk, not null, increment]\n  \"name\" varchar(255) [not null]\n}\n\nTable \"lego_parts\" {\n  \"part_num\" varchar(255) [pk, not null]\n  \"name\" text [not null]\n  \"part_cat_id\" int4 [not null]\n}\n\nTable \"lego_sets\" {\n  \"set_num\" varchar(255) [pk, not null]\n  \"name\" varchar(255) [not null]\n  \"year\" int4\n  \"theme_id\" int4\n  \"num_parts\" int4\n}\n\nTable \"lego_themes\" {\n  \"id\" int4 [pk, not null, increment]\n  \"name\" varchar(255) [not null]\n  \"parent_id\" int4\n}\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/lego.sql"
      }
    },
    {
      "task_id": "transactional_inventory_transfer",
      "task_name": "Transactional Inventory Transfer",
      "category_id": "lego",
      "category_name": "Lego",
      "description": "Create PostgreSQL function to handle inventory part transfers between LEGO sets with validation and audit logging.",
      "author": "Jiawei Wang",
      "created_at": "2025-08-16",
      "difficulty": "L3",
      "tags": [
        "transactional operations",
        "stored procedures and functions",
        "audit and compliance"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Table \"lego_colors\" {\n  \"id\" int4 [pk, not null, increment]\n  \"name\" varchar(255) [not null]\n  \"rgb\" varchar(6) [not null]\n  \"is_trans\" bpchar(1) [not null]\n}\n\nTable \"lego_inventories\" {\n  \"id\" int4 [pk, not null, increment]\n  \"version\" int4 [not null]\n  \"set_num\" varchar(255) [not null]\n}\n\nTable \"lego_inventory_parts\" {\n  \"inventory_id\" int4 [not null]\n  \"part_num\" varchar(255) [not null]\n  \"color_id\" int4 [not null]\n  \"quantity\" int4 [not null]\n  \"is_spare\" bool [not null]\n}\n\nTable \"lego_inventory_sets\" {\n  \"inventory_id\" int4 [not null]\n  \"set_num\" varchar(255) [not null]\n  \"quantity\" int4 [not null]\n}\n\nTable \"lego_part_categories\" {\n  \"id\" int4 [pk, not null, increment]\n  \"name\" varchar(255) [not null]\n}\n\nTable \"lego_parts\" {\n  \"part_num\" varchar(255) [pk, not null]\n  \"name\" text [not null]\n  \"part_cat_id\" int4 [not null]\n}\n\nTable \"lego_sets\" {\n  \"set_num\" varchar(255) [pk, not null]\n  \"name\" varchar(255) [not null]\n  \"year\" int4\n  \"theme_id\" int4\n  \"num_parts\" int4\n}\n\nTable \"lego_themes\" {\n  \"id\" int4 [pk, not null, increment]\n  \"name\" varchar(255) [not null]\n  \"parent_id\" int4\n}\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/lego.sql"
      }
    },
    {
      "task_id": "employee_demographics_report",
      "task_name": "Employee Demographics Report",
      "category_id": "employees",
      "category_name": "Employees",
      "description": "Generate comprehensive employee demographics report with gender statistics, age groups, birth months, and hiring trends.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-14",
      "difficulty": "L3",
      "tags": [
        "reporting and analytics",
        "statistical aggregation"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Enum \"employees\".\"employee_gender\" {\n  \"M\"\n  \"F\"\n}\n\nTable \"employees\".\"department\" {\n  \"id\" bpchar(4) [pk, not null]\n  \"dept_name\" varchar(40) [unique, not null]\n}\n\nTable \"employees\".\"department_employee\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16982_primary\"]\n    department_id [type: btree, name: \"idx_16982_dept_no\"]\n  }\n}\n\nTable \"employees\".\"department_manager\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16985_primary\"]\n    department_id [type: btree, name: \"idx_16985_dept_no\"]\n  }\n}\n\nTable \"employees\".\"employee\" {\n  \"id\" int8 [pk, not null, increment]\n  \"birth_date\" date [not null]\n  \"first_name\" varchar(14) [not null]\n  \"last_name\" varchar(16) [not null]\n  \"gender\" employees.employee_gender [not null]\n  \"hire_date\" date [not null]\n}\n\nTable \"employees\".\"salary\" {\n  \"employee_id\" int8 [not null]\n  \"amount\" int8 [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, from_date) [type: btree, name: \"idx_16991_primary\"]\n  }\n}\n\nTable \"employees\".\"title\" {\n  \"employee_id\" int8 [not null]\n  \"title\" varchar(50) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date\n\n  Indexes {\n    (employee_id, title, from_date) [type: btree, name: \"idx_16994_primary\"]\n  }\n}\n\nRef \"dept_emp_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_employee\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_emp_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_employee\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_manager\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_manager\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"salaries_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"salary\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"titles_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"title\".\"employee_id\" [update: restrict, delete: cascade]\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/employees.sql.gz"
      }
    },
    {
      "task_id": "management_structure_analysis",
      "task_name": "Management Structure Analysis",
      "category_id": "employees",
      "category_name": "Employees",
      "description": "Analyze management structure evaluating leadership effectiveness, span of control, and management transitions for succession planning.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "reporting and analytics",
        "statistical aggregation"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Enum \"employees\".\"employee_gender\" {\n  \"M\"\n  \"F\"\n}\n\nTable \"employees\".\"department\" {\n  \"id\" bpchar(4) [pk, not null]\n  \"dept_name\" varchar(40) [unique, not null]\n}\n\nTable \"employees\".\"department_employee\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16982_primary\"]\n    department_id [type: btree, name: \"idx_16982_dept_no\"]\n  }\n}\n\nTable \"employees\".\"department_manager\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16985_primary\"]\n    department_id [type: btree, name: \"idx_16985_dept_no\"]\n  }\n}\n\nTable \"employees\".\"employee\" {\n  \"id\" int8 [pk, not null, increment]\n  \"birth_date\" date [not null]\n  \"first_name\" varchar(14) [not null]\n  \"last_name\" varchar(16) [not null]\n  \"gender\" employees.employee_gender [not null]\n  \"hire_date\" date [not null]\n}\n\nTable \"employees\".\"salary\" {\n  \"employee_id\" int8 [not null]\n  \"amount\" int8 [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, from_date) [type: btree, name: \"idx_16991_primary\"]\n  }\n}\n\nTable \"employees\".\"title\" {\n  \"employee_id\" int8 [not null]\n  \"title\" varchar(50) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date\n\n  Indexes {\n    (employee_id, title, from_date) [type: btree, name: \"idx_16994_primary\"]\n  }\n}\n\nRef \"dept_emp_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_employee\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_emp_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_employee\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_manager\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_manager\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"salaries_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"salary\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"titles_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"title\".\"employee_id\" [update: restrict, delete: cascade]\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/employees.sql.gz"
      }
    },
    {
      "task_id": "employee_project_tracking",
      "task_name": "Employee Project Tracking",
      "category_id": "employees",
      "category_name": "Employees",
      "description": "Build project tracking system from scratch with tables for projects, assignments, milestones, and performance indexes.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-14",
      "difficulty": "L3",
      "tags": [
        "schema design",
        "data migration",
        "data integrity enforcement"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Enum \"employees\".\"employee_gender\" {\n  \"M\"\n  \"F\"\n}\n\nTable \"employees\".\"department\" {\n  \"id\" bpchar(4) [pk, not null]\n  \"dept_name\" varchar(40) [unique, not null]\n}\n\nTable \"employees\".\"department_employee\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16982_primary\"]\n    department_id [type: btree, name: \"idx_16982_dept_no\"]\n  }\n}\n\nTable \"employees\".\"department_manager\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16985_primary\"]\n    department_id [type: btree, name: \"idx_16985_dept_no\"]\n  }\n}\n\nTable \"employees\".\"employee\" {\n  \"id\" int8 [pk, not null, increment]\n  \"birth_date\" date [not null]\n  \"first_name\" varchar(14) [not null]\n  \"last_name\" varchar(16) [not null]\n  \"gender\" employees.employee_gender [not null]\n  \"hire_date\" date [not null]\n}\n\nTable \"employees\".\"salary\" {\n  \"employee_id\" int8 [not null]\n  \"amount\" int8 [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, from_date) [type: btree, name: \"idx_16991_primary\"]\n  }\n}\n\nTable \"employees\".\"title\" {\n  \"employee_id\" int8 [not null]\n  \"title\" varchar(50) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date\n\n  Indexes {\n    (employee_id, title, from_date) [type: btree, name: \"idx_16994_primary\"]\n  }\n}\n\nRef \"dept_emp_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_employee\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_emp_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_employee\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_manager\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_manager\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"salaries_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"salary\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"titles_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"title\".\"employee_id\" [update: restrict, delete: cascade]\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/employees.sql.gz"
      }
    },
    {
      "task_id": "executive_dashboard_automation",
      "task_name": "Executive Dashboard Automation",
      "category_id": "employees",
      "category_name": "Employees",
      "description": "Design automated reporting system with materialized views, stored procedures, and triggers for executive dashboard monitoring.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "reporting and analytics",
        "stored procedures and functions",
        "schema design"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Enum \"employees\".\"employee_gender\" {\n  \"M\"\n  \"F\"\n}\n\nTable \"employees\".\"department\" {\n  \"id\" bpchar(4) [pk, not null]\n  \"dept_name\" varchar(40) [unique, not null]\n}\n\nTable \"employees\".\"department_employee\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16982_primary\"]\n    department_id [type: btree, name: \"idx_16982_dept_no\"]\n  }\n}\n\nTable \"employees\".\"department_manager\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16985_primary\"]\n    department_id [type: btree, name: \"idx_16985_dept_no\"]\n  }\n}\n\nTable \"employees\".\"employee\" {\n  \"id\" int8 [pk, not null, increment]\n  \"birth_date\" date [not null]\n  \"first_name\" varchar(14) [not null]\n  \"last_name\" varchar(16) [not null]\n  \"gender\" employees.employee_gender [not null]\n  \"hire_date\" date [not null]\n}\n\nTable \"employees\".\"salary\" {\n  \"employee_id\" int8 [not null]\n  \"amount\" int8 [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, from_date) [type: btree, name: \"idx_16991_primary\"]\n  }\n}\n\nTable \"employees\".\"title\" {\n  \"employee_id\" int8 [not null]\n  \"title\" varchar(50) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date\n\n  Indexes {\n    (employee_id, title, from_date) [type: btree, name: \"idx_16994_primary\"]\n  }\n}\n\nRef \"dept_emp_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_employee\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_emp_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_employee\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_manager\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_manager\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"salaries_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"salary\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"titles_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"title\".\"employee_id\" [update: restrict, delete: cascade]\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/employees.sql.gz"
      }
    },
    {
      "task_id": "employee_performance_analysis",
      "task_name": "Employee Performance Analysis",
      "category_id": "employees",
      "category_name": "Employees",
      "description": "Create performance evaluation system analyzing career progression patterns and salary equity for promotion and compensation decisions.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-14",
      "difficulty": "L3",
      "tags": [
        "reporting and analytics",
        "statistical aggregation",
        "schema design"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Enum \"employees\".\"employee_gender\" {\n  \"M\"\n  \"F\"\n}\n\nTable \"employees\".\"department\" {\n  \"id\" bpchar(4) [pk, not null]\n  \"dept_name\" varchar(40) [unique, not null]\n}\n\nTable \"employees\".\"department_employee\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16982_primary\"]\n    department_id [type: btree, name: \"idx_16982_dept_no\"]\n  }\n}\n\nTable \"employees\".\"department_manager\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16985_primary\"]\n    department_id [type: btree, name: \"idx_16985_dept_no\"]\n  }\n}\n\nTable \"employees\".\"employee\" {\n  \"id\" int8 [pk, not null, increment]\n  \"birth_date\" date [not null]\n  \"first_name\" varchar(14) [not null]\n  \"last_name\" varchar(16) [not null]\n  \"gender\" employees.employee_gender [not null]\n  \"hire_date\" date [not null]\n}\n\nTable \"employees\".\"salary\" {\n  \"employee_id\" int8 [not null]\n  \"amount\" int8 [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, from_date) [type: btree, name: \"idx_16991_primary\"]\n  }\n}\n\nTable \"employees\".\"title\" {\n  \"employee_id\" int8 [not null]\n  \"title\" varchar(50) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date\n\n  Indexes {\n    (employee_id, title, from_date) [type: btree, name: \"idx_16994_primary\"]\n  }\n}\n\nRef \"dept_emp_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_employee\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_emp_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_employee\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_manager\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_manager\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"salaries_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"salary\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"titles_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"title\".\"employee_id\" [update: restrict, delete: cascade]\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/employees.sql.gz"
      }
    },
    {
      "task_id": "employee_retention_analysis",
      "task_name": "Employee Retention Analysis",
      "category_id": "employees",
      "category_name": "Employees",
      "description": "Analyze retention patterns identifying turnover factors and high-risk employees to develop targeted retention strategies.",
      "author": "Lingxiao Du",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "reporting and analytics",
        "statistical aggregation",
        "audit and compliance"
      ],
      "mcp": [
        "postgres"
      ],
      "meta_data": {
        "stateType": "text",
        "stateContent": "Enum \"employees\".\"employee_gender\" {\n  \"M\"\n  \"F\"\n}\n\nTable \"employees\".\"department\" {\n  \"id\" bpchar(4) [pk, not null]\n  \"dept_name\" varchar(40) [unique, not null]\n}\n\nTable \"employees\".\"department_employee\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16982_primary\"]\n    department_id [type: btree, name: \"idx_16982_dept_no\"]\n  }\n}\n\nTable \"employees\".\"department_manager\" {\n  \"employee_id\" int8 [not null]\n  \"department_id\" bpchar(4) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, department_id) [type: btree, name: \"idx_16985_primary\"]\n    department_id [type: btree, name: \"idx_16985_dept_no\"]\n  }\n}\n\nTable \"employees\".\"employee\" {\n  \"id\" int8 [pk, not null, increment]\n  \"birth_date\" date [not null]\n  \"first_name\" varchar(14) [not null]\n  \"last_name\" varchar(16) [not null]\n  \"gender\" employees.employee_gender [not null]\n  \"hire_date\" date [not null]\n}\n\nTable \"employees\".\"salary\" {\n  \"employee_id\" int8 [not null]\n  \"amount\" int8 [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date [not null]\n\n  Indexes {\n    (employee_id, from_date) [type: btree, name: \"idx_16991_primary\"]\n  }\n}\n\nTable \"employees\".\"title\" {\n  \"employee_id\" int8 [not null]\n  \"title\" varchar(50) [not null]\n  \"from_date\" date [not null]\n  \"to_date\" date\n\n  Indexes {\n    (employee_id, title, from_date) [type: btree, name: \"idx_16994_primary\"]\n  }\n}\n\nRef \"dept_emp_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_employee\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_emp_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_employee\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"department_manager\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"dept_manager_ibfk_2\":\"employees\".\"department\".\"id\" < \"employees\".\"department_manager\".\"department_id\" [update: restrict, delete: cascade]\n\nRef \"salaries_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"salary\".\"employee_id\" [update: restrict, delete: cascade]\n\nRef \"titles_ibfk_1\":\"employees\".\"employee\".\"id\" < \"employees\".\"title\".\"employee_id\" [update: restrict, delete: cascade]\n",
        "stateUrl": null,
        "stateOriginalUrl": "https://github.com/neondatabase-labs/postgres-sample-dbs/blob/main/employees.sql.gz"
      }
    },
    {
      "task_id": "claude_collaboration_analysis",
      "task_name": "Claude Collaboration Analysis",
      "category_id": "claude-code",
      "category_name": "Claude Code",
      "description": "Analyze Claude AI collaboration patterns in commit history and create a comprehensive report of co-authored commits and top collaborators.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "repository analysis"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/claude-code",
        "stateOriginalUrl": "https://github.com/anthropics/claude-code"
      }
    },
    {
      "task_id": "label_color_standardization",
      "task_name": "Label Color Standardization",
      "category_id": "claude-code",
      "category_name": "Claude Code",
      "description": "Standardize label colors from default gray to a comprehensive color scheme for better visual organization and issue triage.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "issue management",
        "workflow automation"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/claude-code",
        "stateOriginalUrl": "https://github.com/anthropics/claude-code"
      }
    },
    {
      "task_id": "feature_commit_tracking",
      "task_name": "Feature Commit Tracking",
      "category_id": "claude-code",
      "category_name": "Claude Code",
      "description": "Research development history across branches to track when specific features were introduced and create comprehensive documentation.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "repository analysis",
        "release coordination"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/claude-code",
        "stateOriginalUrl": "https://github.com/anthropics/claude-code"
      }
    },
    {
      "task_id": "automated_changelog_generation",
      "task_name": "Automated Changelog Generation",
      "category_id": "claude-code",
      "category_name": "Claude Code",
      "description": "Analyze closed issues and open PRs to generate comprehensive documentation including changelog, migration guide, and analysis reports.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "release coordination",
        "workflow automation"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/claude-code",
        "stateOriginalUrl": "https://github.com/anthropics/claude-code"
      }
    },
    {
      "task_id": "critical_issue_hotfix_workflow",
      "task_name": "Critical Issue Hotfix Workflow",
      "category_id": "claude-code",
      "category_name": "Claude Code",
      "description": "Implement a critical issue hotfix workflow for memory and context management issues with proper PR management and issue tracking.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "issue management",
        "pr workflows"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/claude-code",
        "stateOriginalUrl": "https://github.com/anthropics/claude-code"
      }
    },
    {
      "task_id": "issue_management_workflow",
      "task_name": "Issue Management Workflow",
      "category_id": "mcpmark-cicd",
      "category_name": "MCPMark CI/CD",
      "description": "Build intelligent issue management automation with auto-triage, task breakdown for epics, and first-time contributor handling.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "issue management",
        "workflow automation"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/mcpmark-cicd",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "pr_automation_workflow",
      "task_name": "Pr Automation Workflow",
      "category_id": "mcpmark-cicd",
      "category_name": "MCPMark CI/CD",
      "description": "Create comprehensive PR automation with parallel jobs for code quality, testing, security scanning, and build validation.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "pr workflows",
        "ci/cd automation",
        "workflow automation"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/mcpmark-cicd",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "deployment_status_workflow",
      "task_name": "Deployment Status Workflow",
      "category_id": "mcpmark-cicd",
      "category_name": "MCPMark CI/CD",
      "description": "Create deployment status workflow with pre-deployment checks, rollback preparation, and comprehensive issue tracking for deployments.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "ci/cd automation",
        "workflow automation"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/mcpmark-cicd",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "linting_ci_workflow",
      "task_name": "Linting Ci Workflow",
      "category_id": "mcpmark-cicd",
      "category_name": "MCPMark CI/CD",
      "description": "Set up ESLint workflow for code quality enforcement on all pull requests with proper CI integration.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "ci/cd automation",
        "pr workflows"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/mcpmark-cicd",
        "stateOriginalUrl": null
      }
    },
    {
      "task_id": "find_legacy_name",
      "task_name": "Find Legacy Name",
      "category_id": "missing-semester",
      "category_name": "Missing Semester",
      "description": "Find the old name and domain of The Missing Semester course from commit history and document the findings.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "repository analysis"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/missing-semester",
        "stateOriginalUrl": "https://github.com/missing-semester/missing-semester"
      }
    },
    {
      "task_id": "find_salient_file",
      "task_name": "Find Salient File",
      "category_id": "missing-semester",
      "category_name": "Missing Semester",
      "description": "Identify the most frequently modified file in the past 100 commits, excluding GitHub Actions related files, and create an ANSWER.md with the file name.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "commit analysis",
        "file tracking",
        "git history"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/missing-semester",
        "stateOriginalUrl": "https://github.com/missing-semester/missing-semester"
      }
    },
    {
      "task_id": "assign_contributor_labels",
      "task_name": "Assign Contributor Labels",
      "category_id": "missing-semester",
      "category_name": "Missing Semester",
      "description": "Assign labels to open issues and PRs based on contributors mentioned in comments or the most frequent contributor from past 100 commits, using assigned-username format.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "issue management",
        "label automation",
        "contributor analysis"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/missing-semester",
        "stateOriginalUrl": "https://github.com/missing-semester/missing-semester"
      }
    },
    {
      "task_id": "issue_tagging_pr_closure",
      "task_name": "Issue Tagging Pr Closure",
      "category_id": "harmony",
      "category_name": "Harmony",
      "description": "Simulate development workflow where enhancement PR is closed without merging due to technical constraints discovered during implementation.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "issue management",
        "pr workflows"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/harmony",
        "stateOriginalUrl": "https://github.com/openai/harmony"
      }
    },
    {
      "task_id": "issue_pr_commit_workflow",
      "task_name": "Issue Pr Commit Workflow",
      "category_id": "harmony",
      "category_name": "Harmony",
      "description": "Implement complete bug tracking workflow demonstrating proper cross-referencing between issues, PRs, and commits for race condition fixes.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "issue management",
        "pr workflows"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/harmony",
        "stateOriginalUrl": "https://github.com/openai/harmony"
      }
    },
    {
      "task_id": "release_management_workflow",
      "task_name": "Release Management Workflow",
      "category_id": "harmony",
      "category_name": "Harmony",
      "description": "Implement comprehensive release management workflow including bug fixes, version updates, changelog creation, and PR merging.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "release coordination",
        "pr workflows"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/harmony",
        "stateOriginalUrl": "https://github.com/openai/harmony"
      }
    },
    {
      "task_id": "fix_conflict",
      "task_name": "Fix Conflict",
      "category_id": "harmony",
      "category_name": "Harmony",
      "description": "Resolve merge conflicts by creating missing infrastructure and ensuring conflicted PRs can merge cleanly.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "pr workflows"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/harmony",
        "stateOriginalUrl": "https://github.com/openai/harmony"
      }
    },
    {
      "task_id": "multi_branch_commit_aggregation",
      "task_name": "Multi Branch Commit Aggregation",
      "category_id": "harmony",
      "category_name": "Harmony",
      "description": "Generate comprehensive commit history report by aggregating changes from multiple branches with contributor analysis and merge timeline.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "repository analysis",
        "release coordination"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/harmony",
        "stateOriginalUrl": "https://github.com/openai/harmony"
      }
    },
    {
      "task_id": "find_rag_commit",
      "task_name": "Find Rag Commit",
      "category_id": "build_your_own_x",
      "category_name": "Build Your Own X",
      "description": "Identify the specific commit SHA that added the RAG for Document Search entry to the repository.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "repository analysis"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/build-your-own-x",
        "stateOriginalUrl": "https://github.com/codecrafters-io/build-your-own-x"
      }
    },
    {
      "task_id": "find_commit_date",
      "task_name": "Find Commit Date",
      "category_id": "build_your_own_x",
      "category_name": "Build Your Own X",
      "description": "Find when Voxel Engine entries were first created by Daniel Stefanovic and document the date.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "repository analysis"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/build-your-own-x",
        "stateOriginalUrl": "https://github.com/codecrafters-io/build-your-own-x"
      }
    },
    {
      "task_id": "config_parameter_audit",
      "task_name": "Config Parameter Audit",
      "category_id": "easyr1",
      "category_name": "EasyR1",
      "description": "Investigate configuration changes causing training instability by analyzing commits and identifying related memory issues.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "repository analysis",
        "issue management"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/EasyR1",
        "stateOriginalUrl": "https://github.com/hiyouga/EasyR1"
      }
    },
    {
      "task_id": "advanced_branch_strategy",
      "task_name": "Advanced Branch Strategy",
      "category_id": "easyr1",
      "category_name": "EasyR1",
      "description": "Implement GitFlow branching strategy with develop, release, and feature branches to replace risky direct-to-main development.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "pr workflows",
        "release coordination"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/EasyR1",
        "stateOriginalUrl": "https://github.com/hiyouga/EasyR1"
      }
    },
    {
      "task_id": "performance_regression_investigation",
      "task_name": "Performance Regression Investigation",
      "category_id": "easyr1",
      "category_name": "EasyR1",
      "description": "Create systematic investigation workflow for performance regressions with tracking issues, investigation branches, and sub-issues.",
      "author": "Xiangyan Liu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "issue management",
        "repository analysis"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/EasyR1",
        "stateOriginalUrl": "https://github.com/hiyouga/EasyR1"
      }
    },
    {
      "task_id": "qwen3_issue_management",
      "task_name": "Qwen3 Issue Management",
      "category_id": "easyr1",
      "category_name": "EasyR1",
      "description": "Find and reopen all closed Qwen3-related issues with proper tagging for continued tracking and investigation.",
      "author": "Zijian Wu",
      "created_at": "2025-08-15",
      "difficulty": "L3",
      "tags": [
        "issue management"
      ],
      "mcp": [
        "github"
      ],
      "meta_data": {
        "stateType": "url",
        "stateContent": null,
        "stateUrl": "https://github.com/mcpmark-source/EasyR1",
        "stateOriginalUrl": "https://github.com/hiyouga/EasyR1"
      }
    }
  ],
  "count": 127,
  "categories": [
    {
      "id": "build_your_own_x",
      "name": "Build Your Own X"
    },
    {
      "id": "chinook",
      "name": "Chinook"
    },
    {
      "id": "claude-code",
      "name": "Claude Code"
    },
    {
      "id": "company_in_a_box",
      "name": "Company In A Box"
    },
    {
      "id": "computer_science_student_dashboard",
      "name": "Computer Science Student Dashboard"
    },
    {
      "id": "desktop",
      "name": "Desktop"
    },
    {
      "id": "desktop_template",
      "name": "Desktop Template"
    },
    {
      "id": "dvdrental",
      "name": "DVD Rental"
    },
    {
      "id": "easyr1",
      "name": "EasyR1"
    },
    {
      "id": "employees",
      "name": "Employees"
    },
    {
      "id": "eval_web",
      "name": "Eval Web"
    },
    {
      "id": "file_context",
      "name": "File Context"
    },
    {
      "id": "file_property",
      "name": "File Property"
    },
    {
      "id": "folder_structure",
      "name": "Folder Structure"
    },
    {
      "id": "harmony",
      "name": "Harmony"
    },
    {
      "id": "it_trouble_shooting_hub",
      "name": "IT Trouble Shooting Hub"
    },
    {
      "id": "japan_travel_planner",
      "name": "Japan Travel Planner"
    },
    {
      "id": "legal_document",
      "name": "Legal Document"
    },
    {
      "id": "lego",
      "name": "Lego"
    },
    {
      "id": "mcpmark-cicd",
      "name": "MCPMark CI/CD"
    },
    {
      "id": "missing-semester",
      "name": "Missing Semester"
    },
    {
      "id": "online_resume",
      "name": "Online Resume"
    },
    {
      "id": "papers",
      "name": "Papers"
    },
    {
      "id": "python_roadmap",
      "name": "Python Roadmap"
    },
    {
      "id": "reddit",
      "name": "Reddit"
    },
    {
      "id": "security",
      "name": "Security"
    },
    {
      "id": "self_assessment",
      "name": "Self Assessment"
    },
    {
      "id": "shopping",
      "name": "Shopping"
    },
    {
      "id": "shopping_admin",
      "name": "Shopping Admin"
    },
    {
      "id": "sports",
      "name": "Sports"
    },
    {
      "id": "standard_operating_procedure",
      "name": "Standard Operating Procedure"
    },
    {
      "id": "student_database",
      "name": "Student Database"
    },
    {
      "id": "team_projects",
      "name": "Team Projects"
    },
    {
      "id": "threestudio",
      "name": "Threestudio"
    },
    {
      "id": "toronto_guide",
      "name": "Toronto Guide"
    },
    {
      "id": "vectors",
      "name": "Vectors"
    },
    {
      "id": "votenet",
      "name": "Votenet"
    },
    {
      "id": "web_search",
      "name": "Web Search"
    }
  ],
  "tags": [
    "audit and compliance",
    "automated migration",
    "ci/cd automation",
    "code exploration",
    "commit analysis",
    "comparative analysis",
    "conditional filtering",
    "content organization",
    "content submission",
    "content transformation",
    "contributor analysis",
    "cross-reference linking",
    "cross-referencing",
    "data aggregation",
    "data extraction",
    "data integrity enforcement",
    "data migration",
    "database manipulation",
    "file organization",
    "file tracking",
    "git history",
    "inventory management",
    "issue management",
    "label automation",
    "pattern analysis",
    "performance optimization",
    "pr workflows",
    "release coordination",
    "report generation",
    "reporting and analytics",
    "repository analysis",
    "schema design",
    "search aggregation",
    "security and access control",
    "statistical aggregation",
    "status tracking",
    "stored procedures and functions",
    "template population",
    "transactional operations",
    "user interaction",
    "visual formatting",
    "workflow automation"
  ]
}